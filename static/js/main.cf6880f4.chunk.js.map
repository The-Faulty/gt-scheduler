{"version":3,"sources":["constants.ts","log.ts","vendor/ics.js","utils/misc.tsx","components/Button/index.tsx","components/ActionRow/index.tsx","contexts/theme.ts","contexts/terms.ts","data/beans/Course.ts","data/beans/Section.ts","data/beans/SortingOption.ts","data/beans/Oscar.ts","data/types.ts","contexts/schedule.ts","contexts/overlayCrns.ts","components/TimeBlocks/index.tsx","components/Calendar/index.tsx","hooks/usePrevious.ts","components/Modal/index.tsx","components/CombinationContainer/index.tsx","utils/cancellable.ts","components/Course/index.tsx","components/CourseAdd/index.tsx","components/CourseContainer/index.tsx","components/CourseFilter/index.tsx","utils/semesters.ts","components/Spinner/index.tsx","components/Select/index.tsx","hooks/useMedia.ts","hooks/useScreenWidth.ts","data/firebase.ts","components/LoginModal/index.tsx","components/AccountDropdown/index.tsx","components/HeaderActionBar/index.tsx","components/HeaderDisplay/index.tsx","contexts/account.ts","hooks/useHeaderActionBarProps.ts","components/Header/index.tsx","components/Instructor/index.tsx","components/MapView/index.tsx","components/DaySelection/index.tsx","components/Map/index.tsx","components/NavDrawer/index.tsx","components/NavMenu/index.tsx","components/Palette/index.tsx","components/Prerequisite/index.tsx","components/Scheduler/index.tsx","components/Section/index.tsx","components/Tab/index.tsx","components/Attribution/index.tsx","components/Feedback/index.tsx","components/InformationModal/index.tsx","components/ErrorBoundary/index.tsx","components/ErrorDetails/index.tsx","components/ExpandableCard/index.tsx","components/ErrorDisplay/index.tsx","components/ErrorHeader/index.tsx","components/App/navigation.tsx","data/hooks/useDownloadTerms.ts","components/LoadingDisplay/index.tsx","components/App/content.tsx","components/WarningHeader/index.tsx","components/DataNotPersistentNotification/index.tsx","data/hooks/useRawScheduleDataFromStorage.ts","data/hooks/useEnsureValidTerm.ts","data/migrations/1to2.ts","data/legacy/types.ts","data/legacy/validation.ts","data/migrations/cookiesTo1.ts","data/migrations/index.ts","data/hooks/useUIStateFromStorage.ts","hooks/useLocalStorageNoSync.ts","data/hooks/useRawScheduleDataFromFirebase.ts","components/AppDataLoader/stages.tsx","data/hooks/useMigrateScheduleData.ts","data/hooks/useFirebaseAuth.ts","data/hooks/useScheduleDataProducer.ts","data/hooks/useExtractTermScheduleData.ts","data/hooks/useDownloadOscarData.ts","data/hooks/useExtractScheduleVersion.ts","components/AppDataLoader/index.tsx","data/hooks/useVersionActions.ts","data/hooks/useThemeFromStorage.ts","components/App/index.tsx","hooks/useBodyClass.ts","types.ts","index.tsx"],"names":["OPEN","DAYS","PALETTE","DELIVERY_MODES","CAMPUSES","Video","Online","BACKEND_BASE_URL","DESKTOP_BREAKPOINT","ErrorWithFields","message","source","fields","topMessage","Error","stack","fastSafeStringify","rootError","getRootError","name","console","group","this","error","allFields","getAllFields","Object","keys","length","info","groupEnd","softError","logToConsole","includes","type","rest","__do_not_use_type_in_sentry_it_is_special","Sentry","contexts","fingerprint","ics","uidDomain","prodId","navigator","userAgent","indexOf","SEPARATOR","appVersion","calendarEvents","calendarStart","join","calendarEnd","BYDAY_VALUES","events","calendar","addEvent","subject","description","location","begin","stop","rrule","freq","until","Number","isNaN","Date","parse","interval","parseInt","count","byday","prototype","toString","call","d","filter","elem","pos","start_date","end_date","now_date","start_year","getFullYear","slice","start_month","getMonth","start_day","getDate","start_hours","getHours","start_minutes","getMinutes","start_seconds","getSeconds","end_year","end_month","end_day","end_hours","end_minutes","end_seconds","now_year","now_month","now_day","now_hours","now_minutes","now_seconds","start_time","end_time","rruleString","start","end","now","uDate","toISOString","substring","replace","calendarEvent","splice","push","download","filename","ext","blob","Blob","bb","BlobBuilder","append","getBlob","document","characterSet","saveAs","build","log","stringToTime","string","regexResult","exec","hour","minute","timeToString","time","ampm","hh","mm","padStart","A","timeToShortString","periodToString","period","getRandomColor","colors","flat","Math","random","getContentClassName","color","hasConflictBetween","section1","section2","meetings","some","meeting1","meeting2","day","days","classes","classList","c","simplifyName","tokens","split","shift","pop","unique","array","Array","from","Set","isLab","section","scheduleType","isLecture","humanizeArrayReact","conjunction","String","init","last","trim","serializePrereqs","reqs","openPar","closePar","i","isArray","subClauses","forEach","req","id","isAxiosNetworkError","err","exponentialBackoff","attemptNumber","a","options","DelayFactory","getSanitizedOptions","jitter","numOfAttempts","MAX_SAFE_INTEGER","apply","sleep","amount_ms","Promise","resolve","setTimeout","undefined","OTHER_VERSIONS_NAMES","lexicographicCompare","b","Button","className","disabled","href","onClick","children","rel","target","tabIndex","onKeyDown","event","key","role","ActionRow","label","actions","restProps","flatMap","action","map","icon","styling","dataTip","dataFor","onMouseEnter","onMouseLeave","fixedWidth","style","ThemeContext","React","createContext","next","TermsContext","GPA_CACHE_LOCAL_STORAGE_KEY","Course","oscar","courseId","data","number","title","sections","prereqs","hasLab","onlyLectures","onlyLabs","allInOnes","sectionGroups","term","entries","sectionId","sectionData","Section","matchLabFromId","lab","lecture","startsWith","matchLabFromInstructors","instructors","instructor","associatedLabs","associatedLectures","lonelyLectures","lonelyLabs","distinct","groups","sectionGroupMeetings","sectionGroupHash","JSON","stringify","sectionGroup","hash","rawCache","window","localStorage","getItem","cache","cacheItem","exp","fetchGpaInner","courseGpa","setDate","rawUpdatedCache","setItem","encodedCourse","encodeURIComponent","url","axios","get","responseData","baseId","cleanedId","decodeCourseCritiqueResponse","overall","sum","Map","raw","historicalSectionData","classSizeGroup","class_size_group","rawInstructorName","instructor_name","gpa","GPA","classSizeEstimate","toLowerCase","instructorName","nameSegments","lastName","firstName","instructorGpa","set","gpaMap","averageGpa","course","crn","seating","credits","campus","deliveryMode","gradeBasis","scheduleTypeIndex","campusIndex","attributeIndices","gradeBasisIndex","scheduleTypes","campuses","attributes","attributeIndex","attribute","find","gradeBases","periodIndex","where","locationIndex","dateRangeIndex","periods","locations","dateRange","dateRanges","to","reduce","accum","prevDate","currDate","method","headers","then","response","tableRow","cheerio","load","$","eq","first","text","catch","fill","SortingOption","calculateFactor","Oscar","updatedAt","version","courses","courseMap","crnMap","sortingOptions","caches","periodSegments","cacheIndex","segments","v","setHours","combination","startMap","endMap","tot","min","ends","values","starts","desiredCourses","pinnedCrns","excludedCrns","crnsList","dfs","courseIndex","crns","findCourse","isIncluded","isPinned","hasConflict","crnSection","findSection","pinnedOnlyLecture","pinnedOnlyLab","pinnedAllInOne","iterateTimeBlocks","combinations","sortingOptionIndex","sortingOption","actualSortingOptionsLength","factor","sort","callback","meeting","EMPTY_OSCAR","defaultScheduleData","terms","defaultTermScheduleData","versions","defaultSchedule","colorMap","generateScheduleVersionId","charPool","result","floor","generateRandomId","ScheduleContext","currentVersion","allVersionNames","setTerm","patchSchedule","patch","updateSchedule","setCurrentVersion","addNewVersion","select","deleteVersion","renameVersion","newName","OverlayCrnsContext","makeSizeInfoKey","TimeBlocks","overlay","preview","capture","isAutosized","sizeInfo","useContext","contentClassName","sizeInfoKey","sizeInfoDay","sizeInfoPeriodDay","top","height","width","rowSize","left","rowIndex","backgroundColor","place","effect","Calendar","overlayCrns","crnSizeInfo","updateJoinedRowSizes","periodInfos","seen","curCrn","curPeriod","newRowSize","has","add","period2Info","maxMeetingLen","max","m","dayPeriodInfos","curRowSize","acc","courseSizeInfo","daySizeInfo","_","usePrevious","val","ref","useRef","useEffect","current","Modal","buttons","show","onHide","preserveChildrenWhileHiding","previousChildren","previousShow","derivedChildren","onBackdropClick","renderBackdrop","props","transition","FadeZoom","backdropTransition","Fade","ModalButton","cancel","CSSTransition","timeout","classNames","CombinationContainer","setOverlayCrns","useState","confirmReset","setConfirmReset","handleResetPinnedCrns","useCallback","useMemo","getCombinations","sortedCombinations","sortCombinations","Select","onChange","newSortingOptionIndex","outline","rowCount","rowHeight","rowRenderer","index","textAlign","cancelledSymbol","Symbol","Cancellable","isCancelled","promise","other","race","cancelled","value","onAddCourse","expanded","setExpanded","prereqOpen","setPrereqOpen","paletteShown","setPaletteShown","setGpaMap","isSearching","Boolean","loadOperation","loadCourseGpa","fetchGpa","perform","handleRemoveCourse","newColorMap","handleIncludeSections","hasPrereqs","instructorMap","primaryInstructor","instructorSections","excludedInstructors","every","includedInstructors","prereqControl","nextPrereqOpen","nextExpanded","prereqAction","faShareAlt","transform","infoAction","faInfoCircle","pinnedSections","totalCredits","faPlus","faAngleUp","faAngleDown","faPalette","faTrash","toFixed","Palette","onSelectColor","col","Instructor","Prerequisite","isSortKey","sortKey","CourseAdd","keyword","setKeyword","setFilter","activeIndex","setActiveIndex","inputRef","handleChangeKeyword","e","input","results","toUpperCase","keywordMatch","filterMatch","tags","sortValue","doesFilterMatchCourse","handleAddCourse","toBeExcludedCrns","timeDecided","doesFilterMatchSection","focus","handleKeyDown","preventDefault","handleToggleFilter","tag","handleResetFilter","activeCourse","placeholder","property","labels","CourseFilter","selectedTags","onReset","onToggle","CourseContainer","ago","selectedTag","isTerm","maybeTerm","month","yearAsNumber","monthAsNumber","getSemesterName","year","semester","Spinner","size","mountDelay","actualSize","small","normal","viewBox","cx","cy","r","menuAnchor","desiredItemWidth","onClickNew","newLabel","opened","setOpened","selectedOption","option","inputId","setInputId","inputValue","setInputValue","inputEditAction","setInputEditAction","tryCommit","committedValue","onCommit","abandonEdit","trySetOpened","newOpened","faCaretDown","optionId","optionLabel","AutoFocusInput","Fragment","stopPropagation","faCheck","faTimes","marginRight","LoadingSelect","DropdownMenu","items","useMedia","query","matches","setMatches","useLayoutEffect","media","matchMedia","listener","apiUsed","addEventListener","addListener","removeEventListener","removeListener","previousQuery","previousMatches","useScreenWidth","widthWithUnits","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","isAuthEnabled","auth","db","schedulesCollection","app","firebase","initializeApp","firestore","collection","setPersistence","Auth","Persistence","LOCAL","authProviders","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","GithubAuthProvider","uiConfig","signInFlow","signInOptions","callbacks","signInSuccessWithAuthResult","LoginModalContent","minHeight","firebaseAuth","LoginModal","onAuthStateChanged","user","AccountDropdown","circleContent","state","loginOpen","setLoginOpen","hideLogin","SignedInLabel","faSignOutAlt","signOut","UserInitials","faSignInAlt","faUserCircle","initials","displayName","doc","DOMParser","parseFromString","dangerousDisplayName","documentElement","textContent","regex","match","getInitials","email","fontSize","signedInAs","dangerousName","nameElement","providerText","provider","HeaderActionBar","accountState","onCopyCrns","enableCopyCrns","onExportCalendar","enableExportCalendar","onDownloadCalendar","enableDownloadCalendar","theme","setTheme","handleThemeChange","enableExport","exportActions","faDownload","faCalendarAlt","faPaste","shouldRightAnchorExportDropdown","faAdjust","faGithub","HeaderDisplay","currentTab","onChangeTab","onToggleMenu","tabs","termsState","versionsState","mobile","largeMobile","faBars","onChangeTerm","currentTerm","VersionSelector","tabLabel","tabIdx","Tab","active","deleteConfirm","setDeleteConfirm","faPencilAlt","faTrashAlt","allNamesSet","getNextVersionName","AccountContext","useHeaderActionBarProps","captureRef","handleExport","cal","alert","getTime","getDay","M","T","W","R","F","exportCoursesToCalendar","handleDownload","captureElement","computed","getComputedStyle","getPropertyValue","domtoimage","toBlob","offsetWidth","offsetHeight","downloadShadowCalendar","copy","Header","headerActionBarProps","includeSection","excludeSections","sectionList","instructorPinned","includedSections","excludedSections","excludeTooltipId","faGraduationCap","faBan","pinned","MapView","latitude","longitude","zoom","viewState","setViewState","unknown","coordsToLocationsMap","coords","mapStyle","mapboxApiAccessToken","onViewStateChange","newViewState","coordLocations","lat","long","faMapPin","coordLocation","showZoom","showCompass","isDay","rawDay","LIGHT_COLOR_PALETTE","DARK_COLOR_PALETTE","DaySelection","courseDateMap","activeDay","setActiveDay","daysOfTheWeek","colorPalette","formatTime","adjustedHour","date","padding","timeLabel","times","daysOfWeek","firstMeeting","sortedCourseDateMap","courseDataList","activeLocations","NavDrawer","open","onClose","NavMenu","currentItem","onChangeItem","item","idx","paletteColor","BASE_ITEM_STYLE","content","PrerequisiteEmpty","op","PrerequisiteClauseDisplay","clause","subClause","PrerequisiteOption","operator","PrerequisiteHeader","PrerequisiteItem","isLast","Scheduler","setTabIndex","overlayContextValue","tabTitle","Provider","setSeating","hovering","excludeSection","sect","pinSection","faThumbtack","faChair","afterShow","fetchSeating","newSeating","afterHide","Attribution","Feedback","submit","setSubmit","rating","setRating","feedback","setFeedback","loading","setLoading","faCommentAlt","marginLeft","submitFeedback","InformationModalContent","margin","display","alt","src","lineHeight","opacity","marginBottom","InformationModal","setShow","useLocalStorageState","hasSeen","setHasSeen","ErrorBoundary","reactErrorInfo","setState","fallback","Component","ErrorDetailsField","ReactErrorDetails","errorInfo","BaseErrorDetails","componentStack","LoadingErrorDetails","overview","safeStringify","ExpandableCard","showChildren","setShowChildren","ErrorDisplay","errorDetails","ErrorHeader","faExclamationTriangle","NAV_TABS","AppNavigationContext","currentTabIndex","isDrawerOpen","openDrawer","closeDrawer","AppNavigation","setIsDrawerOpen","contextValue","AppMobileNav","AppMobileNavDisplay","CRAWLER_INDEX_URL","LoadingDisplay","contents","stillLoading","AppContentBase","SkeletonContent","AppContent","memo","AppSkeleton","WarningHeader","faExclamationCircle","DataNotPersistentNotification","onAccept","SCHEDULE_DATA_LOCAL_STORAGE_KEY","isValidTerm","migrate1To2","version1","newData","version1TermData","baseCreatedAtTime","version2TermData","newEntries","version1ScheduleVersion","createdAt","makeCreatedAt","schedule","fromEntries","defaultTermData","isStringArray","field","validateTermData","termData","rawTermData","errors","termDataType","validTermData","termDataAsRecord","fieldValidationErrors","originalError","defaultVersion1ScheduleData","migrateCookiesTo1","allCookies","userNumber","cookieKey","cookieValue","parseResult","parsed","parseTermData","validateResult","currentIndex","migrateScheduleData","rawScheduleData","scheduleDataVersion1OrNewer","Cookies","defaultUIState","versionStates","useUIStateFromStorage","initialValue","storedValue","setStoredValue","valueToStore","Function","useLocalStorageNoSync","setUIState","setVersion","useRawScheduleDataFromFirebase","account","scheduleData","setScheduleData","permanentError","setPermanentError","removeSnapshotListener","onSnapshot","includeMetadataChanges","setScheduleDataPersistent","nextScheduleData","accountId","currentScheduleData","currentRawSchedule","rawData","getCurrentRawScheduleFromStorage","getCurrentScheduleData","runTransaction","transaction","exists","castDraft","castImmutable","setRawScheduleData","StageLoadUIState","uiState","StageEnsureValidTerm","skeletonProps","currentTermRaw","loadingState","mostRecentTerm","correctedTerm","useEnsureValidTerm","StageLoadRawScheduleDataFromStorage","isPersistent","userAcceptedNonPersistence","setUserAcceptedNonPersistence","useRawScheduleDataFromStorage","StageMigrateScheduleData","setError","maxSupportedVersion","updatedScheduleData","newError","currentRaw","versionOrNull","useMigrateScheduleData","StageLoadRawScheduleDataHybrid","StageLoadRawScheduleDataFromFirebase","StageLoadAccount","setAccountState","unregisterAuthObserver","providerData","firstProviderData","providerId","uid","useFirebaseAuth","StageCreateScheduleDataProducer","updateScheduleData","applyDraft","produce","useScheduleDataProducer","StageLoadTerms","newTerms","reverse","useDownloadTerms","StageExtractTermScheduleData","currentTermScheduleData","correctedTermScheduleData","draft","updateTermScheduleData","currentTermScheduleDataDraft","termScheduleData","allTermsInData","useExtractTermScheduleData","StageLoadOscarData","loadedOscarRef","constructTermDataUrl","isFirst","initialLoad","REFRESH_INTERVAL_MIN","json","loadAndRefresh","useDownloadOscarData","StageExtractScheduleVersion","currentVersionRaw","maybeCurrentScheduleVersion","allVersions","updateScheduleVersion","currentScheduleVersionDraft","subDraft","currentScheduleVersion","scheduleVersion","useExtractSchedule","DataLoader","GroupLoadScheduleData","ContextProvider","original","newId","sorted","indexOfDeleting","findIndex","newIndex","versionCount","existingDraft","useVersionActions","scheduleContextValue","THEME_LOCAL_STORAGE_KEY","App","themeContextValue","legacyValue","correctedTheme","isTheme","useThemeFromStorage","body","remove","AppCSSRoot","dsn","integrations","Integrations","BrowserTracing","tracesSampleRate","ignoreErrors","release","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cf6880f4.chunk.js","sourcesContent":["const OPEN = 8 * 60;\nconst CLOSE = 21 * 60;\nconst DAYS = ['M', 'T', 'W', 'R', 'F'];\n\nconst PNG_SCALE_FACTOR = 2;\n\nconst PALETTE = [\n  [\n    '#4D4D4D',\n    '#999999',\n    '#FFFFFF',\n    '#F44E3B',\n    '#FE9200',\n    '#FCDC00',\n    '#DBDF00',\n    '#A4DD00',\n    '#68CCCA',\n    '#73D8FF',\n    '#AEA1FF',\n    '#FDA1FF',\n  ],\n  [\n    '#333333',\n    '#808080',\n    '#CCCCCC',\n    '#D33115',\n    '#E27300',\n    '#FCC400',\n    '#B0BC00',\n    '#68BC00',\n    '#16A5A5',\n    '#009CE0',\n    '#7B64FF',\n    '#FA28FF',\n  ],\n  [\n    '#000000',\n    '#666666',\n    '#B3B3B3',\n    '#9F0500',\n    '#C45100',\n    '#FB9E00',\n    '#808900',\n    '#194D33',\n    '#0C797D',\n    '#0062B1',\n    '#653294',\n    '#AB149E',\n  ],\n];\n\nconst ASYNC_DELIVERY_MODE = 'Remote Asynchronous Course';\n\nconst DELIVERY_MODES: Record<string, string> = {\n  'Hybrid Course': 'Hybrid',\n  'Remote Synchronous Course': 'Remote Synchronous',\n  'Remote Asynchronous Course': 'Remote Asynchronous',\n  'Residential Course': 'Residential',\n};\n\nconst CAMPUSES: Record<string, string> = {\n  'Georgia Tech-Atlanta *': 'Atlanta',\n  'GT Lorraine-Undergrad Programs': 'Lorraine Undergrad',\n  'GT Lorraine-Graduate Programs': 'Lorraine Graduate',\n  'Georgia Tech - Shenzhen': 'Shenzhen',\n  Video: 'Video',\n  Online: 'Online',\n  'MBA Evening Program': 'MBA Evening',\n};\n\nconst BACKEND_BASE_URL = 'https://gt-scheduler.azurewebsites.net';\n\nconst LARGE_DESKTOP_BREAKPOINT = 1200;\nconst DESKTOP_BREAKPOINT = 1024;\nconst LARGE_MOBILE_BREAKPOINT = 600;\n\nexport {\n  OPEN,\n  CLOSE,\n  DAYS,\n  PNG_SCALE_FACTOR,\n  PALETTE,\n  ASYNC_DELIVERY_MODE,\n  DELIVERY_MODES,\n  CAMPUSES,\n  BACKEND_BASE_URL,\n  DESKTOP_BREAKPOINT,\n  LARGE_MOBILE_BREAKPOINT,\n  LARGE_DESKTOP_BREAKPOINT,\n};\n","import * as Sentry from '@sentry/react';\nimport fastSafeStringify from 'fast-safe-stringify';\n\nexport class ErrorWithFields extends Error {\n  fields: Record<string, unknown>;\n\n  topMessage: string;\n\n  source: Error | null;\n\n  constructor({\n    message,\n    source,\n    fields = {},\n  }: {\n    message: string;\n    source?: unknown;\n    fields?: Record<string, unknown>;\n  }) {\n    super();\n\n    this.fields = fields;\n    this.topMessage = message;\n\n    // Make sure the given source is an error if given,\n    // otherwise add its string serialization as a field\n    if (source instanceof Error) {\n      this.source = source;\n      this.message = `${message}: ${source.message}`;\n\n      // Try to inherit the stacktrace of the given error\n      // (otherwise, fall back to the stacktrace created\n      // when this error was constructed)\n      if (source.stack != null) {\n        this.stack = source.stack;\n      }\n    } else {\n      this.source = null;\n      this.message = message;\n\n      if (this.source !== null) {\n        // The source was non-null but was not an Error:\n        // add a naive string serialization as a context\n        this.fields['__non_error_source'] = 'true';\n        this.fields['__source'] = fastSafeStringify(source);\n      }\n    }\n\n    // Configure the name based on whether this is wrapping\n    // an existing non-wrapped error\n    const rootError = this.getRootError();\n    if (rootError === this || rootError instanceof ErrorWithFields) {\n      this.name = 'ErrorWithFields';\n    } else {\n      this.name = `ErrorWithFields(${rootError.name})`;\n    }\n  }\n\n  logToConsole(): void {\n    /* eslint-disable no-console */\n    console.group(this.topMessage);\n    console.error(this.getRootError());\n\n    const allFields = this.getAllFields();\n    if (Object.keys(allFields).length > 0) {\n      console.info(allFields);\n    }\n\n    console.groupEnd();\n    /* eslint-enable no-console */\n  }\n\n  getAllFields(): Record<string, unknown> {\n    if (this.source instanceof ErrorWithFields) {\n      return { ...this.source.getAllFields(), ...this.fields };\n    }\n\n    return this.fields;\n  }\n\n  getRootError(): Error {\n    if (this.source === null) {\n      return this;\n    }\n\n    if (this.source instanceof ErrorWithFields) {\n      return this.source.getRootError();\n    }\n\n    return this.source;\n  }\n}\n\n/**\n * Logs an error to the console and reports it to Sentry.\n * Does not re-throw any errors and can be used when there is reasonable\n * fallback behavior.\n * @param error - an instance of `ErrorWithFields`\n */\nexport function softError(error: ErrorWithFields): void {\n  error.logToConsole();\n\n  // Report the error to Sentry if in production\n  if (process.env.NODE_ENV === 'production') {\n    // Ensure we don't include `type` in the fields\n    let fields = error.getAllFields();\n    if (Object.keys(fields).includes('type')) {\n      const { type, ...rest } = fields;\n      fields = { __do_not_use_type_in_sentry_it_is_special: type, ...rest };\n    }\n\n    Sentry.captureException(error.getRootError(), {\n      // https://docs.sentry.io/platforms/ruby/enriching-events/context/#structured-context\n      contexts: {\n        fields,\n        error: {\n          message: error.message,\n        },\n      },\n      fingerprint: [error.message],\n    });\n  }\n}\n","/* global saveAs, BlobBuilder */\n/* exported ics */\n\nconst ics = (uidDomain, prodId) => {\n  if (\n    navigator.userAgent.indexOf('MSIE') > -1 &&\n    navigator.userAgent.indexOf('MSIE 10') === -1\n  ) {\n    // eslint-disable-next-line no-console\n    console.log('Unsupported Browser');\n    return;\n  }\n\n  if (typeof uidDomain === 'undefined') {\n    uidDomain = 'default';\n  }\n  if (typeof prodId === 'undefined') {\n    prodId = 'Calendar';\n  }\n\n  const SEPARATOR = navigator.appVersion.indexOf('Win') !== -1 ? '\\r\\n' : '\\n';\n  const calendarEvents = [];\n  const calendarStart = [\n    'BEGIN:VCALENDAR',\n    `PRODID:${prodId}`,\n    'VERSION:2.0',\n  ].join(SEPARATOR);\n  const calendarEnd = `${SEPARATOR}END:VCALENDAR`;\n  const BYDAY_VALUES = ['SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'];\n\n  return {\n    /**\n     * Returns events array\n     * @return {array} Events\n     */\n    events() {\n      return calendarEvents;\n    },\n\n    /**\n     * Returns calendar\n     * @return {string} Calendar in iCalendar format\n     */\n    calendar() {\n      return (\n        calendarStart + SEPARATOR + calendarEvents.join(SEPARATOR) + calendarEnd\n      );\n    },\n\n    /**\n     * Add event to the calendar\n     * @param  {string} subject     Subject/Title of event\n     * @param  {string} description Description of event\n     * @param  {string} location    Location of event\n     * @param  {string} begin       Beginning date of event\n     * @param  {string} stop        Ending date of event\n     */\n    addEvent(subject, description, location, begin, stop, rrule) {\n      // I'm not in the mood to make these optional... So they are all required\n      if (\n        typeof subject === 'undefined' ||\n        typeof description === 'undefined' ||\n        typeof location === 'undefined' ||\n        typeof begin === 'undefined' ||\n        typeof stop === 'undefined'\n      ) {\n        return false;\n      }\n\n      // validate rrule\n      if (rrule) {\n        if (!rrule.rrule) {\n          if (\n            rrule.freq !== 'YEARLY' &&\n            rrule.freq !== 'MONTHLY' &&\n            rrule.freq !== 'WEEKLY' &&\n            rrule.freq !== 'DAILY'\n          ) {\n            throw new Error(\n              \"Recurrence rrule frequency must be provided and be one of the following: 'YEARLY', 'MONTHLY', 'WEEKLY', or 'DAILY'\"\n            );\n          }\n\n          if (rrule.until) {\n            if (Number.isNaN(Date.parse(rrule.until))) {\n              throw new Error(\n                \"Recurrence rrule 'until' must be a valid date string\"\n              );\n            }\n          }\n\n          if (rrule.interval) {\n            if (Number.isNaN(parseInt(rrule.interval, 10))) {\n              throw new Error(\"Recurrence rrule 'interval' must be an integer\");\n            }\n          }\n\n          if (rrule.count) {\n            if (Number.isNaN(parseInt(rrule.count, 10))) {\n              throw new Error(\"Recurrence rrule 'count' must be an integer\");\n            }\n          }\n\n          if (typeof rrule.byday !== 'undefined') {\n            if (\n              Object.prototype.toString.call(rrule.byday) !== '[object Array]'\n            ) {\n              throw new Error(\"Recurrence rrule 'byday' must be an array\");\n            }\n\n            if (rrule.byday.length > 7) {\n              throw new Error(\n                \"Recurrence rrule 'byday' array must not be longer than the 7 days in a week\"\n              );\n            }\n\n            // Filter any possible repeats\n            rrule.byday = rrule.byday.filter((elem, pos) => {\n              return rrule.byday.indexOf(elem) === pos;\n            });\n\n            for (const d in rrule.byday) {\n              if (BYDAY_VALUES.indexOf(rrule.byday[d]) < 0) {\n                throw new Error(\n                  \"Recurrence rrule 'byday' values must include only the following: 'SU', 'MO', 'TU', 'WE', 'TH', 'FR', 'SA'\"\n                );\n              }\n            }\n          }\n        }\n      }\n\n      // TODO add time and time zone? use moment to format?\n      const start_date = new Date(begin);\n      const end_date = new Date(stop);\n      const now_date = new Date();\n\n      const start_year = `0000${start_date.getFullYear().toString()}`.slice(-4);\n      const start_month = `00${(start_date.getMonth() + 1).toString()}`.slice(\n        -2\n      );\n      const start_day = `00${start_date.getDate().toString()}`.slice(-2);\n      const start_hours = `00${start_date.getHours().toString()}`.slice(-2);\n      const start_minutes = `00${start_date.getMinutes().toString()}`.slice(-2);\n      const start_seconds = `00${start_date.getSeconds().toString()}`.slice(-2);\n\n      const end_year = `0000${end_date.getFullYear().toString()}`.slice(-4);\n      const end_month = `00${(end_date.getMonth() + 1).toString()}`.slice(-2);\n      const end_day = `00${end_date.getDate().toString()}`.slice(-2);\n      const end_hours = `00${end_date.getHours().toString()}`.slice(-2);\n      const end_minutes = `00${end_date.getMinutes().toString()}`.slice(-2);\n      const end_seconds = `00${end_date.getSeconds().toString()}`.slice(-2);\n\n      const now_year = `0000${now_date.getFullYear().toString()}`.slice(-4);\n      const now_month = `00${(now_date.getMonth() + 1).toString()}`.slice(-2);\n      const now_day = `00${now_date.getDate().toString()}`.slice(-2);\n      const now_hours = `00${now_date.getHours().toString()}`.slice(-2);\n      const now_minutes = `00${now_date.getMinutes().toString()}`.slice(-2);\n      const now_seconds = `00${now_date.getSeconds().toString()}`.slice(-2);\n\n      let start_time = '';\n      let end_time = '';\n      if (\n        start_hours +\n          start_minutes +\n          start_seconds +\n          end_hours +\n          end_minutes +\n          end_seconds !==\n        0\n      ) {\n        start_time = `T${start_hours}${start_minutes}${start_seconds}`;\n        end_time = `T${end_hours}${end_minutes}${end_seconds}`;\n      }\n      const now_time = `T${now_hours}${now_minutes}${now_seconds}`;\n\n      const start = start_year + start_month + start_day + start_time;\n      const end = end_year + end_month + end_day + end_time;\n      const now = now_year + now_month + now_day + now_time;\n\n      // recurrence rrule vars\n      let rruleString;\n      if (rrule) {\n        if (rrule.rrule) {\n          rruleString = rrule.rrule;\n        } else {\n          rruleString = `RRULE:FREQ=${rrule.freq}`;\n\n          if (rrule.until) {\n            const uDate = new Date(Date.parse(rrule.until)).toISOString();\n            rruleString += `;UNTIL=${uDate\n              .substring(0, uDate.length - 13)\n              .replace(/[-]/g, '')}000000Z`;\n          }\n\n          if (rrule.interval) {\n            rruleString += `;INTERVAL=${rrule.interval}`;\n          }\n\n          if (rrule.count) {\n            rruleString += `;COUNT=${rrule.count}`;\n          }\n\n          if (rrule.byday && rrule.byday.length > 0) {\n            rruleString += `;BYDAY=${rrule.byday.join(',')}`;\n          }\n        }\n      }\n\n      // var stamp = new Date().toISOString();\n\n      let calendarEvent = [\n        'BEGIN:VEVENT',\n        `UID:${calendarEvents.length}@${uidDomain}`,\n        'CLASS:PUBLIC',\n        `DESCRIPTION:${description}`,\n        `DTSTAMP;VALUE=DATE-TIME:${now}`,\n        `DTSTART;VALUE=DATE-TIME:${start}`,\n        `DTEND;VALUE=DATE-TIME:${end}`,\n        `LOCATION:${location}`,\n        `SUMMARY;LANGUAGE=en-us:${subject}`,\n        'TRANSP:TRANSPARENT',\n        'END:VEVENT',\n      ];\n\n      if (rruleString) {\n        calendarEvent.splice(4, 0, rruleString);\n      }\n\n      calendarEvent = calendarEvent.join(SEPARATOR);\n\n      calendarEvents.push(calendarEvent);\n      return calendarEvent;\n    },\n\n    /**\n     * Download calendar using the saveAs function from filesave.js\n     * @param  {string} filename Filename\n     * @param  {string} ext      Extention\n     */\n    download(filename, ext) {\n      if (calendarEvents.length < 1) {\n        return false;\n      }\n\n      ext = typeof ext !== 'undefined' ? ext : '.ics';\n      filename = typeof filename !== 'undefined' ? filename : 'calendar';\n      const calendar =\n        calendarStart +\n        SEPARATOR +\n        calendarEvents.join(SEPARATOR) +\n        calendarEnd;\n\n      let blob;\n      if (navigator.userAgent.indexOf('MSIE 10') === -1) {\n        // chrome or firefox\n        blob = new Blob([calendar]);\n      } else {\n        // ie\n        const bb = new BlobBuilder();\n        bb.append(calendar);\n        blob = bb.getBlob(`text/x-vCalendar;charset=${document.characterSet}`);\n      }\n      saveAs(blob, filename + ext);\n      return calendar;\n    },\n\n    /**\n     * Build and return the ical contents\n     */\n    build() {\n      if (calendarEvents.length < 1) {\n        return false;\n      }\n\n      const calendar =\n        calendarStart +\n        SEPARATOR +\n        calendarEvents.join(SEPARATOR) +\n        calendarEnd;\n\n      return calendar;\n    },\n  };\n};\n\nexport default ics;\n","import React from 'react';\nimport { IBackOffOptions } from 'exponential-backoff';\nimport { DelayFactory } from 'exponential-backoff/dist/delay/delay.factory';\nimport { getSanitizedOptions } from 'exponential-backoff/dist/options';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\n\nimport { Oscar, Section } from '../data/beans';\nimport { DAYS, PALETTE, PNG_SCALE_FACTOR } from '../constants';\nimport { ErrorWithFields, softError } from '../log';\nimport { ICS, Period, PrerequisiteClause, Theme } from '../types';\nimport ics from '../vendor/ics';\n\nexport const stringToTime = (string: string): number => {\n  const regexResult = /(\\d{1,2}):(\\d{2}) (a|p)m/.exec(string);\n  if (regexResult === null) return 0;\n  const [, hour, minute, ampm] = regexResult as unknown as [\n    string,\n    string,\n    string,\n    string\n  ];\n  return ((ampm === 'p' ? 12 : 0) + (+hour % 12)) * 60 + +minute;\n};\n\nexport const timeToString = (time: number, ampm = true): string => {\n  const hour = (time / 60) | 0;\n  const minute = time % 60;\n  const hh = hour > 12 ? hour - 12 : hour;\n  const mm = `${minute}`.padStart(2, '0');\n  const A = `${hour < 12 ? 'a' : 'p'}m`;\n  return ampm ? `${hh}:${mm} ${A}` : `${hh}:${mm}`;\n};\n\nexport const timeToShortString = (time: number): string => {\n  const hour = (time / 60) | 0;\n  return `${hour > 12 ? hour - 12 : hour}${hour < 12 ? 'a' : 'p'}m`;\n};\n\nexport const periodToString = (period: Period | undefined): string =>\n  period != null\n    ? `${timeToString(period.start, false)} - ${timeToString(period.end)}`\n    : 'TBA';\n\nexport const getRandomColor = (): string => {\n  const colors = PALETTE.flat();\n  const index = (Math.random() * colors.length) | 0;\n  return colors[index] ?? '#333333';\n};\n\nexport const getContentClassName = (color: string | undefined): string => {\n  if (color == null) return 'light-content';\n  const r = parseInt(color.substring(1, 3), 16);\n  const g = parseInt(color.substring(3, 5), 16);\n  const b = parseInt(color.substring(5, 7), 16);\n  return r * 0.299 + g * 0.587 + b * 0.114 > 128\n    ? 'light-content'\n    : 'dark-content';\n};\n\nexport const hasConflictBetween = (\n  section1: Section,\n  section2: Section\n): boolean =>\n  section1.meetings.some((meeting1) =>\n    section2.meetings.some(\n      (meeting2) =>\n        meeting1.period &&\n        meeting2.period &&\n        DAYS.some(\n          (day) => meeting1.days.includes(day) && meeting2.days.includes(day)\n        ) &&\n        meeting1.period.start < meeting2.period.end &&\n        meeting2.period.start < meeting1.period.end\n    )\n  );\n\nexport const classes = (\n  ...classList: (string | boolean | null | undefined)[]\n): string => classList.filter((c) => c).join(' ');\n\nexport const isMobile = (): boolean => window.innerWidth < 1024;\n\nexport const simplifyName = (name: string): string => {\n  const tokens = name.split(' ');\n  const firstName = tokens.shift();\n  const lastName = tokens.pop();\n  return [firstName, lastName].join(' ');\n};\n\nexport function unique<T>(array: T[]): T[] {\n  return Array.from(new Set(array));\n}\n\nexport const isLab = (section: Section): boolean =>\n  ['Lab', 'Studio'].some((type) => section.scheduleType.includes(type));\n\nexport const isLecture = (section: Section): boolean =>\n  section.scheduleType.includes('Lecture');\n\nexport function humanizeArray<T>(array: T[], conjunction = 'and'): string {\n  if (array.length <= 2) {\n    return array.join(` ${conjunction} `);\n  }\n  const init = [...array];\n  const last = init.pop();\n  return `${init.join(', ')}, ${conjunction} ${String(last)}`;\n}\n\nexport function humanizeArrayReact<T>(\n  array: T[],\n  conjunction: React.ReactNode = 'and'\n): React.ReactNode {\n  if (array.length === 0) {\n    return null;\n  }\n  if (array.length === 1) {\n    return String(array[0]);\n  }\n  if (array.length === 2) {\n    return (\n      <>\n        {String(array[0])} {conjunction} {String(array[1])}\n      </>\n    );\n  }\n\n  const init = [...array];\n  const last = init.pop();\n  return (\n    <>\n      {`${init.join(', ')},`.trim()} {conjunction} {String(last)}\n    </>\n  );\n}\n\nexport const serializePrereqs = (\n  reqs: PrerequisiteClause,\n  openPar = false,\n  closePar = false\n): string => {\n  // This function accepts the index of a sub-clause\n  // from the sub-clause slice of a compound prereq clause\n  // (i.e. the [...sub-clauses] part of a clause\n  // that itself is of the form [operator, ...sub-clauses]).\n  // As such, we compare to the clause length - 2\n  // (since the sub-clauses[0] is really reqs[1])\n  const last = (i: number): boolean =>\n    Array.isArray(reqs) && i === reqs.length - 2;\n  let string = '';\n\n  if (!Array.isArray(reqs)) {\n    string += (openPar ? '(' : '') + reqs.id + (closePar ? ')' : '');\n  } else if (reqs[0] === 'and') {\n    const [, ...subClauses] = reqs;\n    subClauses.forEach((req, i) => {\n      string +=\n        serializePrereqs(req, i === 0, last(i)) + (last(i) ? '' : ' and ');\n    });\n  } else if (reqs[0] === 'or') {\n    const [, ...subClauses] = reqs;\n    subClauses.forEach((req, i) => {\n      string += serializePrereqs(req) + (last(i) ? '' : ' or ');\n    });\n  }\n\n  return string;\n};\n\n// Determines whether an error is an axios network error,\n// which is used when determining whether to send it to Sentry\n// (since we can't do anything about a client-side NetworkError)--\n// it's either an error in the user's network\n// or downtime in a third-party service.\nexport const isAxiosNetworkError = (err: unknown): boolean => {\n  return err instanceof Error && err.message.includes('Network Error');\n};\n\n/**\n * Sleeps for a delay controlled by an exponential backoff function with jitter.\n * Acts as a thin wrapper around `exponential-backoff`\n * that provides a lower-level API\n * @param attemptNumber - The number of attempts that have occurred so far\n * @param options - [optional] config for exponential-backoff\n */\nexport async function exponentialBackoff(\n  attemptNumber: number,\n  options: Partial<IBackOffOptions> = {}\n): Promise<void> {\n  await DelayFactory(\n    getSanitizedOptions({\n      // See https://github.com/coveooss/exponential-backoff for options API\n      jitter: 'full',\n      numOfAttempts: Number.MAX_SAFE_INTEGER,\n      ...options,\n    }),\n    attemptNumber\n  ).apply();\n}\n\n/**\n * Promise version of `setTimeout`; used to wait for a specific delay\n */\nexport async function sleep({\n  amount_ms,\n}: {\n  amount_ms: number;\n}): Promise<void> {\n  await new Promise((resolve) =>\n    setTimeout(() => resolve(undefined), amount_ms)\n  );\n}\n\n/**\n * Exports the current schedule to a `.ics` file,\n * which allows for importing into a third-party calendar application.\n */\nexport function exportCoursesToCalendar(\n  oscar: Oscar,\n  pinnedCrns: readonly string[]\n): void {\n  const cal = ics() as ICS | undefined;\n  if (cal == null) {\n    window.alert('This browser does not support calendar export');\n    softError(\n      new ErrorWithFields({\n        message: 'ics() returned null or undefined',\n      })\n    );\n\n    return;\n  }\n\n  pinnedCrns.forEach((crn) => {\n    const section = oscar.findSection(crn);\n    if (section == null) return;\n\n    section.meetings.forEach((meeting) => {\n      if (!meeting.period || !meeting.days.length) return;\n      const { from, to } = meeting.dateRange;\n      const subject = section.course.id;\n      const description = section.course.title;\n      const location = meeting.where;\n      const begin = new Date(from.getTime());\n      while (\n        !meeting.days.includes(\n          ['-', 'M', 'T', 'W', 'R', 'F', '-'][begin.getDay()] ?? '-'\n        )\n      ) {\n        begin.setDate(begin.getDate() + 1);\n      }\n      begin.setHours(meeting.period.start / 60, meeting.period.start % 60);\n      const end = new Date(begin.getTime());\n      end.setHours(meeting.period.end / 60, meeting.period.end % 60);\n      const rrule = {\n        freq: 'WEEKLY',\n        until: to,\n        byday: meeting.days\n          .map(\n            (day) =>\n              ({ M: 'MO', T: 'TU', W: 'WE', R: 'TH', F: 'FR' }[day] ?? null)\n          )\n          .filter((day) => !!day),\n      };\n      cal.addEvent(subject, description, location, begin, end, rrule);\n    });\n  });\n  cal.download('gt-scheduler');\n}\n\n/**\n * Downloads a screenshot of the \"shadow\" calendar\n * that exists invisible in the app\n * and reflects the current state of the scheduler.\n * Allows the screenshot to be exported consistently\n * regardless of screen size or app state.\n * Requires the theme to style the background before taking the screenshot.\n */\nexport function downloadShadowCalendar(\n  captureElement: HTMLDivElement,\n  theme: Theme\n): void {\n  const computed = window\n    .getComputedStyle(captureElement)\n    .getPropertyValue('left');\n\n  domtoimage\n    .toBlob(captureElement, {\n      width: captureElement.offsetWidth * PNG_SCALE_FACTOR,\n      height: captureElement.offsetHeight * PNG_SCALE_FACTOR,\n      style: {\n        transform: `scale(${PNG_SCALE_FACTOR})`,\n        'transform-origin': `${computed} 0px`,\n        'background-color': theme === 'light' ? '#FFFFFF' : '#333333',\n      },\n    })\n    .then((blob) => saveAs(blob, 'schedule.png'))\n    .catch((err) =>\n      softError(\n        new ErrorWithFields({\n          message:\n            'could not take screenshot of shadow calendar for schedule export',\n          source: err,\n        })\n      )\n    );\n}\n\nexport const PRIMARY_VERSION_NAME = 'Primary';\nconst OTHER_VERSIONS_NAMES = [\n  'Secondary',\n  'Tertiary',\n  'Quaternary',\n  'Quinary',\n  'Senary',\n  'Septenary',\n  'Octonary',\n  'Nonary',\n  'Denary',\n];\n\n/**\n * Gets the next auto-generated version name in the sequence of\n * Primary, Secondary, Tertiary, ...\n * all the way up to the name for the 10th item (Denary)\n * before returning \"New version\".\n * If the array is empty, then it always returns 'Primary'.\n * Otherwise, it will return the first item in the sequence,\n * starting with 'Secondary' (meaning that it will always skip 'Primary',\n * even if it's not an element in the given list)\n */\nexport function getNextVersionName(allVersionNames: readonly string[]): string {\n  const allNamesSet: Set<string> = new Set(allVersionNames);\n  if (allNamesSet.size === 0) return PRIMARY_VERSION_NAME;\n\n  for (const version of OTHER_VERSIONS_NAMES) {\n    if (!allNamesSet.has(version)) {\n      return version;\n    }\n  }\n\n  // Fall back to the default with over 10 versions\n  return 'New version';\n}\n\n/**\n * Generates a random alpha-numeric string of the given length.\n * Contains the characters A-Z, a-z, and 0-9.\n */\nexport function generateRandomId(length: number): string {\n  const charPool =\n    'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  let result = '';\n  for (let i = 0; i < length; i++) {\n    result += charPool[Math.floor(Math.random() * charPool.length)];\n  }\n  return result;\n}\n\n/**\n * Lexicographically compares two strings (usable as a comparator function).\n * Based on:\n * https://riptutorial.com/javascript/example/5388/comparing-strings-lexicographically\n */\nexport function lexicographicCompare(a: string, b: string): number {\n  if (a === b) {\n    return 0;\n  }\n\n  if (a > b) {\n    return 1;\n  }\n\n  return -1;\n}\n","import React from 'react';\n\nimport { classes } from '../../utils/misc';\n\nimport './stylesheet.scss';\n\nexport type ButtonProps = {\n  className?: string;\n  disabled?: boolean;\n  href?: string;\n  onClick?: (e: React.SyntheticEvent<HTMLDivElement>) => void;\n  children?: React.ReactNode;\n};\n\nexport default function Button({\n  className,\n  disabled = false,\n  href,\n  onClick,\n  children,\n}: ButtonProps): React.ReactElement {\n  if (disabled)\n    return (\n      <div className={classes('Button', 'disabled', className)}>{children}</div>\n    );\n\n  if (href != null)\n    return (\n      <a\n        className={classes('Button', className)}\n        href={href}\n        rel=\"noopener noreferrer\"\n        target=\"_blank\"\n      >\n        {children}\n      </a>\n    );\n\n  return (\n    <div\n      className={classes('Button', className)}\n      onClick={onClick}\n      tabIndex={0}\n      onKeyDown={(event): void => {\n        // Intercept enter presses\n        if (event.key === 'Enter' && onClick != null) onClick(event);\n      }}\n      role=\"button\"\n    >\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes } from '../../utils/misc';\nimport Button, { ButtonProps } from '../Button';\n\nimport './stylesheet.scss';\n\ntype FontAwesomeProps = React.ComponentProps<typeof FontAwesomeIcon>;\nexport type Action = {\n  icon: FontAwesomeProps['icon'];\n  styling?: React.CSSProperties;\n  dataTip?: boolean;\n  dataFor?: string;\n  onMouseEnter?: () => void;\n  onMouseLeave?: () => void;\n} & Omit<ButtonProps, 'children'>;\n\ntype BaseActionRowProps = {\n  label: string;\n  actions: (Action | null | undefined)[];\n  className?: string;\n  children?: React.ReactNode;\n};\nexport type ActionRowProps = BaseActionRowProps &\n  Omit<React.HTMLAttributes<HTMLDivElement>, keyof BaseActionRowProps>;\n\nexport default function ActionRow({\n  className,\n  label,\n  children,\n  actions,\n  ...restProps\n}: ActionRowProps): React.ReactElement {\n  return (\n    <div className={classes('ActionRow', className)} {...restProps}>\n      <div className=\"action-row-header\">\n        <div className=\"label\">{label}</div>\n        <div className={classes('actions', 'default')}>\n          {actions\n            .flatMap((action) => (action != null ? [action] : []))\n            .map(\n              (\n                {\n                  icon,\n                  styling,\n                  dataTip,\n                  dataFor,\n                  onMouseEnter,\n                  onMouseLeave,\n                  ...rest\n                },\n                i\n              ) => (\n                <Button className=\"action\" {...rest} key={i}>\n                  <FontAwesomeIcon\n                    fixedWidth\n                    style={styling}\n                    icon={icon}\n                    data-tip={dataTip}\n                    data-for={dataFor}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                  />\n                </Button>\n              )\n            )}\n        </div>\n      </div>\n      {children}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { ErrorWithFields } from '../log';\nimport { Theme } from '../types';\n\nexport type ThemeContextValue = [Theme, (next: Theme) => void];\nexport const ThemeContext = React.createContext<ThemeContextValue>([\n  'light',\n  (next: Theme): void => {\n    throw new ErrorWithFields({\n      message: 'empty ThemeContext.setTheme value being used',\n      fields: {\n        next,\n      },\n    });\n  },\n]);\n","import React from 'react';\n\nexport type TermsContextValue = readonly string[];\nexport const TermsContext = React.createContext<TermsContextValue>([]);\n","import axios from 'axios';\n\nimport { Oscar, Section } from '.';\nimport {\n  CourseGpa,\n  CrawlerCourse,\n  CrawlerPrerequisites,\n  Period,\n} from '../../types';\nimport {\n  hasConflictBetween,\n  isLab,\n  isLecture,\n  isAxiosNetworkError,\n} from '../../utils/misc';\nimport { ErrorWithFields, softError } from '../../log';\n\n// This is actually a transparent read-through cache\n// in front of the Course Critique API's course data endpoint,\n// but it should behave the same as the real API.\n// See the implementation at:\n// https://github.com/gt-scheduler/firebase-conf/blob/main/functions/src/course_critique_cache.ts\nconst COURSE_CRITIQUE_API_URL =\n  'https://us-central1-gt-scheduler-web-prod.cloudfunctions.net/getCourseDataFromCourseCritique';\n\nconst GPA_CACHE_LOCAL_STORAGE_KEY = 'course-gpa-cache-2';\nconst GPA_CACHE_EXPIRATION_DURATION_DAYS = 7;\n\ninterface SectionGroupMeeting {\n  days: string[];\n  period: Period | undefined;\n}\n\ninterface SectionGroup {\n  /**\n   * Equal to`JSON.stringify(this.sectionGroupMeetings)`\n   */\n  hash: string;\n  meetings: SectionGroupMeeting[];\n  sections: Section[];\n}\n\nexport default class Course {\n  id: string;\n\n  subject: string;\n\n  number: string;\n\n  title: string;\n\n  sections: Section[];\n\n  prereqs: CrawlerPrerequisites | undefined;\n\n  hasLab: boolean;\n\n  onlyLectures: Section[] | undefined;\n\n  onlyLabs: Section[] | undefined;\n\n  allInOnes: Section[] | undefined;\n\n  sectionGroups: Record<string, SectionGroup> | undefined;\n\n  term: string;\n\n  constructor(oscar: Oscar, courseId: string, data: CrawlerCourse) {\n    this.term = oscar.term;\n    const [title, sections, prereqs] = data;\n\n    this.id = courseId;\n    const [subject, number] = this.id.split(' ');\n    if (subject == null || number == null) {\n      throw new ErrorWithFields({\n        message: 'course ID could not be parsed',\n        fields: {\n          id: this.id,\n          subject,\n          number,\n          term: this.term,\n        },\n      });\n    }\n    this.subject = subject;\n    this.number = number;\n\n    this.title = title;\n    this.sections = Object.entries(sections).flatMap<Section>(\n      ([sectionId, sectionData]) => {\n        if (sectionData == null) return [];\n        try {\n          return [new Section(oscar, this, sectionId, sectionData)];\n        } catch (err) {\n          softError(\n            new ErrorWithFields({\n              message: 'could not construct Section bean',\n              source: err,\n              fields: {\n                courseId,\n                term: this.term,\n              },\n            })\n          );\n          return [];\n        }\n      }\n    );\n    this.prereqs = prereqs;\n\n    const onlyLectures = this.sections.filter(\n      (section) => isLecture(section) && !isLab(section)\n    );\n    const onlyLabs = this.sections.filter(\n      (section) => isLab(section) && !isLecture(section)\n    );\n    this.hasLab = !!onlyLectures.length && !!onlyLabs.length;\n    if (this.hasLab) {\n      const matchLabFromId = (lab: Section, lecture: Section): boolean =>\n        // note: checking both ways because GT registrar\n        // reversed studio and lecture sections for MATH 1553\n        lecture.id.startsWith(lab.id) || lab.id.startsWith(lecture.id);\n      const matchLabFromInstructors = (\n        lab: Section,\n        lecture: Section\n      ): boolean =>\n        // match lecture and lab sections\n        // if there are *any* matching instructors\n        // fixes issue with PHYS 2211 and 2212\n        // no longer matching section id letters\n        lab.instructors.filter((instructor) =>\n          lecture.instructors.includes(instructor)\n        ).length > 0;\n\n      for (const lecture of onlyLectures) {\n        lecture.associatedLabs = onlyLabs.filter((lab) =>\n          matchLabFromId(lab, lecture)\n        );\n        // if no matching section id letters found, match by profs\n        if (!lecture.associatedLabs.length) {\n          lecture.associatedLabs = onlyLabs.filter((lab) =>\n            matchLabFromInstructors(lab, lecture)\n          );\n        }\n      }\n      for (const lab of onlyLabs) {\n        lab.associatedLectures = onlyLectures.filter((lecture) =>\n          matchLabFromId(lab, lecture)\n        );\n        if (!lab.associatedLectures.length) {\n          lab.associatedLectures = onlyLectures.filter((lecture) =>\n            matchLabFromInstructors(lab, lecture)\n          );\n        }\n      }\n      const lonelyLectures = onlyLectures.filter(\n        (lecture) => !lecture.associatedLabs.length\n      );\n      const lonelyLabs = onlyLabs.filter(\n        (lab) => !lab.associatedLectures.length\n      );\n      for (const lecture of lonelyLectures) {\n        lecture.associatedLabs = lonelyLabs.filter(\n          (lab) => !hasConflictBetween(lecture, lab)\n        );\n      }\n      for (const lab of lonelyLabs) {\n        lab.associatedLectures = lonelyLectures.filter(\n          (lecture) => !hasConflictBetween(lecture, lab)\n        );\n      }\n      this.onlyLectures = onlyLectures;\n      this.onlyLabs = onlyLabs;\n      this.allInOnes = this.sections.filter(\n        (section) => isLecture(section) && isLab(section)\n      );\n    } else {\n      this.sectionGroups = this.distinct(this.sections);\n    }\n  }\n\n  distinct(sections: Section[]): Record<string, SectionGroup> {\n    const groups: Record<string, SectionGroup> = {};\n    sections.forEach((section) => {\n      const sectionGroupMeetings = section.meetings.map<SectionGroupMeeting>(\n        ({ days, period }) => ({\n          days,\n          period,\n        })\n      );\n      const sectionGroupHash = JSON.stringify(sectionGroupMeetings);\n      const sectionGroup = groups[sectionGroupHash];\n      if (sectionGroup) {\n        sectionGroup.sections.push(section);\n      } else {\n        groups[sectionGroupHash] = {\n          hash: sectionGroupHash,\n          meetings: sectionGroupMeetings,\n          sections: [section],\n        };\n      }\n    });\n    return groups;\n  }\n\n  async fetchGpa(): Promise<CourseGpa> {\n    // Note: if `CourseGpa` ever changes,\n    // the cache needs to be invalidated\n    // (by changing the local storage key).\n    type GpaCache = Record<string, GpaCacheItem>;\n    interface GpaCacheItem {\n      d: CourseGpa;\n      exp: string;\n    }\n\n    // Try to look in the cache for a cached course gpa item\n    // that has not expired.\n    // If it is expired, we don't evict; we just ignore it\n    // (and update it with a fresh expiry once it has been fetched).\n    // The size of the cache may bloat over time, but shouldn't be substantial.\n    try {\n      const rawCache = window.localStorage.getItem(GPA_CACHE_LOCAL_STORAGE_KEY);\n      if (rawCache != null) {\n        const cache: GpaCache = JSON.parse(rawCache) as unknown as GpaCache;\n        const cacheItem = cache[this.id];\n        if (cacheItem != null) {\n          const now = new Date().toISOString();\n          // Use lexicographic comparison on date strings\n          // (since they are ISO 8601)\n          if (now < cacheItem.exp) {\n            return cacheItem.d;\n          }\n        }\n      }\n    } catch (err) {\n      // Ignore\n    }\n\n    // Fetch the GPA normally\n    const courseGpa = await this.fetchGpaInner();\n    if (courseGpa === null) {\n      // There was a failure; don't store the value in the cache.\n      return {};\n    }\n\n    // Store the GPA in the cache\n    const exp = new Date();\n    exp.setDate(exp.getDate() + GPA_CACHE_EXPIRATION_DURATION_DAYS);\n    try {\n      let cache: GpaCache = {};\n      const rawCache = window.localStorage.getItem(GPA_CACHE_LOCAL_STORAGE_KEY);\n      if (rawCache != null) {\n        cache = JSON.parse(rawCache) as unknown as GpaCache;\n      }\n\n      cache[this.id] = { d: courseGpa, exp: exp.toISOString() };\n      const rawUpdatedCache = JSON.stringify(cache);\n      window.localStorage.setItem(GPA_CACHE_LOCAL_STORAGE_KEY, rawUpdatedCache);\n    } catch (err) {\n      // Ignore\n    }\n\n    return courseGpa;\n  }\n\n  /**\n   * Fetches the course GPA without caching it\n   * @see `fetchGpa` for the persistent-caching version\n   * @returns the course GPA if successfully fetched from course critique,\n   * or `null` if there was a problem.\n   * Note that the empty object `{}` is a valid course GPA value,\n   * but we prefer returning `null` if there was a failure\n   * so we can avoid storing the empty GPA value in the persistent cache.\n   */\n  private async fetchGpaInner(): Promise<CourseGpa | null> {\n    // We have to clean up the course ID before sending it to the API,\n    // since courses like CHEM 1212K should become CHEM 1212\n    const id = `${this.subject} ${this.number.replace(/\\D/g, '')}`;\n    const encodedCourse = encodeURIComponent(id);\n    const url = `${COURSE_CRITIQUE_API_URL}?courseID=${encodedCourse}`;\n\n    let responseData: CourseDetailsAPIResponse;\n    try {\n      responseData = (await axios.get<CourseDetailsAPIResponse>(url)).data;\n    } catch (err) {\n      // Ignore network errors\n      if (!isAxiosNetworkError(err)) {\n        softError(\n          new ErrorWithFields({\n            message: 'error fetching course details from Course Critique API',\n            source: err,\n            fields: {\n              baseId: this.id,\n              cleanedId: id,\n              url,\n            },\n          })\n        );\n      }\n\n      return null;\n    }\n\n    return this.decodeCourseCritiqueResponse(responseData);\n  }\n\n  private decodeCourseCritiqueResponse(\n    responseData: CourseDetailsAPIResponse\n  ): CourseGpa | null {\n    // Calculate the overall course GPA and instructor-specific GPAs\n    // from the response.\n    // The API response does not actually include these values;\n    // instead, it provides GPA information on a per-historical-section-basis,\n    // so we have to aggregate this here.\n    // As of 2021-11-06, this is also what Course Critique does\n    // to determine overall course GPA and instructor-specific GPAs,\n    // so there doesn't seem to be a better way\n    // (this method is likely inaccurate).\n\n    type IntermediateWeightedAverage = {\n      count: number;\n      sum: number;\n    };\n\n    try {\n      const overall: IntermediateWeightedAverage = { count: 0, sum: 0 };\n      const instructors: Map<string, IntermediateWeightedAverage> = new Map();\n\n      responseData.raw.forEach((historicalSectionData) => {\n        const {\n          class_size_group: classSizeGroup,\n          instructor_name: rawInstructorName,\n          GPA: gpa,\n        } = historicalSectionData;\n\n        if (typeof classSizeGroup !== 'string') return;\n        if (typeof rawInstructorName !== 'string') return;\n        if (typeof gpa !== 'number') return;\n\n        // Map the class size group to an estimate\n        // of the number of actual students.\n        // This is used as the weight when the average GPA for this section\n        // is added to the overall course GPA and instructor-specific GPAs,\n        // but it's just a best-estimate and makes the GPAs inaccurate.\n        // As of 2021-11-06, these are the same estimates\n        // that Course Critique uses in their app\n        // (used here since ideally GT Scheduler should report the same GPAs).\n        let classSizeEstimate: number;\n        switch (classSizeGroup.toLowerCase()) {\n          case 'very small (fewer than 10 students)':\n            classSizeEstimate = 5;\n            break;\n          case 'small (10-20 students)':\n            classSizeEstimate = 15;\n            break;\n          case 'mid-size (21-30 students)':\n            classSizeEstimate = 25;\n            break;\n          case 'large (31-49 students)':\n            classSizeEstimate = 40;\n            break;\n          case 'very large (50 students or more)':\n            classSizeEstimate = 50;\n            break;\n          default:\n            // Unknown class size group; skip this section\n            return;\n        }\n\n        // Normalize the instructor name from \"LN, FN\" to \"FN LN\"\n        let instructorName = rawInstructorName;\n        const nameSegments = instructorName.split(', ');\n        if (nameSegments.length === 2) {\n          const [lastName, firstName] = nameSegments as [string, string];\n          instructorName = `${firstName} ${lastName}`;\n        }\n\n        // Add the section GPA to the overall GPA\n        overall.count += classSizeEstimate;\n        overall.sum += gpa * classSizeEstimate;\n\n        // Add the section GPA to the instructor GPA\n        const instructorGpa = instructors.get(instructorName) ?? {\n          count: 0,\n          sum: 0,\n        };\n        instructorGpa.count += classSizeEstimate;\n        instructorGpa.sum += gpa * classSizeEstimate;\n        instructors.set(instructorName, instructorGpa);\n      });\n\n      // Now, finally compute the actual weighted averages\n      // and assemble the `CourseGpa` type:\n      const gpaMap: CourseGpa = {};\n      if (overall.count > 0) {\n        gpaMap.averageGpa = overall.sum / overall.count;\n      }\n      instructors.forEach((instructorGpa, instructorName) => {\n        if (instructorGpa.count > 0) {\n          gpaMap[instructorName] = instructorGpa.sum / instructorGpa.count;\n        }\n      });\n      return gpaMap;\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message:\n            'error extracting course GPA from Course Critique API response',\n          source: err,\n          fields: {\n            id: this.id,\n          },\n        })\n      );\n      return null;\n    }\n  }\n}\n\n// Based on response for CS 6035 on 2021-11-06\n// from the Course Critique API.\n// Each field has `| unknown` added to ensure\n// that we narrow the type before using them.\ninterface CourseDetailsAPIResponse {\n  header: [\n    {\n      course_name: string | null | unknown;\n      credits: number | null | unknown;\n      description: string | null | unknown;\n      full_name: string | null | unknown;\n    }\n  ];\n  raw: Array<{\n    instructor_gt_username: string | unknown;\n    instructor_name: string | unknown;\n    link: string | unknown;\n    class_size_group: string | unknown;\n    GPA: number | unknown;\n    A: number | unknown;\n    B: number | unknown;\n    C: number | unknown;\n    D: number | unknown;\n    F: number | unknown;\n    W: number | unknown;\n  }>;\n}\n","import axios from 'axios';\nimport cheerio from 'cheerio';\n\nimport { unique } from '../../utils/misc';\nimport { DELIVERY_MODES, BACKEND_BASE_URL } from '../../constants';\nimport Course from './Course';\nimport Oscar from './Oscar';\nimport { CrawlerMeeting, Meeting } from '../../types';\n\nexport type Seating = [\n  seating:\n    | [] // Loading state\n    | [\n        // Loaded state\n        seatsCurrent: number,\n        seatsTotal: number,\n        waitlistCurrent: number,\n        waitlistTotal: number\n      ]\n    | string[], // Error state\n  fetchTime: number\n];\n\ntype SectionConstructionData = [\n  crn: string,\n  meetings: CrawlerMeeting[],\n  credits: number,\n  scheduleTypeIndex: number,\n  campusIndex: number,\n  attributeIndices: number[],\n  gradeBasisIndex: number\n];\n\nexport default class Section {\n  course: Course;\n\n  id: string;\n\n  crn: string;\n\n  seating: Seating;\n\n  credits: number;\n\n  scheduleType: string;\n\n  campus: string;\n\n  deliveryMode: string | undefined;\n\n  gradeBasis: string;\n\n  meetings: Meeting[];\n\n  instructors: string[];\n\n  // This field is initialized after construction inside `Course.constructor`\n  associatedLabs: Section[];\n\n  // This field is initialized after construction inside `Course.constructor`\n  associatedLectures: Section[];\n\n  term: string;\n\n  constructor(\n    oscar: Oscar,\n    course: Course,\n    sectionId: string,\n    data: SectionConstructionData\n  ) {\n    this.term = oscar.term;\n    const [\n      crn,\n      meetings,\n      credits,\n      scheduleTypeIndex,\n      campusIndex,\n      attributeIndices,\n      gradeBasisIndex,\n    ] = data;\n\n    this.course = course;\n    this.id = sectionId;\n    this.crn = crn;\n    this.seating = [[], 0];\n    this.credits = credits;\n    this.scheduleType = oscar.scheduleTypes[scheduleTypeIndex] ?? 'unknown';\n    this.campus = oscar.campuses[campusIndex] ?? 'unknown';\n\n    const attributes = attributeIndices\n      .map((attributeIndex) => oscar.attributes[attributeIndex])\n      .flatMap((attribute) => (attribute == null ? [] : [attribute]));\n    this.deliveryMode = attributes.find(\n      (attribute) => attribute in DELIVERY_MODES\n    );\n\n    this.gradeBasis = oscar.gradeBases[gradeBasisIndex] ?? 'unknown';\n    this.meetings = meetings.map<Meeting>(\n      ([\n        periodIndex,\n        days,\n        where,\n        locationIndex,\n        instructors,\n        dateRangeIndex,\n      ]) => ({\n        period: oscar.periods[periodIndex],\n        days: days === '&nbsp;' ? [] : days.split(''),\n        where,\n        location: oscar.locations[locationIndex] ?? null,\n        instructors: instructors.map((instructor) =>\n          instructor.replace(/ \\(P\\)$/, '').trim()\n        ),\n        // We need some fallback here\n        dateRange: oscar.dateRanges[dateRangeIndex] ?? {\n          from: new Date(),\n          to: new Date(),\n        },\n      })\n    );\n    this.instructors = unique(\n      this.meetings\n        .map<string[]>(({ instructors }) => instructors)\n        .reduce((accum, instructors) => [...accum, ...instructors], [])\n    );\n\n    // These fields are initialized after construction\n    // inside `Course.constructor`\n    this.associatedLabs = [];\n    this.associatedLectures = [];\n  }\n\n  async fetchSeating(term: string): Promise<Seating> {\n    const prevDate = this.seating[1];\n    const currDate = Date.now();\n\n    if (currDate - prevDate > 300000) {\n      const url = `${BACKEND_BASE_URL}/proxy/class_section?term=${term}&crn=${this.crn}`;\n      return axios({\n        url,\n        method: 'get',\n        headers: {\n          'X-Requested-With': 'XMLHttpRequest',\n          'Content-Type': 'text/html',\n        },\n      })\n        .then((response) => {\n          const $ = cheerio.load(response.data);\n          const availabilityTable = $('.datadisplaytable .datadisplaytable');\n          const tableRow = availabilityTable.find('tr');\n\n          this.seating = [\n            [\n              parseInt(tableRow.eq(1).children('td').first().text(), 10),\n              parseInt(tableRow.eq(1).children('td').eq(1).text(), 10),\n              parseInt(tableRow.eq(2).children('td').first().text(), 10),\n              parseInt(tableRow.eq(2).children('td').eq(1).text(), 10),\n            ],\n            currDate,\n          ];\n\n          return this.seating;\n        })\n        .catch(() => [new Array(4).fill('N/A'), currDate]);\n    }\n    return this.seating;\n  }\n}\n","import { Combination } from '../../types';\n\nexport default class SortingOption {\n  label: string;\n\n  calculateFactor: (combo: Combination) => number;\n\n  constructor(label: string, calculateFactor: (combo: Combination) => number) {\n    this.label = label;\n    this.calculateFactor = calculateFactor;\n  }\n}\n","import { Course, Section, SortingOption } from '.';\nimport { hasConflictBetween, stringToTime } from '../../utils/misc';\nimport {\n  Combination,\n  Period,\n  DateRange,\n  Location,\n  CrawlerTermData,\n} from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\n// `new Oscar(...)` gets the entirety of the crawler JSON data\ntype OscarConstructionDate = CrawlerTermData;\n\nexport default class Oscar {\n  periods: (Period | undefined)[];\n\n  dateRanges: DateRange[];\n\n  scheduleTypes: string[];\n\n  campuses: string[];\n\n  attributes: string[];\n\n  gradeBases: string[];\n\n  locations: (Location | null)[];\n\n  updatedAt: Date;\n\n  version: number;\n\n  courses: Course[];\n\n  courseMap: Record<string, Course>;\n\n  crnMap: Record<string, Section>;\n\n  sortingOptions: SortingOption[];\n\n  constructor(data: OscarConstructionDate, public term: string) {\n    const { courses, caches, updatedAt, version } = data;\n\n    this.periods = caches.periods.map((period, i) => {\n      if (period === 'TBA') {\n        return undefined;\n      }\n\n      const periodSegments = period.split(' - ');\n      if (periodSegments.length !== 2) {\n        softError(\n          new ErrorWithFields({\n            message: 'period did not follow expected format',\n            fields: {\n              period,\n              cacheIndex: i,\n              term: this.term,\n            },\n          })\n        );\n        return undefined;\n      }\n\n      const [start, end] = periodSegments as [string, string];\n      return {\n        start: stringToTime(start),\n        end: stringToTime(end),\n      };\n    });\n\n    this.dateRanges = caches.dateRanges.map((dateRange, i) => {\n      let segments = dateRange.split(' - ');\n      if (segments.length !== 2) {\n        softError(\n          new ErrorWithFields({\n            message: 'date range did not follow expected format',\n            fields: {\n              dateRange,\n              cacheIndex: i,\n              term: this.term,\n            },\n          })\n        );\n        // We need some fallback here\n        segments = ['Jan 1, 1970', 'Jan 2, 1970'];\n      }\n\n      const [from, to] = segments.map((v) => new Date(v)) as [Date, Date];\n      from.setHours(0);\n      to.setHours(23, 59, 59, 999);\n      return { from, to };\n    });\n\n    this.scheduleTypes = caches.scheduleTypes;\n    this.campuses = caches.campuses;\n    this.attributes = caches.attributes;\n    this.gradeBases = caches.gradeBases;\n    this.locations = caches.locations;\n    this.updatedAt = new Date(updatedAt);\n    this.version = version;\n\n    this.courses = Object.entries(courses).flatMap(([courseId, source]) => {\n      try {\n        return [new Course(this, courseId, source)];\n      } catch (err) {\n        softError(\n          new ErrorWithFields({\n            message: 'could not initialize Course bean',\n            fields: {\n              courseId,\n              source,\n              term: this.term,\n            },\n          })\n        );\n        return [];\n      }\n    });\n\n    this.courseMap = {};\n    this.crnMap = {};\n    this.courses.forEach((course) => {\n      this.courseMap[course.id] = course;\n      course.sections.forEach((section) => {\n        this.crnMap[section.crn] = section;\n      });\n    });\n\n    this.sortingOptions = [\n      new SortingOption('Most Compact', (combination) => {\n        const { startMap, endMap } = combination;\n        const diffs = Object.keys(startMap).map((day) => {\n          const end = endMap[day];\n          const start = startMap[day];\n          if (end == null || start == null) return 0;\n          return end - start;\n        });\n        const sum = diffs.reduce((tot, min) => tot + min, 0);\n        return +sum;\n      }),\n      new SortingOption('Earliest Ending', (combination) => {\n        const { endMap } = combination;\n        const ends = Object.values(endMap);\n        const sum = ends.reduce<number>((tot, end) => tot + (end ?? 0), 0);\n        const avg = sum / ends.length;\n        return +avg;\n      }),\n      new SortingOption('Latest Beginning', (combination) => {\n        const { startMap } = combination;\n        const starts = Object.values(startMap);\n        const sum = starts.reduce<number>((tot, min) => tot + (min ?? 0), 0);\n        const avg = sum / starts.length;\n        return -avg;\n      }),\n    ];\n  }\n\n  findCourse(courseId: string): Course | undefined {\n    return this.courseMap[courseId];\n  }\n\n  findSection(crn: string): Section | undefined {\n    return this.crnMap[crn];\n  }\n\n  getCombinations(\n    desiredCourses: readonly string[],\n    pinnedCrns: readonly string[],\n    excludedCrns: readonly string[]\n  ): Combination[] {\n    const crnsList: string[][] = [];\n    const dfs = (courseIndex = 0, crns: string[] = []): void => {\n      if (courseIndex === desiredCourses.length) {\n        crnsList.push(crns);\n        return;\n      }\n      const courseId = desiredCourses[courseIndex];\n      if (courseId === undefined) return;\n      const course = this.findCourse(courseId);\n      if (course === undefined) return;\n      const isIncluded = (section: Section): boolean =>\n        !excludedCrns.includes(section.crn);\n      const isPinned = (section: Section): boolean =>\n        pinnedCrns.includes(section.crn);\n      const hasConflict = (section: Section): boolean =>\n        [...pinnedCrns, ...crns].some((crn) => {\n          const crnSection = this.findSection(crn);\n          if (crnSection === undefined) return false;\n          return hasConflictBetween(crnSection, section);\n        });\n      if (course.hasLab) {\n        // If a course has a lab, then `onlyLectures`, `onlyLabs`,\n        // and `allInOnes` should be non-undefined, but we have to check\n        // anyways here to satisfy TypeScript\n        const pinnedOnlyLecture = (course.onlyLectures ?? []).find(isPinned);\n        const pinnedOnlyLab = (course.onlyLabs ?? []).find(isPinned);\n        const pinnedAllInOne = (course.allInOnes ?? []).find(isPinned);\n        if ((pinnedOnlyLecture && pinnedOnlyLab) || pinnedAllInOne) {\n          dfs(courseIndex + 1, crns);\n        } else if (pinnedOnlyLecture) {\n          pinnedOnlyLecture.associatedLabs.filter(isIncluded).forEach((lab) => {\n            if (hasConflict(lab)) return;\n            dfs(courseIndex + 1, [...crns, lab.crn]);\n          });\n        } else if (pinnedOnlyLab) {\n          pinnedOnlyLab.associatedLectures\n            .filter(isIncluded)\n            .forEach((lecture) => {\n              if (hasConflict(lecture)) return;\n              dfs(courseIndex + 1, [...crns, lecture.crn]);\n            });\n        } else {\n          (course.onlyLectures ?? []).filter(isIncluded).forEach((lecture) => {\n            if (hasConflict(lecture)) return;\n            lecture.associatedLabs.filter(isIncluded).forEach((lab) => {\n              if (hasConflict(lab)) return;\n              dfs(courseIndex + 1, [...crns, lecture.crn, lab.crn]);\n            });\n          });\n          (course.allInOnes ?? []).filter(isIncluded).forEach((section) => {\n            if (hasConflict(section)) return;\n            dfs(courseIndex + 1, [...crns, section.crn]);\n          });\n        }\n      } else if (course.sections.some(isPinned)) {\n        dfs(courseIndex + 1, crns);\n      } else {\n        // If a course does not have a lab, then `sectionGroups` should be\n        // non-undefined, but we have to check anyways here to satisfy\n        // TypeScript\n        Object.values(course.sectionGroups ?? {}).forEach((sectionGroup) => {\n          if (sectionGroup == null) return;\n          const section = sectionGroup.sections.find(isIncluded);\n          if (!section || hasConflict(section)) return;\n          dfs(courseIndex + 1, [...crns, section.crn]);\n        });\n      }\n    };\n    dfs();\n    return crnsList.map((crns) => {\n      const startMap: Record<string, number> = {};\n      const endMap: Record<string, number> = {};\n      this.iterateTimeBlocks([...pinnedCrns, ...crns], (day, period) => {\n        if (period === undefined) return;\n        const end = endMap[day];\n        const start = startMap[day];\n        if (start == null || start > period.start) startMap[day] = period.start;\n        if (end == null || end < period.end) endMap[day] = period.end;\n      });\n      return {\n        crns,\n        startMap,\n        endMap,\n      };\n    });\n  }\n\n  sortCombinations(\n    combinations: Combination[],\n    sortingOptionIndex: number\n  ): Combination[] {\n    const sortingOption = this.sortingOptions[sortingOptionIndex];\n    if (sortingOption === undefined) {\n      throw new ErrorWithFields({\n        message: `sorting option index was out of bounds`,\n        fields: {\n          sortingOptionIndex,\n          actualSortingOptionsLength: this.sortingOptions.length,\n          term: this.term,\n        },\n      });\n    }\n\n    return combinations\n      .map((combination) => ({\n        ...combination,\n        factor: sortingOption.calculateFactor(combination),\n      }))\n      .sort((a, b) => a.factor - b.factor);\n  }\n\n  iterateTimeBlocks(\n    crns: string[],\n    callback: (day: string, period: Period | undefined) => void\n  ): void {\n    crns.forEach((crn) => {\n      const section = this.findSection(crn);\n      if (section !== undefined) {\n        section.meetings.forEach(\n          (meeting) =>\n            meeting.period &&\n            meeting.days.forEach((day) => {\n              callback(day, meeting.period);\n            })\n        );\n      }\n    });\n  }\n}\n\n/**\n * Create an empty instance of the Oscar bean\n * to use as the default context value\n */\nexport const EMPTY_OSCAR = new Oscar(\n  {\n    courses: {},\n    caches: {\n      periods: [],\n      dateRanges: [],\n      scheduleTypes: [],\n      campuses: [],\n      attributes: [],\n      gradeBases: [],\n      locations: [],\n    },\n    // This converts the Date to the expected string\n    // that it serializes to in the crawler\n    updatedAt: JSON.parse(JSON.stringify(new Date())) as string,\n    version: 1,\n  },\n  '197008'\n);\n","import { Immutable } from 'immer';\n\nimport { generateRandomId } from '../utils/misc';\n\n// This file defines all of the possible types that the schedule data can take\n// (in addition to a few helpers/constants).\n// When adding new schedule data versions (schemas),\n// make sure not to delete any of the existing types;\n// they are needed in order to correctly type the migration functions.\n// Including all of the old version schemas and including migration functions\n// ensures that we gracefully handle users opening the app\n// with whatever local state they have (even if it's old),\n// and the app not losing/corrupting their state.\n\n// These should always be the latest version of schedule data\nexport const LATEST_SCHEDULE_DATA_VERSION: ScheduleData['version'] = 2;\nexport type ScheduleData = Version2ScheduleData;\nexport type TermScheduleData = Version2TermScheduleData;\nexport type ScheduleVersion = Version2ScheduleVersion;\nexport type Schedule = Version2Schedule;\n\n// Add additional types here named like \"Version{N}OrNewer\" for each version,\n// where they are an alias for:\n// Version{N}ScheduleData | Version{N+1}ScheduleDataOrNewer.\nexport type Version1ScheduleDataOrNewer =\n  | Version2ScheduleDataOrNewer\n  | Version1ScheduleData;\nexport type Version2ScheduleDataOrNewer = Version2ScheduleData;\n\n// This type should automatically accept any schedule data\nexport type AnyScheduleData = Version1ScheduleDataOrNewer;\n\nexport const defaultScheduleData: Immutable<ScheduleData> = {\n  terms: {},\n  version: 2,\n};\n\nexport const defaultTermScheduleData: Immutable<TermScheduleData> = {\n  versions: {},\n};\n\nexport const defaultSchedule: Immutable<Schedule> = {\n  desiredCourses: [],\n  pinnedCrns: [],\n  excludedCrns: [],\n  colorMap: {},\n  sortingOptionIndex: 0,\n};\n\nexport const generateScheduleVersionId = (): string =>\n  `sv_${generateRandomId(20)}`;\n\n// Version 1 schedule data (2021-09-10)\n// ===================================\n//  - addition of schedule versions\n//  - migration from multiple cookies to single local storage key\n\nexport interface Version1ScheduleData {\n  terms: Record<string, Version1TermScheduleData>;\n  currentTerm: string;\n  version: 1;\n}\n\nexport interface Version1TermScheduleData {\n  versions: Version1ScheduleVersion[];\n  currentIndex: number;\n}\n\nexport interface Version1ScheduleVersion {\n  name: string;\n  schedule: Version1Schedule;\n}\n\nexport interface Version1Schedule {\n  desiredCourses: string[];\n  pinnedCrns: string[];\n  excludedCrns: string[];\n  colorMap: Record<string, string>;\n  sortingOptionIndex: number;\n}\n\n// Version 2 schedule data (2021-10-26)\n// ===================================\n//  - addition of unique keys for schedule versions\n//  - addition of createdAt fields for schedule versions\n//    to provide natural, reconcilable, sort order\n//  - removal of all `currentIndex` and `currentTerm` fields\n//    (instead stored in separate ui state)\n\nexport interface Version2ScheduleData {\n  terms: Record<string, Version2TermScheduleData>;\n  version: 2;\n}\n\nexport interface Version2TermScheduleData {\n  versions: Record<string, Version2ScheduleVersion>;\n}\n\nexport interface Version2ScheduleVersion {\n  name: string;\n  createdAt: string;\n  schedule: Version2Schedule;\n}\n\nexport interface Version2Schedule {\n  desiredCourses: string[];\n  pinnedCrns: string[];\n  excludedCrns: string[];\n  colorMap: Record<string, string>;\n  sortingOptionIndex: number;\n}\n","import React from 'react';\nimport { Draft, Immutable } from 'immer';\n\nimport { Oscar } from '../data/beans';\nimport { EMPTY_OSCAR } from '../data/beans/Oscar';\nimport { defaultSchedule, Schedule } from '../data/types';\nimport { ErrorWithFields } from '../log';\n\ntype ExtraData = {\n  term: string;\n  currentVersion: string;\n  allVersionNames: { id: string; name: string }[];\n  // `oscar` is included below as a separate type\n};\n\nexport type ScheduleContextData = Immutable<Schedule> &\n  // `Oscar` can't go into `Immutable`, so we place it separately\n  Immutable<ExtraData> & { readonly oscar: Oscar };\n\nexport type ScheduleContextSetters = {\n  setTerm: (next: string) => void;\n  patchSchedule: (patch: Partial<Schedule>) => void;\n  updateSchedule: (\n    applyDraft: (draft: Draft<Schedule>) => void | Immutable<Schedule>\n  ) => void;\n  setCurrentVersion: (next: string) => void;\n  addNewVersion: (name: string, select?: boolean) => void;\n  deleteVersion: (id: string) => void;\n  renameVersion: (id: string, newName: string) => void;\n};\nexport type ScheduleContextValue = [\n  ScheduleContextData,\n  ScheduleContextSetters\n];\nexport const ScheduleContext = React.createContext<ScheduleContextValue>([\n  {\n    term: '',\n    currentVersion: '',\n    allVersionNames: [],\n    oscar: EMPTY_OSCAR,\n    ...defaultSchedule,\n  },\n  {\n    setTerm: (next: string): void => {\n      throw new ErrorWithFields({\n        message: 'empty ScheduleContext.setTerm value being used',\n        fields: {\n          next,\n        },\n      });\n    },\n    patchSchedule: (patch: Partial<Schedule>): void => {\n      throw new ErrorWithFields({\n        message: 'empty ScheduleContext.patchSchedule value being used',\n        fields: {\n          patch,\n        },\n      });\n    },\n    updateSchedule: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty ScheduleContext.updateSchedule value being used',\n      });\n    },\n    setCurrentVersion: (next: string): void => {\n      throw new ErrorWithFields({\n        message: 'empty ScheduleContext.setCurrentVersion value being used',\n        fields: {\n          next,\n        },\n      });\n    },\n    addNewVersion: (name: string, select?: boolean): void => {\n      throw new ErrorWithFields({\n        message: 'empty ScheduleContext.addNewVersion value being used',\n        fields: {\n          name,\n          select,\n        },\n      });\n    },\n    deleteVersion: (id: string): void => {\n      throw new ErrorWithFields({\n        message: 'empty ScheduleContext.deleteVersion value being used',\n        fields: {\n          id,\n        },\n      });\n    },\n    renameVersion: (id: string, newName: string): void => {\n      throw new ErrorWithFields({\n        message: 'empty ScheduleContext.renameVersion value being used',\n        fields: {\n          id,\n          newName,\n        },\n      });\n    },\n  },\n]);\n","import React from 'react';\n\nimport { ErrorWithFields } from '../log';\n\nexport type OverlayCrnsContextValue = [string[], (next: string[]) => void];\nexport const OverlayCrnsContext = React.createContext<OverlayCrnsContextValue>([\n  [],\n  (next: string[]): void => {\n    throw new ErrorWithFields({\n      message: 'empty OverlayCrnsContext.setOverlayCrns value being used',\n      fields: {\n        next,\n      },\n    });\n  },\n]);\n\nexport const a = 'ouleuouleuouleu';\n","import React, { useContext } from 'react';\nimport ReactTooltip from 'react-tooltip';\n\nimport { classes, getContentClassName, periodToString } from '../../utils/misc';\nimport { CLOSE, OPEN, DAYS } from '../../constants';\nimport { ScheduleContext } from '../../contexts';\nimport { Period } from '../../types';\n\nimport './stylesheet.scss';\n\nexport interface TimeBlockPosition {\n  rowIndex: number;\n  rowSize: number;\n  period: Period;\n  crn: string;\n}\n\nexport type SizeInfo = Record<string, Record<string, TimeBlockPosition>>;\n\nexport type TimeBlocksProps = {\n  className?: string;\n  crn: string;\n  overlay?: boolean;\n  capture: boolean;\n  preview: boolean;\n  isAutosized: boolean;\n  sizeInfo: SizeInfo;\n};\n\nexport function makeSizeInfoKey(period: Period): string {\n  return [period.start, period.end].join('-');\n}\n\nexport default function TimeBlocks({\n  className,\n  crn,\n  overlay = false,\n  preview,\n  capture,\n  isAutosized,\n  sizeInfo,\n}: TimeBlocksProps): React.ReactElement | null {\n  const [{ oscar, colorMap }] = useContext(ScheduleContext);\n\n  const section = oscar.findSection(crn);\n  if (section == null) return null;\n\n  const color = colorMap[section.course.id];\n  const contentClassName = getContentClassName(color);\n\n  return (\n    <div\n      className={classes(\n        'TimeBlocks',\n        capture && 'capture',\n        overlay && 'overlay',\n        className\n      )}\n    >\n      {section.meetings.map((meeting, i) => {\n        const { period } = meeting;\n        if (period == null) return;\n\n        const sizeInfoKey = makeSizeInfoKey(period);\n        return meeting.days.map((day) => {\n          const sizeInfoDay = sizeInfo[day];\n          if (sizeInfoDay == null) return;\n          const sizeInfoPeriodDay = sizeInfoDay[sizeInfoKey];\n          if (sizeInfoPeriodDay == null) return;\n\n          return (\n            <div\n              className={classes('meeting', contentClassName, 'default', day)}\n              key={[i, day].join('-')}\n              style={{\n                top: `${((period.start - OPEN) / (CLOSE - OPEN)) * 100}%`,\n                height: `${\n                  ((period.end - period.start) / (CLOSE - OPEN)) * 100\n                }%`,\n                width: `${20 / sizeInfoPeriodDay.rowSize}%`,\n                left: `${\n                  DAYS.indexOf(day) * 20 +\n                  sizeInfoPeriodDay.rowIndex * (20 / sizeInfoPeriodDay.rowSize)\n                }%`,\n                backgroundColor: color,\n              }}\n              data-tip\n              data-for={crn}\n            >\n              {!preview && (\n                <div className=\"meeting-wrapper\">\n                  <div className=\"ids\">\n                    <span className=\"course-id\">{section.course.id}</span>\n                    <span className=\"section-id\">&nbsp;{section.id}</span>\n                  </div>\n                  <span className=\"period\">{periodToString(period)}</span>\n                  <span className=\"where\">{meeting.where}</span>\n                  <span className=\"instructors\">\n                    {meeting.instructors.join(', ')}\n                  </span>\n                </div>\n              )}\n            </div>\n          );\n        });\n      })}\n\n      {!isAutosized && (\n        <ReactTooltip\n          id={crn}\n          className=\"tooltip\"\n          type=\"dark\"\n          place=\"top\"\n          effect=\"solid\"\n        >\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <b>Course Name</b>\n                </td>\n                <td>{section.course.title}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Delivery Type</b>\n                </td>\n                <td>{section.deliveryMode}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Course Number</b>\n                </td>\n                <td>{section.crn}</td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Credit Hours</b>\n                </td>\n                <td>{section.credits}</td>\n              </tr>\n            </tbody>\n          </table>\n        </ReactTooltip>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\n\nimport { CLOSE, DAYS, OPEN } from '../../constants';\nimport { classes, timeToShortString } from '../../utils/misc';\nimport { TimeBlocks } from '..';\nimport { ScheduleContext } from '../../contexts';\nimport { makeSizeInfoKey, TimeBlockPosition } from '../TimeBlocks';\nimport { Period } from '../../types';\n\nimport './stylesheet.scss';\n\nexport type CalendarProps = {\n  className?: string;\n  overlayCrns: string[];\n  preview?: boolean;\n  capture?: boolean;\n  isAutosized?: boolean;\n};\n\nexport default function Calendar({\n  className,\n  overlayCrns,\n  preview = false,\n  capture = false,\n  isAutosized = false,\n}: CalendarProps): React.ReactElement {\n  const [{ pinnedCrns, oscar }] = useContext(ScheduleContext);\n\n  // Contains the rowIndex's and rowSize's passed into each crn's TimeBlocks\n  // e.g. crnSizeInfo[crn][day][\"period.start-period.end\"].rowIndex\n  const crnSizeInfo: Record<\n    string,\n    Record<string, Record<string, TimeBlockPosition>>\n  > = {};\n\n  // Recursively sets the rowSize of all time blocks within the current\n  // connected grouping of blocks to the current block's rowSize\n  const updateJoinedRowSizes = (\n    periodInfos: TimeBlockPosition[],\n    seen: Set<string>,\n    curCrn: string,\n    curPeriod: Period,\n    newRowSize: number\n  ): void => {\n    if (seen.has(curCrn)) {\n      return;\n    }\n    seen.add(curCrn);\n\n    periodInfos\n      .filter(\n        (period2Info) =>\n          period2Info.period.start < curPeriod.end &&\n          period2Info.period.end > curPeriod.start\n      )\n      .forEach((period2Info) => {\n        period2Info.rowSize = newRowSize;\n        updateJoinedRowSizes(\n          periodInfos,\n          seen,\n          period2Info.crn,\n          period2Info.period,\n          newRowSize\n        );\n      });\n  };\n\n  const crns = Array.from(new Set([...pinnedCrns, ...(overlayCrns || [])]));\n  const maxMeetingLen = (crn: string): number => {\n    const section = oscar.findSection(crn);\n    if (section == null) return 0;\n    return Math.max(\n      ...section.meetings.flatMap(({ period }) => {\n        if (period == null) return [];\n        return [period.end - period.start];\n      })\n    );\n  };\n\n  crns.sort((a, b) => maxMeetingLen(a) - maxMeetingLen(b));\n\n  // Populates crnSizeInfo by iteratively finding the next time block's\n  // rowSize and rowIndex (1 more than greatest of already processed connected\n  // blocks), updating the processed connected blocks to match its rowSize\n  crns.forEach((crn) => {\n    const section = oscar.findSection(crn);\n    if (section == null) return;\n\n    section.meetings\n      .filter((m) => m.period)\n      .forEach((meeting) => {\n        const { period } = meeting;\n        if (period == null) return;\n\n        meeting.days.forEach((day) => {\n          const dayPeriodInfos = Object.values(crnSizeInfo)\n            .flatMap<TimeBlockPosition | undefined>((days) =>\n              days != null ? Object.values(days[day] ?? {}) : []\n            )\n            .flatMap<TimeBlockPosition>((info) => (info == null ? [] : [info]));\n\n          const curRowSize = dayPeriodInfos\n            .filter(\n              (period2Info) =>\n                period2Info.period.start < period.end &&\n                period2Info.period.end > period.start\n            )\n            .reduce(\n              (acc, period2Info) => Math.max(acc, period2Info.rowSize + 1),\n              1\n            );\n\n          updateJoinedRowSizes(\n            dayPeriodInfos,\n            new Set(),\n            crn,\n            period,\n            curRowSize\n          );\n\n          const courseSizeInfo = crnSizeInfo[crn] || {};\n          crnSizeInfo[crn] = courseSizeInfo;\n\n          const daySizeInfo = courseSizeInfo[day] || {};\n          courseSizeInfo[day] = daySizeInfo;\n\n          daySizeInfo[makeSizeInfoKey(period)] = {\n            period,\n            crn,\n            rowIndex: curRowSize - 1,\n            rowSize: curRowSize,\n          };\n        });\n      });\n  });\n\n  return (\n    <div\n      className={classes(\n        'Calendar',\n        capture && 'capture',\n        preview && 'preview',\n        className\n      )}\n    >\n      {!preview && (\n        <div className=\"times\">\n          {new Array((CLOSE - OPEN) / 60).fill(0).map((_, i) => {\n            const time = OPEN + i * 60;\n            return (\n              <div className=\"time\" key={time}>\n                <span className=\"label\">{timeToShortString(time)}</span>\n              </div>\n            );\n          })}\n        </div>\n      )}\n      {!preview && (\n        <div className=\"days\">\n          {DAYS.map((day) => (\n            <div className=\"day\" key={day}>\n              <span className=\"label\">{day}</span>\n            </div>\n          ))}\n        </div>\n      )}\n      <div className=\"meetings\">\n        {pinnedCrns.map((crn) => (\n          <TimeBlocks\n            key={crn}\n            crn={crn}\n            preview={preview}\n            capture={capture}\n            isAutosized={isAutosized}\n            sizeInfo={crnSizeInfo[crn] ?? {}}\n          />\n        ))}\n        {overlayCrns &&\n          overlayCrns\n            .filter((crn) => !pinnedCrns.includes(crn))\n            .map((crn) => (\n              <TimeBlocks\n                key={crn}\n                crn={crn}\n                overlay={!preview}\n                preview={preview}\n                capture={capture}\n                isAutosized\n                sizeInfo={crnSizeInfo[crn] ?? {}}\n              />\n            ))}\n      </div>\n    </div>\n  );\n}\n","import { useRef, useEffect } from 'react';\n\n/**\n * Gets the previous value of some parameter.\n * Taken from https://usehooks.com/usePrevious/.\n */\nexport default function usePrevious<T>(\n  val: NonNullable<T>\n): NonNullable<T> | null {\n  const ref = useRef<NonNullable<T> | null>(null);\n  useEffect(() => {\n    ref.current = val;\n  }, [val]);\n\n  return ref.current;\n}\n","import React from 'react';\nimport { Modal as ReactOverlaysModal } from 'react-overlays';\nimport { CSSTransition } from 'react-transition-group';\n\nimport { classes } from '../../utils/misc';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport './stylesheet.scss';\n\nconst transitionSpeed = 200; // ms\n\nexport interface ModalButtonProps {\n  label: React.ReactNode;\n  onClick?: () => void;\n  cancel?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n}\n\nexport type ModalProps = {\n  children?: React.ReactNode;\n  buttons?: ModalButtonProps[];\n  show: boolean;\n  onHide: () => void;\n  width?: number;\n  className?: string;\n  style?: React.CSSProperties;\n  /**\n   * Whether the modal should use the previous value of children\n   * while animating the hide.\n   * Useful if the content is dependent on state that changes\n   * at the same time as the show prop;\n   * without this, the other content would flash as the modal disappears.\n   * Default: `true`\n   */\n  preserveChildrenWhileHiding?: boolean;\n};\n\ntype TransitionProps = {\n  in: boolean;\n  appear?: boolean | undefined;\n  unmountOnExit?: boolean | undefined;\n  children?: React.ReactNode;\n};\n\n/**\n * Displays a modal popup\n * that can be used to display information to the user\n * or ask them to confirm an action.\n *\n * Uses https://react-bootstrap.github.io/react-overlays/api/Modal/\n * to implement the interaction & accessibility.\n */\nexport default function Modal({\n  children,\n  buttons = [],\n  show,\n  onHide,\n  width = 480,\n  className,\n  style,\n  preserveChildrenWhileHiding = true,\n}: ModalProps): React.ReactElement {\n  const previousChildren = usePrevious(children ?? <></>);\n  const previousShow = usePrevious(show);\n  let derivedChildren = children;\n  if (!show && previousShow === true) {\n    // We are transitioning out,\n    // check to see if we should use the previous children\n    if (preserveChildrenWhileHiding && previousChildren != null) {\n      derivedChildren = previousChildren;\n    }\n  }\n\n  return (\n    <ReactOverlaysModal\n      show={show}\n      onHide={onHide}\n      onBackdropClick={onHide}\n      className=\"modal-positioner\"\n      renderBackdrop={(props): React.ReactElement => (\n        <div {...props} className=\"modal-backdrop\" />\n      )}\n      transition={FadeZoom}\n      backdropTransition={Fade}\n    >\n      <div className={classes('modal', className)} style={{ width, ...style }}>\n        <div className=\"modal__content\">{derivedChildren}</div>\n        {buttons.length > 0 && (\n          <div className=\"modal__footer\">\n            {buttons.map((props, i) => (\n              <ModalButton {...props} key={i} />\n            ))}\n          </div>\n        )}\n      </div>\n    </ReactOverlaysModal>\n  );\n}\n\n// Private sub-components\n\nfunction ModalButton({\n  label,\n  onClick,\n  cancel,\n  className,\n  style,\n}: ModalButtonProps): React.ReactElement {\n  return (\n    <button\n      className={classes(\n        'modal__button',\n        cancel && 'modal__button--cancel',\n        !cancel && 'modal__button--normal',\n        className\n      )}\n      type=\"button\"\n      onClick={onClick}\n      style={style}\n    >\n      {label}\n    </button>\n  );\n}\n\nfunction Fade({ children, ...rest }: TransitionProps): React.ReactElement {\n  return (\n    <CSSTransition\n      {...rest}\n      timeout={transitionSpeed}\n      classNames=\"modal-transition--fade\"\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n\nfunction FadeZoom({ children, ...rest }: TransitionProps): React.ReactElement {\n  return (\n    <CSSTransition\n      {...rest}\n      timeout={transitionSpeed}\n      classNames=\"modal-transition--fade-zoom\"\n    >\n      {children}\n    </CSSTransition>\n  );\n}\n","import React, { useCallback, useContext, useMemo, useState } from 'react';\nimport { AutoSizer, List } from 'react-virtualized';\n\nimport { Button, Calendar, Select } from '..';\nimport { OverlayCrnsContext, ScheduleContext } from '../../contexts';\nimport { Combination } from '../../types';\nimport Modal from '../Modal';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nexport default function CombinationContainer(): React.ReactElement {\n  const [\n    { oscar, desiredCourses, pinnedCrns, excludedCrns, sortingOptionIndex },\n    { patchSchedule },\n  ] = useContext(ScheduleContext);\n  const [, setOverlayCrns] = useContext(OverlayCrnsContext);\n\n  const [confirmReset, setConfirmReset] = useState(false);\n  const handleResetPinnedCrns = useCallback(() => {\n    setConfirmReset(true);\n  }, []);\n\n  const combinations = useMemo(\n    () => oscar.getCombinations(desiredCourses, pinnedCrns, excludedCrns),\n    [oscar, desiredCourses, pinnedCrns, excludedCrns]\n  );\n  const sortedCombinations = useMemo(\n    () => oscar.sortCombinations(combinations, sortingOptionIndex),\n    [oscar, combinations, sortingOptionIndex]\n  );\n\n  return (\n    <>\n      <div className=\"CombinationContainer\">\n        <Select\n          onChange={(newSortingOptionIndex): void =>\n            patchSchedule({ sortingOptionIndex: newSortingOptionIndex })\n          }\n          current={sortingOptionIndex}\n          options={oscar.sortingOptions.map((sortingOption, i) => ({\n            id: i,\n            label: sortingOption.label,\n          }))}\n        />\n        <Button\n          className=\"reset\"\n          onClick={handleResetPinnedCrns}\n          disabled={pinnedCrns.length === 0}\n        >\n          Reset Sections\n        </Button>\n        <div className=\"scroller\">\n          <AutoSizer>\n            {({ width, height }): React.ReactElement => (\n              <List\n                width={width}\n                height={height}\n                style={{ outline: 'none' }}\n                rowCount={sortedCombinations.length}\n                rowHeight={108}\n                rowRenderer={({ index, key, style }): React.ReactElement => {\n                  const { crns } = sortedCombinations[index] as Combination;\n                  return (\n                    <div className=\"list-item\" style={style} key={key}>\n                      <div\n                        className=\"combination\"\n                        onMouseEnter={(): void => setOverlayCrns(crns)}\n                        onMouseLeave={(): void => setOverlayCrns([])}\n                        onClick={(): void =>\n                          patchSchedule({\n                            pinnedCrns: [...pinnedCrns, ...crns],\n                          })\n                        }\n                      >\n                        <div className=\"number\">{index + 1}</div>\n                        <Calendar\n                          className=\"calendar-preview\"\n                          overlayCrns={crns}\n                          isAutosized\n                          preview\n                        />\n                      </div>\n                    </div>\n                  );\n                }}\n              />\n            )}\n          </AutoSizer>\n        </div>\n      </div>\n\n      <Modal\n        show={confirmReset}\n        onHide={(): void => setConfirmReset(false)}\n        buttons={[\n          {\n            label: 'Cancel',\n            cancel: true,\n            onClick: (): void => setConfirmReset(false),\n          },\n          {\n            label: 'Reset',\n            onClick: (): void => {\n              setConfirmReset(false);\n              patchSchedule({\n                pinnedCrns: [],\n              });\n            },\n          },\n        ]}\n      >\n        <div style={{ textAlign: 'center' }}>\n          <h2>Reset confirmation</h2>\n          <p>Are you sure you want to reset selected sections?</p>\n        </div>\n      </Modal>\n    </>\n  );\n}\n","export const cancelledSymbol = Symbol('__#Cancellable-cancelled-symbol');\n\n/**\n * Gives an awaitable class (via `promise`) that can be cancelled at any time.\n * Useful when combined with `Promise.race` to cancel background tasks.\n */\nexport default class Cancellable {\n  isCancelled: boolean;\n\n  cancel: () => void;\n\n  promise: Promise<symbol>;\n\n  constructor() {\n    this.isCancelled = false;\n    this.cancel = (): void => undefined;\n    this.promise = new Promise<symbol>((resolve) => {\n      this.cancel = (): void => {\n        this.isCancelled = true;\n        resolve(cancelledSymbol);\n      };\n    });\n  }\n\n  /**\n   * Runs a promise to completion, returning its value.\n   * However, if this operation was cancelled before the promise completed,\n   * then it instead returns an object with `cancelled` true.\n   * The promise will still complete, but its value will be ignored.\n   */\n  async perform<T>(\n    other: Promise<T>\n  ): Promise<{ cancelled: true } | { cancelled: false; value: T }> {\n    const result = await Promise.race([this.promise, other]);\n\n    if (result === cancelledSymbol) {\n      return { cancelled: true };\n    }\n\n    return {\n      cancelled: false,\n      value: result as T,\n    };\n  }\n}\n","import React, { useCallback, useContext, useEffect, useState } from 'react';\nimport {\n  faAngleDown,\n  faAngleUp,\n  faInfoCircle,\n  faShareAlt,\n  faPalette,\n  faPlus,\n  faTrash,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, getContentClassName } from '../../utils/misc';\nimport Cancellable from '../../utils/cancellable';\nimport { ActionRow, Instructor, Palette, Prerequisite } from '..';\nimport { ScheduleContext } from '../../contexts';\nimport { Course as CourseBean, Section } from '../../data/beans';\nimport { CourseGpa, CrawlerPrerequisites } from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\nimport './stylesheet.scss';\n\nexport type CourseProps = {\n  className?: string;\n  courseId: string;\n  onAddCourse?: () => void;\n};\n\nexport default function Course({\n  className,\n  courseId,\n  onAddCourse,\n}: CourseProps): React.ReactElement | null {\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [prereqOpen, setPrereqOpen] = useState<boolean>(false);\n  const [paletteShown, setPaletteShown] = useState<boolean>(false);\n  const [gpaMap, setGpaMap] = useState<CourseGpa | null>(null);\n  const isSearching = Boolean(onAddCourse);\n  const [\n    { oscar, term, desiredCourses, pinnedCrns, excludedCrns, colorMap },\n    { patchSchedule },\n  ] = useContext(ScheduleContext);\n\n  useEffect(() => {\n    const course = oscar.findCourse(courseId);\n    if (course == null) return;\n    if (isSearching) return;\n\n    // Allow the operation to be cancelled early (if the component unmounts)\n    const loadOperation = new Cancellable();\n    async function loadCourseGpa(): Promise<void> {\n      if (course == null) return;\n\n      const promise = course.fetchGpa();\n      const result = await loadOperation.perform(promise);\n      if (!result.cancelled) {\n        setGpaMap(result.value);\n      }\n    }\n\n    loadCourseGpa().catch((err) => {\n      softError(\n        new ErrorWithFields({\n          message: 'error fetching course GPA',\n          source: err,\n          fields: {\n            courseId,\n            term: course.term,\n          },\n        })\n      );\n    });\n\n    return (): void => {\n      loadOperation.cancel();\n    };\n  }, [isSearching, oscar, courseId]);\n\n  const handleRemoveCourse = useCallback(\n    (course: CourseBean) => {\n      const newColorMap = { ...colorMap };\n      delete newColorMap[course.id];\n\n      patchSchedule({\n        desiredCourses: desiredCourses.filter((id) => id !== course.id),\n        pinnedCrns: pinnedCrns.filter(\n          (crn) => !course.sections.some((section) => section.crn === crn)\n        ),\n        excludedCrns: excludedCrns.filter(\n          (crn) => !course.sections.some((section) => section.crn === crn)\n        ),\n        colorMap: newColorMap,\n      });\n    },\n    [desiredCourses, pinnedCrns, excludedCrns, colorMap, patchSchedule]\n  );\n\n  const handleIncludeSections = useCallback(\n    (sections: Section[]) => {\n      const crns = sections.map((section) => section.crn);\n      patchSchedule({\n        excludedCrns: excludedCrns.filter((crn) => !crns.includes(crn)),\n      });\n    },\n    [excludedCrns, patchSchedule]\n  );\n\n  const course = oscar.findCourse(courseId);\n  if (course == null) return null;\n\n  const color = colorMap[course.id];\n  const contentClassName = color != null && getContentClassName(color);\n\n  const hasPrereqs = oscar.version > 1;\n  let prereqs: CrawlerPrerequisites | null = null;\n  if (hasPrereqs) {\n    prereqs = course.prereqs ?? [];\n  }\n\n  const instructorMap: Record<string, Section[] | undefined> = {};\n  course.sections.forEach((section) => {\n    const [primaryInstructor = 'Not Assigned'] = section.instructors;\n\n    const instructorSections = instructorMap[primaryInstructor] ?? [];\n    instructorSections.push(section);\n    instructorMap[primaryInstructor] = instructorSections;\n  });\n\n  const instructors = Object.keys(instructorMap);\n  const excludedInstructors = instructors.filter((instructor) => {\n    const sections = instructorMap[instructor];\n    if (sections == null) return false;\n    return sections.every((section) => excludedCrns.includes(section.crn));\n  });\n  const includedInstructors = instructors.filter(\n    (instructor) => !excludedInstructors.includes(instructor)\n  );\n\n  const prereqControl = (\n    nextPrereqOpen: boolean,\n    nextExpanded: boolean\n  ): void => {\n    setPrereqOpen(nextPrereqOpen);\n    setExpanded(nextExpanded);\n  };\n  const prereqAction = {\n    icon: faShareAlt,\n    styling: { transform: 'rotate(90deg)' },\n    onClick: (): void => {\n      prereqControl(true, !prereqOpen ? true : !expanded);\n    },\n  };\n\n  const infoAction = {\n    icon: faInfoCircle,\n    href:\n      `https://oscar.gatech.edu/pls/bprod/bwckctlg.p_disp_` +\n      `course_detail?cat_term_in=${term}&subj_code_in=` +\n      `${course.subject}&crse_numb_in=${course.number}`,\n  };\n\n  const pinnedSections = course.sections.filter((section) =>\n    pinnedCrns.includes(section.crn)\n  );\n  const totalCredits = pinnedSections.reduce(\n    (credits, section) => credits + section.credits,\n    0\n  );\n\n  return (\n    <div\n      className={classes('Course', contentClassName, 'default', className)}\n      style={{ backgroundColor: color }}\n      key={course.id}\n    >\n      <ActionRow\n        label={[\n          course.id,\n          pinnedSections.map((section) => section.id).join(', '),\n        ].join(' ')}\n        actions={\n          isSearching\n            ? [\n                { icon: faPlus, onClick: onAddCourse },\n                hasPrereqs ? prereqAction : infoAction,\n              ]\n            : [\n                {\n                  icon: expanded ? faAngleUp : faAngleDown,\n                  onClick: (): void => prereqControl(false, !expanded),\n                },\n                hasPrereqs ? prereqAction : infoAction,\n                {\n                  icon: faPalette,\n                  onClick: (): void => setPaletteShown(!paletteShown),\n                },\n                {\n                  icon: faTrash,\n                  onClick: (): void => handleRemoveCourse(course),\n                },\n              ]\n        }\n      >\n        <div className=\"course-row\">\n          <span className=\"course-title\">{course.title}</span>\n          <span className=\"section-crns\">\n            {pinnedSections.map((section) => section.crn).join(', ')}\n          </span>\n        </div>\n        {!isSearching && (\n          <div className=\"course-row\">\n            <span className=\"gpa\">\n              Course GPA:{' '}\n              {gpaMap === null\n                ? 'Loading...'\n                : gpaMap.averageGpa\n                ? gpaMap.averageGpa.toFixed(2)\n                : 'N/A'}\n            </span>\n            {totalCredits > 0 && (\n              <span className=\"credits\">{totalCredits} Credits</span>\n            )}\n          </div>\n        )}\n        {paletteShown && (\n          <Palette\n            className=\"palette\"\n            onSelectColor={(col): void =>\n              patchSchedule({ colorMap: { ...colorMap, [courseId]: col } })\n            }\n            color={color ?? null}\n            onMouseLeave={(): void => setPaletteShown(false)}\n          />\n        )}\n      </ActionRow>\n      {expanded && !prereqOpen && (\n        <div className={classes('hover-container', 'nested')}>\n          {includedInstructors.map((name) => {\n            let instructorGpa: number | undefined = 0;\n            if (gpaMap !== null) {\n              instructorGpa = gpaMap[name];\n            }\n            return (\n              <Instructor\n                key={name}\n                color={color}\n                name={name}\n                sections={instructorMap[name] ?? []}\n                gpa={\n                  gpaMap === null\n                    ? 'Loading...'\n                    : instructorGpa\n                    ? instructorGpa.toFixed(2)\n                    : 'N/A'\n                }\n              />\n            );\n          })}\n          {excludedInstructors.length > 0 && (\n            <div className=\"excluded-instructor-container\">\n              {excludedInstructors.map((name) => (\n                <span\n                  className=\"excluded-instructor\"\n                  key={name}\n                  onClick={(): void => {\n                    const instructorSections = instructorMap[name];\n                    if (instructorSections == null) return;\n                    handleIncludeSections(instructorSections);\n                  }}\n                >\n                  {name}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n      {expanded && prereqOpen && prereqs !== null && (\n        <Prerequisite course={course} prereqs={prereqs} />\n      )}\n    </div>\n  );\n}\n","import React, {\n  ChangeEvent,\n  KeyboardEvent,\n  useCallback,\n  useContext,\n  useMemo,\n  useRef,\n  useState,\n} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { Course, CourseFilter } from '..';\nimport { classes, getRandomColor } from '../../utils/misc';\nimport { ASYNC_DELIVERY_MODE, CAMPUSES, DELIVERY_MODES } from '../../constants';\nimport { ScheduleContext } from '../../contexts';\nimport { Course as CourseBean, Section } from '../../data/beans';\n\nimport './stylesheet.scss';\n\nexport type CourseAddProps = {\n  className?: string;\n};\n\ntype SortKey = 'deliveryMode' | 'campus';\n\ntype SortFilter = {\n  [sortKey in SortKey]: string[];\n};\n\nfunction isSortKey(sortKey: string): sortKey is SortKey {\n  switch (sortKey) {\n    case 'deliveryMode':\n    case 'campus':\n      return true;\n    default:\n      return false;\n  }\n}\n\nfunction doesFilterMatchCourse(\n  course: CourseBean,\n  filter: SortFilter\n): boolean {\n  return Object.entries(filter).every(([key, tags]) => {\n    if (!isSortKey(key)) return true;\n\n    return (\n      tags.length === 0 ||\n      course.sections.some((section) => {\n        const sortValue = section[key];\n        if (sortValue == null) return false;\n\n        return tags.includes(sortValue);\n      })\n    );\n  });\n}\n\nfunction doesFilterMatchSection(section: Section, filter: SortFilter): boolean {\n  return Object.entries(filter).every(([key, tags]) => {\n    if (tags.length === 0) return true;\n    if (!isSortKey(key)) return true;\n\n    const sortValue = section[key];\n    if (sortValue == null) return false;\n\n    return tags.includes(sortValue);\n  });\n}\n\nexport default function CourseAdd({\n  className,\n}: CourseAddProps): React.ReactElement {\n  const [{ oscar, desiredCourses, excludedCrns, colorMap }, { patchSchedule }] =\n    useContext(ScheduleContext);\n  const [keyword, setKeyword] = useState('');\n  const [filter, setFilter] = useState<SortFilter>({\n    deliveryMode: [],\n    campus: [],\n  });\n  const [activeIndex, setActiveIndex] = useState(0);\n  const inputRef = useRef<HTMLInputElement | null>(null);\n\n  const handleChangeKeyword = useCallback(\n    (e: ChangeEvent<HTMLInputElement>) => {\n      let input = e.target.value.trim();\n      const results = /^([A-Z]+)(\\d.*)$/i.exec(input);\n      if (results != null) {\n        const [, subject, number] = results as unknown as [\n          string,\n          string,\n          string\n        ];\n        input = `${subject} ${number}`;\n      }\n      setKeyword(input);\n    },\n    []\n  );\n\n  const courses = useMemo(() => {\n    const results = /^([A-Z]+) ?((\\d.*)?)$/i.exec(keyword.toUpperCase());\n    if (!results) {\n      return [];\n    }\n    const [, subject, number] = results as unknown as [string, string, string];\n\n    setActiveIndex(0);\n\n    return oscar.courses\n      .filter((course) => {\n        const keywordMatch =\n          course.subject === subject && course.number.startsWith(number);\n        const filterMatch = doesFilterMatchCourse(course, filter);\n        return keywordMatch && filterMatch;\n      })\n      .filter((course) => !desiredCourses.includes(course.id));\n  }, [oscar, keyword, filter, desiredCourses]);\n\n  const handleAddCourse = useCallback(\n    (course: CourseBean) => {\n      if (desiredCourses.includes(course.id)) return;\n      const toBeExcludedCrns = course.sections\n        .filter((section) => {\n          const timeDecided =\n            section.deliveryMode === ASYNC_DELIVERY_MODE ||\n            (section.meetings.length &&\n              section.meetings.every(\n                (meeting) => meeting.days.length && meeting.period\n              ));\n          const filterMatch = doesFilterMatchSection(section, filter);\n          return !timeDecided || !filterMatch;\n        })\n        .map((section) => section.crn);\n      patchSchedule({\n        desiredCourses: [...desiredCourses, course.id],\n        excludedCrns: [...excludedCrns, ...toBeExcludedCrns],\n        colorMap: { ...colorMap, [course.id]: getRandomColor() },\n      });\n      setKeyword('');\n      inputRef.current?.focus();\n    },\n    [filter, desiredCourses, excludedCrns, colorMap, inputRef, patchSchedule]\n  );\n\n  const handleKeyDown = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      switch (e.key) {\n        case 'Enter': {\n          const course = courses[activeIndex];\n          if (course != null) {\n            handleAddCourse(course);\n          }\n          break;\n        }\n        case 'ArrowDown':\n          setActiveIndex(Math.min(activeIndex + 1, courses.length - 1));\n          break;\n        case 'ArrowUp':\n          setActiveIndex(Math.max(activeIndex - 1, 0));\n          break;\n        default:\n          return;\n      }\n      e.preventDefault();\n    },\n    [courses, handleAddCourse, activeIndex]\n  );\n\n  const handleToggleFilter = useCallback(\n    (key: SortKey, tag: string) => {\n      const tags = filter[key];\n      setFilter({\n        ...filter,\n        [key]: tags.includes(tag)\n          ? tags.filter((v) => v !== tag)\n          : [...tags, tag],\n      });\n    },\n    [filter]\n  );\n\n  const handleResetFilter = useCallback(\n    (key) => {\n      setFilter({\n        ...filter,\n        [key]: [],\n      });\n    },\n    [filter]\n  );\n\n  const activeCourse = courses[activeIndex];\n\n  return (\n    <div className={classes('CourseAdd', className)}>\n      <div className=\"add\">\n        <div className=\"primary\">\n          <FontAwesomeIcon\n            className={classes('icon', courses.length > 0 && 'active')}\n            fixedWidth\n            icon={faPlus}\n          />\n          <div className=\"keyword-wrapper\">\n            {activeCourse && (\n              <div className={classes('keyword', 'autocomplete')}>\n                {activeCourse.id}\n              </div>\n            )}\n            <input\n              type=\"text\"\n              ref={inputRef}\n              value={keyword}\n              onChange={handleChangeKeyword}\n              className=\"keyword\"\n              placeholder=\"XX 0000\"\n              onKeyDown={handleKeyDown}\n            />\n          </div>\n        </div>\n        {[\n          ['Delivery Mode', 'deliveryMode', DELIVERY_MODES] as const,\n          ['Campus', 'campus', CAMPUSES] as const,\n        ].map(([name, property, labels]) => (\n          <CourseFilter\n            key={property}\n            name={name}\n            labels={labels}\n            selectedTags={filter[property]}\n            onReset={(): void => handleResetFilter(property)}\n            onToggle={(tag): void => handleToggleFilter(property, tag)}\n          />\n        ))}\n      </div>\n      {courses.length > 0 ? (\n        courses.map((course) => (\n          <Course\n            key={course.id}\n            className={classes(course === activeCourse && 'active')}\n            courseId={course.id}\n            onAddCourse={(): void => handleAddCourse(course)}\n          />\n        ))\n      ) : (\n        <div className=\"disclaimer\">\n          Disclaimer: GT Scheduler should be used as general reference only, and\n          users are solely responsible for ensuring any information including\n          registration restrictions.\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport ago from 's-ago';\n\nimport { Button, Course, CourseAdd } from '..';\nimport { ScheduleContext } from '../../contexts';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nexport default function CourseContainer(): React.ReactElement {\n  const [{ oscar, desiredCourses }] = useContext(ScheduleContext);\n\n  return (\n    <div className=\"CourseContainer\">\n      <div className=\"scroller\">\n        <div className=\"course-list\">\n          {desiredCourses.map((courseId) => {\n            return <Course courseId={courseId} key={courseId} />;\n          })}\n        </div>\n        <CourseAdd className=\"course-add\" />\n      </div>\n      <Button\n        className=\"updated-at\"\n        href=\"https://github.com/gt-scheduler/crawler\"\n      >\n        Course data fetched {ago(oscar.updatedAt)}\n      </Button>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes, humanizeArrayReact } from '../../utils/misc';\n\nimport './stylesheet.scss';\n\nexport type CourseFilterProps = {\n  name: string;\n  labels: Record<string, string>;\n  selectedTags: string[];\n  onReset: () => void;\n  onToggle: (tag: string) => void;\n};\n\nexport default function CourseFilter({\n  name,\n  labels,\n  selectedTags,\n  onReset,\n  onToggle,\n}: CourseFilterProps): React.ReactElement {\n  const [expanded, setExpanded] = useState(false);\n\n  return (\n    <div className=\"CourseFilter\">\n      <div\n        className={classes('header', selectedTags.length > 0 && 'active')}\n        onClick={(): void => setExpanded(!expanded)}\n      >\n        {!expanded && selectedTags.length > 0 ? (\n          <div className=\"name\">\n            {humanizeArrayReact(\n              selectedTags.flatMap<string>((tag) => {\n                const selectedTag = labels[tag];\n                return selectedTag != null ? [selectedTag] : [];\n              }),\n              <span className=\"or\">or</span>\n            )}\n          </div>\n        ) : (\n          <div className=\"name\">{name}</div>\n        )}\n        <FontAwesomeIcon fixedWidth icon={expanded ? faAngleUp : faAngleDown} />\n      </div>\n      {expanded && (\n        <div className=\"tag-container\">\n          <div\n            className={classes('tag', selectedTags.length === 0 && 'active')}\n            onClick={onReset}\n          >\n            All\n          </div>\n          {Object.keys(labels).map((tag) => (\n            <div\n              key={tag}\n              className={classes('tag', selectedTags.includes(tag) && 'active')}\n              property={tag}\n              onClick={(): void => onToggle(tag)}\n            >\n              {labels[tag]}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n","/**\n * Tries to guess whether a term string is really a term or not.\n * Terms are of the form \"202008\", where the first 4 digits are a year\n * and the last 2 are a month.\n */\nexport function isTerm(maybeTerm: string): boolean {\n  if (maybeTerm.length !== 6) return false;\n  const [year, month] = [maybeTerm.substring(0, 4), maybeTerm.substring(4, 6)];\n  const [yearAsNumber, monthAsNumber] = [Number(year), Number(month)];\n  if (Number.isNaN(yearAsNumber) || yearAsNumber < 1970 || monthAsNumber > 2100)\n    return false;\n  if (Number.isNaN(monthAsNumber) || monthAsNumber < 0 || monthAsNumber > 12)\n    return false;\n\n  return true;\n}\n\n/**\n * Gets the human-facing display name of a term/semester\n */\nexport function getSemesterName(term: string): string {\n  if (!isTerm(term)) return 'Unknown';\n\n  const year = term.substring(0, 4);\n  const semester = ((): string => {\n    switch (Number.parseInt(term.substring(4), 10)) {\n      case 1:\n        return 'Winter';\n      case 2:\n      case 3:\n        return 'Spring';\n      case 5:\n      case 6:\n        return 'Summer';\n      case 8:\n      case 9:\n        return 'Fall';\n      default:\n        return 'Unknown';\n    }\n  })();\n  return `${semester} ${year}`;\n}\n","import React, { useMemo } from 'react';\n\nimport { classes } from '../../utils/misc';\n\nimport './stylesheet.scss';\n\nexport type SpinnerProps = {\n  style?: React.CSSProperties;\n  className?: string;\n  size?: 'small' | 'normal' | number;\n};\n\n/**\n * Shows a simple circular spinner with a configurable size,\n * designed to indicate loading.\n */\nexport default function Spinner({\n  style,\n  className,\n  size = 'normal',\n}: SpinnerProps): React.ReactElement {\n  // Use approach from this article\n  // to stablize spinner position over time\n  // when it resides at the same place between renders:\n  // https://dev.to/selbekk/how-to-stop-your-spinner-from-jumping-in-react-5cmp\n  const mountTime = useMemo(() => Date.now(), []);\n  // This must be the same as animation duration:\n  const mountDelay = -(mountTime % 800);\n  const actualSize =\n    typeof size === 'number'\n      ? size\n      : {\n          small: 16,\n          normal: 40,\n        }[size];\n\n  return (\n    <svg\n      className={classes('spinner', className)}\n      style={\n        {\n          ...style,\n          '--size': `${actualSize}px`,\n          '--spinner-delay': `${mountDelay.toFixed(3)}ms`,\n        } as React.CSSProperties\n      }\n      viewBox=\"0 0 50 50\"\n    >\n      <circle cx=\"25\" cy=\"25\" r=\"20\" />\n    </svg>\n  );\n}\n","import React, { useEffect, useRef, useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faCaretDown,\n  faCheck,\n  faPlus,\n  faTimes,\n  IconDefinition,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes } from '../../utils/misc';\nimport { Button } from '..';\nimport Spinner from '../Spinner';\n\nimport './stylesheet.scss';\n\nexport type SelectProps<Id extends string | number> = {\n  className?: string;\n  style?: React.CSSProperties;\n  menuAnchor?: 'left' | 'right';\n  current: Id;\n  onChange: (newId: Id) => void;\n  options: SelectOption<Id>[];\n  desiredItemWidth?: number | string | null;\n\n  // If this is provided, then an explicit \"New\" option is added\n  // to the bottom of the <Select> box\n  // that will invoke this callback when clicked.\n  onClickNew?: () => void;\n\n  // Ignored if `onClickNew` is not provided.\n  newLabel?: string;\n};\n\nexport interface SelectOption<Id extends string | number> {\n  id: Id;\n  label: string;\n\n  // Used to specify any inline actions (buttons)\n  // These are visible when hovering the option on desktop,\n  // and are always visible on mobile.\n  actions?: SelectAction<Id>[];\n}\n\nexport type SelectAction<Id extends string | number> =\n  | EditAction<Id>\n  | ButtonAction<Id>;\n\n/**\n * Action that, when clicked on, initiates inline editing.\n * Once the user commits the edit (either by pressing 'Enter'\n * or by clicking the checkbox that this action's icon is replaced with),\n * then the `onCommit` callback is invoked,\n * which gives the action the opportunity:\n * to accept the edit (by updating the item's label and returning true)\n * or reject it (by returning false).\n * If the edit is rejected, then the <Select> box remains in edit mode.\n */\nexport interface EditAction<Id extends string | number> {\n  type: 'edit';\n  icon: IconDefinition;\n  onCommit: (newLabel: string, id: Id) => boolean;\n}\n\n/**\n * Basic action that, when clicked on, invokes the specified `onClick` callback\n */\nexport interface ButtonAction<Id extends string | number> {\n  type: 'button';\n  icon: IconDefinition;\n  onClick: (id: Id) => void;\n}\n\n/**\n * Renders a combo box-style input element that can be used\n * to select an option from a small group of options,\n * where only a single selected item can be active.\n * Supports per-option actions, inline label editing,\n * and a \"New\" option that appears at the bottom of the drop-down list.\n */\nexport default function Select<Id extends string | number>({\n  className,\n  style,\n  menuAnchor = 'left',\n  current,\n  onChange,\n  options,\n  desiredItemWidth = null,\n  onClickNew,\n  newLabel = 'New',\n}: SelectProps<Id>): React.ReactElement {\n  const [opened, setOpened] = useState(false);\n\n  const selectedOption = options.find((option) => option.id === current);\n  const label = selectedOption ? selectedOption.label : '-';\n\n  // Control inline editing state\n  const [inputId, setInputId] = useState<Id | null>(null);\n  const [inputValue, setInputValue] = useState<string>('');\n  const [inputEditAction, setInputEditAction] = useState<EditAction<Id> | null>(\n    null\n  );\n\n  // Try to commit the edit, sending the changes to the provided callback.\n  // If the callback returns `true`, then the edit is ended.\n  // If the callback returns `false`, then the edit is not committed\n  //    and will remain active (for the user to fix the issue).\n  // Does not close the selection box.\n  // Returns whether the commit was successful.\n  const tryCommit = (): boolean => {\n    if (inputEditAction === null) return false;\n    if (inputId === null) return false;\n    const committedValue = inputValue.trim();\n\n    if (inputEditAction.onCommit(committedValue, inputId)) {\n      setInputId(null);\n      setInputValue('');\n      setInputEditAction(null);\n      return true;\n    }\n\n    return false;\n  };\n\n  // Abandon the edit, discarding the changes.\n  // Does not close the selection box.\n  const abandonEdit = (): void => {\n    setInputId(null);\n    setInputValue('');\n    setInputEditAction(null);\n  };\n\n  // Handle when the user presses 'Enter' or 'Escape'\n  // to commit or abandon an in-progress edit, respectively.\n  // If either key is pressed and the operation was successful,\n  // then we also close the Select box.\n  const handleKeyDown = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n    if (inputEditAction === null) return;\n    if (inputId === null) return;\n\n    if (e.key === 'Enter') {\n      if (tryCommit()) {\n        setOpened(false);\n      }\n    }\n    if (e.key === 'Escape') {\n      abandonEdit();\n      setOpened(false);\n    }\n  };\n\n  // Pass calls to `setOpened` through this,\n  // to block closing the selection box when there is an active edit.\n  const trySetOpened = (newOpened: boolean): void => {\n    // If there is an active edit and the caller is trying\n    // to close the Select box, prevent this\n    if (inputId !== null && !newOpened) return;\n\n    setOpened(newOpened);\n  };\n\n  return (\n    <div\n      className={classes('Button', 'Select', className, `anchor-${menuAnchor}`)}\n      onClick={(): void => trySetOpened(!opened)}\n      style={style}\n    >\n      <div className=\"text\">{label}</div>\n      <FontAwesomeIcon fixedWidth icon={faCaretDown} />\n      {opened && (\n        <div className=\"intercept\" onClick={(): void => trySetOpened(false)} />\n      )}\n      {opened && (\n        <div\n          className=\"option-container\"\n          style={desiredItemWidth != null ? { width: desiredItemWidth } : {}}\n        >\n          {options.map(({ id: optionId, label: optionLabel, actions = [] }) => (\n            <div\n              key={String(optionId)}\n              className={classes(\n                'option',\n                optionId === inputId && 'option--inputting'\n              )}\n            >\n              {inputId === optionId ? (\n                <AutoFocusInput\n                  className=\"option__input\"\n                  value={inputValue}\n                  onChange={(e): void => setInputValue(e.target.value)}\n                  placeholder={optionLabel}\n                  onKeyDown={handleKeyDown}\n                />\n              ) : (\n                <Button\n                  className=\"option__button\"\n                  key={optionId}\n                  onClick={(): void => onChange(optionId)}\n                >\n                  {optionLabel}\n                </Button>\n              )}\n              {actions.map((action, i) => (\n                <React.Fragment key={i}>\n                  {action.type === 'button' ? (\n                    <Button\n                      className=\"option__action-button\"\n                      onClick={(e): void => {\n                        e.stopPropagation();\n\n                        // Abandon any in-progress edit\n                        if (inputId !== null) abandonEdit();\n\n                        action.onClick(optionId);\n                      }}\n                    >\n                      <FontAwesomeIcon fixedWidth icon={action.icon} />\n                    </Button>\n                  ) : (\n                    <>\n                      {optionId === inputId ? (\n                        <>\n                          <Button\n                            className=\"option__action-button\"\n                            onClick={(e): void => {\n                              e.stopPropagation();\n                              tryCommit();\n                            }}\n                          >\n                            <FontAwesomeIcon fixedWidth icon={faCheck} />\n                          </Button>\n                          <Button\n                            className=\"option__action-button\"\n                            onClick={(e): void => {\n                              e.stopPropagation();\n                              abandonEdit();\n                            }}\n                          >\n                            <FontAwesomeIcon fixedWidth icon={faTimes} />\n                          </Button>\n                        </>\n                      ) : (\n                        <Button\n                          className=\"option__action-button\"\n                          onClick={(e): void => {\n                            e.stopPropagation();\n                            // Start a new edit (ignore any in-progress edits)\n                            setInputId(optionId);\n                            setInputValue(optionLabel);\n                            setInputEditAction(action);\n                          }}\n                        >\n                          <FontAwesomeIcon fixedWidth icon={action.icon} />\n                        </Button>\n                      )}\n                    </>\n                  )}\n                </React.Fragment>\n              ))}\n            </div>\n          ))}\n          {onClickNew !== undefined && (\n            <div className=\"option\">\n              <Button className=\"option__button\" onClick={onClickNew}>\n                <FontAwesomeIcon\n                  fixedWidth\n                  icon={faPlus}\n                  style={{ marginRight: 8 }}\n                />\n                {newLabel}\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport type LoadingSelectProps = {\n  className?: string;\n  label?: string;\n};\n\n/**\n * Visually similar to a `<Select>` component,\n * except it cannot be interacted with and displays the given label text\n * (default: \"Loading\") next to a small spinner\n */\nexport function LoadingSelect({\n  className,\n  label = 'Loading',\n}: LoadingSelectProps): React.ReactElement {\n  return (\n    <div className={classes('Button', 'Select', className, 'disabled')}>\n      <Spinner size=\"small\" style={{ marginRight: 12 }} />\n      <div className=\"text\">{label}</div>\n      <FontAwesomeIcon fixedWidth icon={faCaretDown} />\n    </div>\n  );\n}\n\nexport type DropdownMenuProps = {\n  className?: string;\n  style?: React.CSSProperties;\n  menuAnchor?: 'left' | 'right';\n  children: React.ReactNode;\n  items: DropdownMenuAction[];\n  disabled?: boolean;\n};\n\nexport interface DropdownMenuAction {\n  label: React.ReactNode;\n  icon?: IconDefinition;\n  onClick?: () => void;\n}\n\n/**\n * A `<DropdownMenu>` is similar to a `<Select>` except\n * it can be used in scenarios where there is no item to select,\n * but you still want to display a dropdown with buttons.\n */\nexport function DropdownMenu({\n  className,\n  style,\n  menuAnchor = 'left',\n  children,\n  items,\n  disabled = false,\n}: DropdownMenuProps): React.ReactElement {\n  const [opened, setOpened] = useState(false);\n  return (\n    <div\n      className={classes(\n        'Button',\n        'Select',\n        disabled && 'disabled',\n        className,\n        `anchor-${menuAnchor}`\n      )}\n      onClick={(): void => {\n        if (!disabled) setOpened(!opened);\n      }}\n      style={style}\n    >\n      {children}\n      {opened && (\n        <div className=\"intercept\" onClick={(): void => setOpened(false)} />\n      )}\n      {opened && (\n        <div className=\"option-container\">\n          {items.map(({ label, icon, onClick }, i) => (\n            <div\n              className={classes('option', onClick == null && 'option--text')}\n              key={i}\n            >\n              {onClick != null ? (\n                <Button className=\"option__button\" onClick={onClick}>\n                  {icon != null && (\n                    <FontAwesomeIcon\n                      fixedWidth\n                      icon={icon}\n                      style={{ marginRight: 8 }}\n                    />\n                  )}\n                  {label}\n                </Button>\n              ) : (\n                <div\n                  className=\"option__text\"\n                  // Prevent clicking on the text from closing the dropdown\n                  onClick={(e): void => {\n                    e.preventDefault();\n                    e.stopPropagation();\n                  }}\n                >\n                  {icon != null && (\n                    <FontAwesomeIcon\n                      fixedWidth\n                      icon={icon}\n                      style={{ marginRight: 8 }}\n                    />\n                  )}\n                  {label}\n                </div>\n              )}\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Private sub-components\n\ntype AutoFocusInputProps = {\n  className?: string;\n  style?: React.CSSProperties;\n  value: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  onKeyDown?: (e: React.KeyboardEvent<HTMLInputElement>) => void;\n};\n\n/**\n * Simple wrapper around `<input>`\n * that automatically focuses its contents when it is first mounted\n */\nfunction AutoFocusInput({\n  className,\n  style,\n  value,\n  onChange,\n  placeholder,\n  onKeyDown,\n}: AutoFocusInputProps): React.ReactElement {\n  const inputRef = useRef<HTMLInputElement | null>(null);\n  useEffect(() => {\n    if (inputRef.current === null) return;\n    inputRef.current.focus();\n    inputRef.current.select();\n  }, []);\n\n  return (\n    <input\n      className={className}\n      style={style}\n      value={value}\n      onChange={onChange}\n      placeholder={placeholder}\n      onKeyDown={onKeyDown}\n      ref={inputRef}\n      type=\"text\"\n    />\n  );\n}\n","import { useLayoutEffect, useState } from 'react';\n\nimport { ErrorWithFields, softError } from '../log';\n\n/**\n * Gets whether the given CSS media query is matched or not.\n * Runs a layout effect to synchronously update the media match state\n *\n * Adapted from https://www.netlify.com/blog/2020/12/05/building-a-custom-react-media-query-hook-for-more-responsive-apps/\n * @param query A CSS media query\n * @returns Whether the CSS media query is matched\n */\nexport default function useMedia(query: string): boolean {\n  const [matches, setMatches] = useState(false);\n\n  useLayoutEffect(() => {\n    try {\n      const media = window.matchMedia(query);\n      if (media.matches !== matches) {\n        setMatches(media.matches);\n      }\n\n      const listener = (): void => setMatches(media.matches);\n      let apiUsed: 'addEventListener' | 'addListener' | null = null;\n      if (media.addEventListener != null) {\n        media.addEventListener('change', listener);\n        apiUsed = 'addEventListener';\n      } else if (media.addListener != null) {\n        // In Safari <14, we have to use `addListener`:\n        // https://caniuse.com/mdn-api_mediaquerylist_addlistener\n        media.addListener(listener);\n        apiUsed = 'addListener';\n      } else {\n        apiUsed = null;\n      }\n\n      return (): void => {\n        try {\n          // Use the corresponding cleanup API\n          // based on the API used to attach the listener\n          switch (apiUsed) {\n            case 'addEventListener':\n              media.removeEventListener('change', listener);\n              break;\n            case 'addListener':\n              media.removeListener(listener);\n              break;\n            default:\n              break;\n          }\n        } catch (err) {\n          softError(\n            new ErrorWithFields({\n              message:\n                'could not run useMedia query cleanup in layout effect cleanup',\n              source: err,\n              fields: {\n                previousQuery: query,\n                previousMatches: matches,\n              },\n            })\n          );\n        }\n      };\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'could not run useMedia query in layout effect',\n          source: err,\n          fields: {\n            query,\n            matches,\n          },\n        })\n      );\n      return (): void => undefined;\n    }\n  }, [matches, query]);\n\n  return matches;\n}\n","import useMedia from './useMedia';\n\n/**\n * Gets whether the screen is currently larger than the specified width.\n * Runs internally as a layout effect.\n * @param width The target screen width, as a number (pixels)\n * or as a CSS unit expression.\n * @returns Whether the screen is larger than the width\n */\nexport default function useScreenWidth(width: number | string): boolean {\n  const widthWithUnits = typeof width === 'number' ? `${width}px` : width;\n  return useMedia(`(min-width: ${widthWithUnits})`);\n}\n","import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport { ErrorWithFields, softError } from '../log';\nimport { AnyScheduleData } from './types';\n\n// This data is not secret; it is included in the application bundle.\n// Supply these environment variables when developing locally.\nconst firebaseConfig = {\n  apiKey: process.env['REACT_APP_FIREBASE_API_KEY'],\n  authDomain: process.env['REACT_APP_FIREBASE_AUTH_DOMAIN'],\n  projectId: process.env['REACT_APP_FIREBASE_PROJECT_ID'],\n  storageBucket: process.env['REACT_APP_FIREBASE_STORAGE_BUCKET'],\n  messagingSenderId: process.env['REACT_APP_FIREBASE_MESSAGING_SENDER_ID'],\n  appId: process.env['REACT_APP_FIREBASE_APP_ID'],\n  measurementId: process.env['REACT_APP_FIREBASE_MEASUREMENT_ID'],\n};\n\n/**\n * Whether Firebase authentication is enabled in this environment.\n * To enable, supply the 5 Firebase config environment variables.\n */\nexport const isAuthEnabled =\n  firebaseConfig.apiKey != null && firebaseConfig.apiKey !== '';\n\n/* eslint-disable import/no-mutable-exports */\nlet auth: firebase.auth.Auth = null as unknown as firebase.auth.Auth;\nlet db: firebase.firestore.Firestore =\n  null as unknown as firebase.firestore.Firestore;\ntype SchedulesCollection =\n  firebase.firestore.CollectionReference<AnyScheduleData>;\nlet schedulesCollection: SchedulesCollection =\n  null as unknown as SchedulesCollection;\n/* eslint-enable import/no-mutable-exports */\nif (isAuthEnabled) {\n  const app = firebase.initializeApp(firebaseConfig);\n\n  auth = app.auth();\n  db = app.firestore();\n  schedulesCollection = db.collection('schedules') as SchedulesCollection;\n\n  auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL).catch((err) => {\n    softError(\n      new ErrorWithFields({\n        message: 'error when configuring firebase auth persistence',\n        source: err,\n      })\n    );\n  });\n}\n\nexport { auth, db, schedulesCollection };\nexport { firebase };\n\n// Configure the enabled auth providers that firebase UI displays as options\nexport const authProviders = [\n  firebase.auth.EmailAuthProvider.PROVIDER_ID,\n  firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  firebase.auth.GithubAuthProvider.PROVIDER_ID,\n];\n","import React, { useEffect } from 'react';\nimport firebaseui from 'firebaseui';\nimport FirebaseAuth from 'react-firebaseui/FirebaseAuth';\n\nimport Modal from '../Modal';\nimport { firebase, authProviders } from '../../data/firebase';\n\nimport './stylesheet.scss';\n\nconst uiConfig: firebaseui.auth.Config = {\n  // Popup sign-in flow rather than redirect flow.\n  signInFlow: 'popup',\n  signInOptions: authProviders,\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  },\n};\n\n/**\n * Inner content of the login modal.\n * This utilizes Firebase UI to handle the authentication UI components.\n */\nexport function LoginModalContent(): React.ReactElement {\n  // Calculate the min height of the FirebaseUI element\n  // so that it does not cause a large layout shift when initially loading.\n  // The height is determined based on the number of auth providers,\n  // which directly determines the number of stacked vertical buttons.\n  // Each button is 40px wide with a 15px gap.\n  let minHeight = authProviders.length * 40;\n  if (authProviders.length >= 2) {\n    minHeight += (authProviders.length - 1) * 15;\n  }\n\n  return (\n    <div className=\"login-modal-content\">\n      <h1>Sign in</h1>\n      <p className=\"login-modal-content__body\">\n        Sign in using one of the below identity providers to start syncing your\n        schedules across devices.\n      </p>\n      <div style={{ minHeight }}>\n        <FirebaseAuth\n          className=\"login-modal-content__firebase-ui\"\n          uiConfig={uiConfig}\n          firebaseAuth={firebase.auth()}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport type LoginModalProps = {\n  show: boolean;\n  onHide: () => void;\n};\n\n/**\n * Component that can be used to show the login modal.\n * This utilizes Firebase UI to handle the authentication UI components.\n */\nexport default function LoginModal({\n  show,\n  onHide,\n}: LoginModalProps): React.ReactElement {\n  // If the modal is open,\n  // attach a listener for the authentication state\n  // to close it once the user logs in.\n  useEffect(() => {\n    if (show) {\n      const removeListener = firebase.auth().onAuthStateChanged((user) => {\n        if (user !== null) {\n          onHide();\n        }\n      });\n      return removeListener;\n    }\n\n    return undefined;\n  }, [show, onHide]);\n\n  return (\n    <Modal\n      show={show}\n      onHide={onHide}\n      buttons={[\n        { label: 'Cancel', onClick: (): void => onHide(), cancel: true },\n      ]}\n    >\n      <LoginModalContent />\n    </Modal>\n  );\n}\n","import React, { useState, useCallback } from 'react';\nimport {\n  faCaretDown,\n  faSignOutAlt,\n  faSignInAlt,\n  faUserCircle,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { AccountContextValue, SignedIn } from '../../contexts/account';\nimport LoginModal from '../LoginModal';\nimport { DropdownMenu, DropdownMenuAction } from '../Select';\nimport Spinner from '../Spinner';\nimport { classes } from '../../utils/misc';\nimport { isAuthEnabled } from '../../data/firebase';\n\nimport './stylesheet.scss';\n\nexport type AccountDropdownProps = {\n  state: AccountContextValue | { type: 'loading' };\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders the dropdown menu in the app header\n * that lets the user either:\n * - sign in if they aren't logged in,\n *   by displaying the login modal, or\n * - view who they are logged in as, and sign out if desired.\n * Additionally, it shows the initials of the user\n * in a circle when they are logged in\n * (similar to Google account \"icons\").\n */\nexport default function AccountDropdown({\n  state,\n  className,\n  style,\n}: AccountDropdownProps): React.ReactElement | null {\n  const [loginOpen, setLoginOpen] = useState(false);\n  const hideLogin = useCallback(() => setLoginOpen(false), []);\n\n  if (!isAuthEnabled) return null;\n\n  let items: DropdownMenuAction[];\n  let circleContent: React.ReactNode;\n  let disabled: boolean;\n  switch (state.type) {\n    case 'loading':\n      items = [];\n      circleContent = <Spinner size={24} />;\n      disabled = true;\n      break;\n    case 'signedIn':\n      items = [\n        {\n          label: <SignedInLabel state={state} />,\n        },\n        {\n          label: 'Sign out',\n          icon: faSignOutAlt,\n          onClick: (): void => state.signOut(),\n        },\n      ];\n      circleContent = <UserInitials state={state} />;\n      disabled = false;\n      break;\n    case 'signedOut':\n      items = [\n        {\n          label: 'Sign in',\n          icon: faSignInAlt,\n          onClick: (): void => {\n            setLoginOpen(true);\n          },\n        },\n      ];\n      circleContent = (\n        <FontAwesomeIcon\n          fixedWidth\n          icon={faUserCircle}\n          className=\"account-dropdown__signed-out-icon\"\n        />\n      );\n      disabled = false;\n      break;\n    default:\n      // unreachable\n      return null;\n  }\n\n  return (\n    <>\n      <DropdownMenu\n        disabled={disabled}\n        menuAnchor=\"right\"\n        items={items}\n        className={classes('account-dropdown', className)}\n        style={style}\n      >\n        <div className=\"account-dropdown__content\">\n          <div className=\"account-dropdown__circle\">{circleContent}</div>\n          <FontAwesomeIcon fixedWidth icon={faCaretDown} />\n        </div>\n      </DropdownMenu>\n      <LoginModal show={loginOpen} onHide={hideLogin} />\n    </>\n  );\n}\n\n// Private sub-components\n\ntype UserInitialsProps = {\n  state: SignedIn;\n};\n\n/**\n * Shows the initials of the user's name, email, or id where available,\n * changing the size of each letter depending on the number of initials.\n * Supports up to 3 initials.\n */\nfunction UserInitials({ state }: UserInitialsProps): React.ReactElement {\n  const initials = getInitials(state.name ?? state.email ?? state.id);\n  return (\n    <span\n      className=\"account-dropdown__user-initials\"\n      style={{\n        fontSize: initials.length <= 1 ? 22 : initials.length === 2 ? 19 : 15,\n      }}\n    >\n      {initials.slice(0, 3)}\n    </span>\n  );\n}\n\n/**\n * Extracts the initials from the given name\n */\nfunction getInitials(displayName: string): string {\n  // Decode the escaped HTML in the name here so we can extract its initials.\n  // Use the DOMParser API to avoid XSS while un-escaping:\n  // https://stackoverflow.com/a/34064434\n  // (the dangerousDisplayName variable can contain XSS; be careful)\n  const doc = new DOMParser().parseFromString(displayName, 'text/html');\n  const dangerousDisplayName = doc.documentElement.textContent ?? '';\n\n  const regex = /\\b\\w/g;\n  const matches = dangerousDisplayName.match(regex);\n  if (matches === null) return '';\n  return matches.join('');\n}\n\ntype SignedInLabelProps = {\n  state: SignedIn;\n};\n\n/**\n * Formats the text shown in the account dropdown when the user is signed in,\n * telling them their name, email, and provider when available.\n */\nfunction SignedInLabel({ state }: SignedInLabelProps): React.ReactElement {\n  let signedInAs: React.ReactNode;\n  if (state.name !== null) {\n    // Un-escape HTML entities and then pass them\n    // to React's default child sanitizer so that they are not escaped twice.\n    // Use the DOMParser API to avoid XSS while un-escaping:\n    // https://stackoverflow.com/a/34064434\n    // (the dangerousName variable can contain XSS; be careful)\n    const doc = new DOMParser().parseFromString(state.name, 'text/html');\n    const dangerousName = doc.documentElement.textContent ?? '';\n    const nameElement = <strong>{dangerousName}</strong>;\n\n    if (state.email !== null) {\n      signedInAs = (\n        <>\n          {nameElement} ({state.email})\n        </>\n      );\n    } else {\n      signedInAs = nameElement;\n    }\n  } else if (state.email !== null) {\n    signedInAs = state.email;\n  } else {\n    signedInAs = state.id;\n  }\n\n  let providerText = '';\n  if (state.provider !== null) {\n    providerText = ` via ${state.provider}`;\n  }\n\n  return (\n    <div>\n      <span className=\"account-dropdown__signed-in-label-faded\">\n        Signed in as:\n      </span>\n      <br />\n      {signedInAs}\n      <br />\n      <span className=\"account-dropdown__signed-in-label-faded\">\n        {providerText}\n      </span>\n    </div>\n  );\n}\n","import { faGithub } from '@fortawesome/free-brands-svg-icons';\nimport {\n  faDownload,\n  faCalendarAlt,\n  faPaste,\n  faAdjust,\n  faCaretDown,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React, { useCallback, useContext } from 'react';\n\nimport { Button } from '..';\nimport {\n  LARGE_MOBILE_BREAKPOINT,\n  LARGE_DESKTOP_BREAKPOINT,\n} from '../../constants';\nimport { ThemeContext } from '../../contexts';\nimport useMedia from '../../hooks/useMedia';\nimport { AccountContextValue } from '../../contexts/account';\nimport { classes } from '../../utils/misc';\nimport { DropdownMenu, DropdownMenuAction } from '../Select';\nimport AccountDropdown from '../AccountDropdown';\n\nimport './stylesheet.scss';\n\nexport type HeaderActionBarProps = {\n  className?: string;\n  style?: React.CSSProperties;\n  accountState: AccountContextValue | { type: 'loading' };\n  onCopyCrns?: () => void;\n  enableCopyCrns?: boolean;\n  onExportCalendar?: () => void;\n  enableExportCalendar?: boolean;\n  onDownloadCalendar?: () => void;\n  enableDownloadCalendar?: boolean;\n  handleThemeChange?: () => void;\n};\n\n/**\n * Displays the icon buttons (with optional text)\n * that appear at the top of the app in the header,\n * or if on a small mobile device, at the top of the app nav drawer,\n * This component is a simple display component,\n * letting any substantive state be passed in as props.\n */\nexport default function HeaderActionBar({\n  className,\n  style,\n  accountState,\n  onCopyCrns = (): void => undefined,\n  enableCopyCrns = false,\n  onExportCalendar = (): void => undefined,\n  enableExportCalendar = false,\n  onDownloadCalendar = (): void => undefined,\n  enableDownloadCalendar = false,\n}: HeaderActionBarProps): React.ReactElement {\n  const [theme, setTheme] = useContext(ThemeContext);\n  const handleThemeChange = useCallback(() => {\n    const newTheme = theme === 'light' ? 'dark' : 'light';\n    setTheme(newTheme);\n  }, [theme, setTheme]);\n\n  // Coalesce the export options into the props for a single <DropdownMenu>\n  const enableExport =\n    enableCopyCrns || enableDownloadCalendar || enableExportCalendar;\n  const exportActions: DropdownMenuAction[] = [];\n  if (enableDownloadCalendar) {\n    exportActions.push({\n      label: 'Download image',\n      icon: faDownload,\n      onClick: onDownloadCalendar,\n    });\n  }\n  if (enableExportCalendar) {\n    exportActions.push({\n      label: 'ICS (Calendar) file',\n      icon: faCalendarAlt,\n      onClick: onExportCalendar,\n    });\n  }\n  if (enableCopyCrns) {\n    exportActions.push({\n      label: 'Copy CRNs to clipboard',\n      icon: faPaste,\n      onClick: onCopyCrns,\n    });\n  }\n\n  // On small mobile screens and on large desktop,\n  // left-anchor the \"Export\" dropdown.\n  // Otherwise, anchor it to the right.\n  const lowerBound = LARGE_MOBILE_BREAKPOINT;\n  const upperBound = LARGE_DESKTOP_BREAKPOINT;\n  const shouldRightAnchorExportDropdown = useMedia(\n    `(min-width: ${lowerBound}px) and (max-width: ${upperBound}px)`\n  );\n\n  return (\n    <div className={classes('header-action-bar', className)} style={style}>\n      <DropdownMenu\n        disabled={!enableExport}\n        items={exportActions}\n        menuAnchor={shouldRightAnchorExportDropdown ? 'right' : 'left'}\n        className=\"header-action-bar__button\"\n      >\n        <div className=\"header-action-bar__export-dropdown-content\">\n          <FontAwesomeIcon\n            className=\"header-action-bar__button-icon\"\n            fixedWidth\n            icon={faDownload}\n          />\n          <div className=\"header-action-bar__button-text\">Export</div>\n          <FontAwesomeIcon fixedWidth icon={faCaretDown} />\n        </div>\n      </DropdownMenu>\n\n      <Button onClick={handleThemeChange} className=\"header-action-bar__button\">\n        <FontAwesomeIcon\n          className=\"header-action-bar__button-icon\"\n          fixedWidth\n          icon={faAdjust}\n        />\n        <div className=\"header-action-bar__button-text\">Theme</div>\n      </Button>\n      <Button\n        href=\"https://github.com/gt-scheduler/website\"\n        className=\"header-action-bar__button\"\n      >\n        <FontAwesomeIcon\n          className=\"header-action-bar__button-icon\"\n          fixedWidth\n          icon={faGithub}\n        />\n        <div className=\"header-action-bar__button-text\">GitHub</div>\n      </Button>\n\n      <AccountDropdown state={accountState} />\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {\n  faBars,\n  faPencilAlt,\n  faTrashAlt,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { getSemesterName } from '../../utils/semesters';\nimport { Button, Select, Tab } from '..';\nimport { LoadingSelect, SelectAction } from '../Select';\nimport Spinner from '../Spinner';\nimport { getNextVersionName } from '../../utils/misc';\nimport { DESKTOP_BREAKPOINT, LARGE_MOBILE_BREAKPOINT } from '../../constants';\nimport useScreenWidth from '../../hooks/useScreenWidth';\nimport HeaderActionBar from '../HeaderActionBar';\nimport Modal from '../Modal';\nimport { AccountContextValue } from '../../contexts/account';\n\nimport './stylesheet.scss';\n\ntype VersionState =\n  | { type: 'loading' }\n  | {\n      type: 'loaded';\n      currentVersion: string;\n      allVersionNames: readonly { id: string; name: string }[];\n      setCurrentVersion: (next: string) => void;\n      addNewVersion: (name: string, select?: boolean) => void;\n      deleteVersion: (id: string) => void;\n      renameVersion: (id: string, newName: string) => void;\n    };\n\nexport type HeaderDisplayProps = {\n  totalCredits?: number | null;\n  currentTab: number;\n  onChangeTab: (newTab: number) => void;\n  onToggleMenu: () => void;\n  tabs: string[];\n  onCopyCrns?: () => void;\n  enableCopyCrns?: boolean;\n  onExportCalendar?: () => void;\n  enableExportCalendar?: boolean;\n  onDownloadCalendar?: () => void;\n  enableDownloadCalendar?: boolean;\n  termsState:\n    | { type: 'loading' }\n    | {\n        type: 'loaded';\n        terms: readonly string[];\n        currentTerm: string;\n        onChangeTerm: (next: string) => void;\n      };\n  versionsState: VersionState;\n  accountState: AccountContextValue | { type: 'loading' };\n};\n\n/**\n * Renders the top header component as a simple display component,\n * letting any substantive state be passed in as props.\n * See `<Header>` for the full implementation that owns the header state.\n * This is safe to render without `ScheduleContext` or `TermsContext`\n * being present.\n */\nexport default function HeaderDisplay({\n  totalCredits = null,\n  currentTab,\n  onChangeTab,\n  onToggleMenu,\n  tabs,\n  onCopyCrns = (): void => undefined,\n  enableCopyCrns = false,\n  onExportCalendar = (): void => undefined,\n  enableExportCalendar = false,\n  onDownloadCalendar = (): void => undefined,\n  enableDownloadCalendar = false,\n  termsState,\n  versionsState,\n  accountState,\n}: HeaderDisplayProps): React.ReactElement {\n  // Re-render when the page is re-sized to become mobile/desktop\n  // (desktop is >= 1024 px wide)\n  const mobile = !useScreenWidth(DESKTOP_BREAKPOINT);\n\n  // Re-render when the page is re-sized to be small mobile vs. greater\n  // (small mobile is < 600 px wide)\n  const largeMobile = useScreenWidth(LARGE_MOBILE_BREAKPOINT);\n  return (\n    <div className=\"Header\">\n      {/* Menu button, only displayed on mobile */}\n      {mobile && (\n        <Button className=\"nav-menu-button\" onClick={onToggleMenu}>\n          <FontAwesomeIcon className=\"icon\" fixedWidth icon={faBars} />\n        </Button>\n      )}\n\n      {/* Left-aligned logo */}\n      <Button className=\"logo\">\n        <span className=\"gt\">GT </span>\n        <span className=\"scheduler\">Scheduler</span>\n      </Button>\n\n      {/* Term selector */}\n      {termsState.type === 'loaded' ? (\n        <Select\n          onChange={termsState.onChangeTerm}\n          current={termsState.currentTerm}\n          options={termsState.terms.map((currentTerm) => ({\n            id: currentTerm,\n            label: getSemesterName(currentTerm),\n          }))}\n          className=\"semester\"\n        />\n      ) : (\n        <LoadingSelect />\n      )}\n\n      {/* Version selector */}\n      <VersionSelector state={versionsState} />\n\n      <span className=\"credits\">\n        {totalCredits === null ? (\n          <Spinner size=\"small\" style={{ marginRight: 8 }} />\n        ) : (\n          totalCredits\n        )}{' '}\n        Credits\n      </span>\n\n      {/* Include middle-aligned tabs on desktop */}\n      {!mobile && (\n        <div className=\"tabs\">\n          {tabs.map((tabLabel, tabIdx) => (\n            <Tab\n              key={tabIdx}\n              active={tabIdx === currentTab}\n              onClick={(): void => onChangeTab(tabIdx)}\n              label={tabLabel}\n            />\n          ))}\n        </div>\n      )}\n\n      {/* Include action bar on large mobile and higher */}\n      {largeMobile && (\n        <HeaderActionBar\n          accountState={accountState}\n          onCopyCrns={onCopyCrns}\n          enableCopyCrns={enableCopyCrns}\n          onExportCalendar={onExportCalendar}\n          enableExportCalendar={enableExportCalendar}\n          onDownloadCalendar={onDownloadCalendar}\n          enableDownloadCalendar={enableDownloadCalendar}\n        />\n      )}\n    </div>\n  );\n}\n\n// Private sub-components\n\ntype VersionSelectorProps = {\n  state: VersionState;\n};\n\n/**\n * Allows users to:\n * - switch between existing schedule versions\n * - add new blank versions with default (Primary, Secondary, etc.) names\n * - delete and rename existing versions.\n */\nfunction VersionSelector({ state }: VersionSelectorProps): React.ReactElement {\n  // Manage the delete confirmation state,\n  // used to show a modal when it is non-null.\n  const [deleteConfirm, setDeleteConfirm] = useState<{\n    id: string;\n    name: string;\n  } | null>(null);\n\n  if (state.type === 'loading') {\n    return <LoadingSelect />;\n  }\n\n  return (\n    <>\n      <Select\n        className=\"version-switch\"\n        desiredItemWidth={260}\n        newLabel=\"New Schedule\"\n        onChange={state.setCurrentVersion}\n        current={state.currentVersion}\n        options={state.allVersionNames.map((version) => {\n          const actions: SelectAction<string>[] = [];\n\n          // Add the edit (rename) action\n          actions.push({\n            type: 'edit',\n            icon: faPencilAlt,\n            onCommit: (newName: string) => {\n              state.renameVersion(version.id, newName);\n              return true;\n            },\n          });\n\n          // Add the delete action\n          if (state.allVersionNames.length >= 2) {\n            actions.push({\n              type: 'button',\n              icon: faTrashAlt,\n              onClick: () => {\n                // Display a confirmation dialog before deleting the version\n                setDeleteConfirm(version);\n              },\n            });\n          }\n\n          return {\n            id: version.id,\n            label: version.name,\n            actions,\n          };\n        })}\n        onClickNew={(): void => {\n          // Handle creating a new version with the auto-generated name\n          // (like 'Primary' or 'Secondary')\n          state.addNewVersion(\n            getNextVersionName(state.allVersionNames.map(({ name }) => name)),\n            true\n          );\n        }}\n      />\n\n      <Modal\n        show={deleteConfirm != null}\n        onHide={(): void => setDeleteConfirm(null)}\n        buttons={[\n          {\n            label: 'Cancel',\n            cancel: true,\n            onClick: (): void => setDeleteConfirm(null),\n          },\n          {\n            label: 'Delete',\n            onClick: (): void => {\n              if (deleteConfirm != null) {\n                state.deleteVersion(deleteConfirm.id);\n              }\n              setDeleteConfirm(null);\n            },\n          },\n        ]}\n        // Use this because we use the same state as the show prop\n        // to determine the contents of the children.\n        // This prevents the children from flashing\n        // a different value when the modal is disappearing.\n        preserveChildrenWhileHiding\n      >\n        <div style={{ textAlign: 'center' }}>\n          <h2>Delete confirmation</h2>\n          <p>\n            Are you sure you want to delete schedule &ldquo;\n            {deleteConfirm?.name ?? '<unknown>'}&rdquo;?\n          </p>\n        </div>\n      </Modal>\n    </>\n  );\n}\n","import React from 'react';\n\nexport type SignedOut = {\n  type: 'signedOut';\n};\n\nexport type SignedIn = {\n  type: 'signedIn';\n  signOut: () => void;\n  name: string | null;\n  provider: string | null;\n  email: string | null;\n  id: string;\n};\n\nexport type AccountContextValue = SignedOut | SignedIn;\nexport const AccountContext = React.createContext<AccountContextValue>({\n  type: 'signedOut',\n});\n","import copy from 'copy-to-clipboard';\nimport React, { useContext, useCallback } from 'react';\n\nimport { HeaderActionBarProps } from '../components/HeaderActionBar';\nimport { ScheduleContext, ThemeContext } from '../contexts';\nimport { AccountContext } from '../contexts/account';\nimport { softError, ErrorWithFields } from '../log';\nimport { exportCoursesToCalendar, downloadShadowCalendar } from '../utils/misc';\n\nexport type HookResult = Pick<\n  HeaderActionBarProps,\n  | 'onCopyCrns'\n  | 'enableCopyCrns'\n  | 'onExportCalendar'\n  | 'enableExportCalendar'\n  | 'onDownloadCalendar'\n  | 'enableDownloadCalendar'\n  | 'accountState'\n>;\n\n/**\n * Custom hook to prepare a majority of the `<HeaderActionBar>` props.\n * Requires a valid value for `ScheduleContext`, `ThemeContext`,\n * and `AccountContext`.\n */\nexport default function useHeaderActionBarProps(\n  captureRef: React.RefObject<HTMLDivElement>\n): HookResult {\n  const [{ oscar, pinnedCrns }] = useContext(ScheduleContext);\n  const [theme] = useContext(ThemeContext);\n  const accountState = useContext(AccountContext);\n\n  const handleExport = useCallback(() => {\n    try {\n      exportCoursesToCalendar(oscar, pinnedCrns);\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'exporting courses to calendar failed',\n          fields: {\n            pinnedCrns,\n            term: oscar.term,\n          },\n        })\n      );\n    }\n  }, [oscar, pinnedCrns]);\n\n  const handleDownload = useCallback(() => {\n    const captureElement = captureRef.current;\n    if (captureElement == null) return;\n    try {\n      downloadShadowCalendar(captureElement, theme);\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'downloading shadow calendar as PNG failed',\n          fields: {\n            pinnedCrns,\n            theme,\n            term: oscar.term,\n          },\n        })\n      );\n    }\n  }, [captureRef, theme, pinnedCrns, oscar.term]);\n\n  const handleCopyCrns = useCallback(() => {\n    try {\n      copy(pinnedCrns.join(', '));\n    } catch (err) {\n      softError(\n        new ErrorWithFields({\n          message: 'copying CRNs to clipboard failed',\n          fields: {\n            pinnedCrns,\n            term: oscar.term,\n          },\n        })\n      );\n    }\n  }, [pinnedCrns, oscar.term]);\n\n  return {\n    onCopyCrns: handleCopyCrns,\n    enableCopyCrns: pinnedCrns.length > 0,\n    onExportCalendar: handleExport,\n    enableDownloadCalendar: pinnedCrns.length > 0,\n    onDownloadCalendar: handleDownload,\n    enableExportCalendar: pinnedCrns.length > 0,\n    accountState,\n  };\n}\n","import React, { useContext, useMemo } from 'react';\n\nimport { ScheduleContext, TermsContext } from '../../contexts';\nimport HeaderDisplay from '../HeaderDisplay';\nimport useHeaderActionBarProps from '../../hooks/useHeaderActionBarProps';\n\nimport './stylesheet.scss';\n\nexport type HeaderProps = {\n  currentTab: number;\n  onChangeTab: (newTab: number) => void;\n  onToggleMenu: () => void;\n  tabs: string[];\n  captureRef: React.RefObject<HTMLDivElement>;\n};\n\n/**\n * Renders the top header component with all state/interactivity,\n * and includes controls for top-level tab-based navigation.\n * Acts as a wrapper around `<HeaderDisplay>` that provides all props.\n */\nexport default function Header({\n  currentTab,\n  onChangeTab,\n  onToggleMenu,\n  tabs,\n  captureRef,\n}: HeaderProps): React.ReactElement {\n  const [\n    { term, oscar, pinnedCrns, allVersionNames, currentVersion },\n    { setTerm, setCurrentVersion, addNewVersion, deleteVersion, renameVersion },\n  ] = useContext(ScheduleContext);\n  const terms = useContext(TermsContext);\n\n  const totalCredits = useMemo(() => {\n    return pinnedCrns.reduce((credits, crn) => {\n      const crnSection = oscar.findSection(crn);\n      return credits + (crnSection != null ? crnSection.credits : 0);\n    }, 0);\n  }, [pinnedCrns, oscar]);\n\n  const headerActionBarProps = useHeaderActionBarProps(captureRef);\n\n  return (\n    <HeaderDisplay\n      totalCredits={totalCredits}\n      currentTab={currentTab}\n      onChangeTab={onChangeTab}\n      onToggleMenu={onToggleMenu}\n      tabs={tabs}\n      {...headerActionBarProps}\n      termsState={{\n        type: 'loaded',\n        terms,\n        currentTerm: term,\n        onChangeTerm: setTerm,\n      }}\n      versionsState={{\n        type: 'loaded',\n        allVersionNames,\n        currentVersion,\n        setCurrentVersion,\n        addNewVersion,\n        deleteVersion,\n        renameVersion,\n      }}\n    />\n  );\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport {\n  faAngleDown,\n  faAngleUp,\n  faBan,\n  faGraduationCap,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, simplifyName, unique } from '../../utils/misc';\nimport { Section as SectionBean } from '../../data/beans';\nimport { ActionRow, Section } from '..';\nimport { ScheduleContext } from '../../contexts';\n\nimport './stylesheet.scss';\n\nexport type InstructorProps = {\n  className?: string;\n  color: string | undefined;\n  name: string;\n  sections: SectionBean[];\n  gpa: string;\n};\n\nexport default function Instructor({\n  className,\n  color,\n  name,\n  sections,\n  gpa,\n}: InstructorProps): React.ReactElement {\n  const [{ pinnedCrns, excludedCrns }, { patchSchedule }] =\n    useContext(ScheduleContext);\n  const [expanded, setExpanded] = useState(true);\n\n  const includeSection = useCallback(\n    (section: SectionBean) => {\n      patchSchedule({\n        excludedCrns: excludedCrns.filter((crn) => crn !== section.crn),\n      });\n    },\n    [excludedCrns, patchSchedule]\n  );\n\n  const excludeSections = useCallback(\n    (sectionList: SectionBean[]) => {\n      const crns = sectionList.map((section) => section.crn);\n      patchSchedule({\n        excludedCrns: unique([...excludedCrns, ...crns]),\n        pinnedCrns: pinnedCrns.filter((crn) => !crns.includes(crn)),\n      });\n    },\n    [excludedCrns, pinnedCrns, patchSchedule]\n  );\n\n  const instructorPinned = sections.some((section) =>\n    pinnedCrns.includes(section.crn)\n  );\n\n  const includedSections = sections.filter(\n    (section) => !excludedCrns.includes(section.crn)\n  );\n  const excludedSections = sections.filter((section) =>\n    excludedCrns.includes(section.crn)\n  );\n\n  const excludeTooltipId = `exclude-instructor-${name.replace(' ', '-')}`;\n  return (\n    <div\n      className={classes(\n        'Instructor',\n        !expanded && 'divider-bottom',\n        className\n      )}\n    >\n      <ActionRow\n        label={name || 'Not Assigned'}\n        actions={[\n          {\n            icon: expanded ? faAngleUp : faAngleDown,\n            onClick: (): void => setExpanded(!expanded),\n          },\n          !['TBA', 'Not Assigned'].includes(name)\n            ? {\n                icon: faGraduationCap,\n                href: `http://www.ratemyprofessors.com/search.jsp?queryBy=teacherName&schoolName=Georgia+Institute+of+Technology&query=${encodeURIComponent(\n                  simplifyName(name)\n                )}`,\n              }\n            : null,\n          {\n            icon: faBan,\n            dataTip: true,\n            dataFor: excludeTooltipId,\n            onClick: (): void => excludeSections(sections),\n          },\n        ]}\n        style={instructorPinned ? { backgroundColor: color } : undefined}\n      >\n        <div className=\"instructor-row\">\n          <span className=\"gpa\">Instructor GPA: {gpa || 'N/A'}</span>\n        </div>\n      </ActionRow>\n      <ReactTooltip\n        id={excludeTooltipId}\n        type=\"dark\"\n        place=\"bottom\"\n        effect=\"solid\"\n      >\n        Exclude from Combinations\n      </ReactTooltip>\n      {expanded && (\n        <div className={classes('section-container', 'nested')}>\n          {includedSections.map((section) => {\n            const pinned = pinnedCrns.includes(section.crn);\n            return (\n              <Section\n                key={section.id}\n                className=\"divider-bottom\"\n                section={section}\n                color={color}\n                pinned={pinned}\n              />\n            );\n          })}\n          {excludedSections.length > 0 && (\n            <div className=\"excluded-section-container\">\n              {excludedSections.map((section) => (\n                <span\n                  className=\"excluded-section\"\n                  key={section.id}\n                  onClick={(): void => includeSection(section)}\n                >\n                  {section.id}\n                </span>\n              ))}\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport ReactMapGL, { Marker, NavigationControl } from 'react-map-gl';\nimport { ViewState } from 'react-map-gl/src/mapbox/mapbox';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapPin } from '@fortawesome/free-solid-svg-icons';\n\nimport { Location } from '../../types';\nimport { ThemeContext } from '../../contexts';\n\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './stylesheet.scss';\n\nexport type MapLocation = {\n  section: string;\n  id: string;\n  coords: Location | null;\n};\n\nexport type MapViewProps = {\n  locations: MapLocation[];\n};\n\nexport default function MapView({\n  locations,\n}: MapViewProps): React.ReactElement {\n  // These initial coordinates start the map looking at the GT Atlanta campus\n  const [viewState, setViewState] = useState<ViewState>({\n    latitude: 33.7765,\n    longitude: -84.3963,\n    zoom: 15,\n  });\n\n  const unknown: MapLocation[] = [];\n  const coordsToLocationsMap = new Map<Location, MapLocation[]>();\n  locations.forEach((location) => {\n    if (location.coords === null) {\n      unknown.push(location);\n    } else if (coordsToLocationsMap.has(location.coords)) {\n      coordsToLocationsMap.get(location.coords)?.push(location);\n    } else {\n      coordsToLocationsMap.set(location.coords, [location]);\n    }\n  });\n\n  // Switch the map style based on the current theme.\n  // These are custom styles owned by the Mapbox account in the BitWarden.\n  // Public share links:\n  // Dark: https://api.mapbox.com/styles/v1/gt-scheduler/cktc4yzhm018w17ql65xa802o.html?fresh=true&title=copy&access_token=pk.eyJ1IjoiZ3Qtc2NoZWR1bGVyIiwiYSI6ImNrdGM0cXlqMDA0aXYyeHBma290Y2NyOTgifQ.S_A1gOu-FSQ8ywQFf2rr5A\n  // Light: https://api.mapbox.com/styles/v1/gt-scheduler/cktc4y61t018918qjynvngozg.html?fresh=true&title=copy&access_token=pk.eyJ1IjoiZ3Qtc2NoZWR1bGVyIiwiYSI6ImNrdGM0cXlqMDA0aXYyeHBma290Y2NyOTgifQ.S_A1gOu-FSQ8ywQFf2rr5A\n  const [theme] = useContext(ThemeContext);\n  const mapStyle =\n    theme === 'dark'\n      ? 'mapbox://styles/gt-scheduler/cktc4yzhm018w17ql65xa802o' // gt-scheduler-dark\n      : 'mapbox://styles/gt-scheduler/cktc4y61t018918qjynvngozg'; // gt-scheduler-light\n\n  return (\n    <div className=\"mapbox\">\n      <ReactMapGL\n        height=\"100%\"\n        width=\"100%\"\n        viewState={viewState}\n        mapStyle={mapStyle}\n        mapboxApiAccessToken={process.env['REACT_APP_MAPBOX_TOKEN'] ?? ''}\n        onViewStateChange={({\n          viewState: newViewState,\n        }: {\n          viewState: ViewState;\n        }): void => setViewState(newViewState)}\n      >\n        {Array.from(coordsToLocationsMap.entries()).map(\n          ([coords, coordLocations], i) => (\n            <Marker key={i} latitude={coords.lat} longitude={coords.long}>\n              <FontAwesomeIcon icon={faMapPin} className=\"pin-icon\" />\n              <div className=\"pin-text\">\n                {coordLocations.map((coordLocation) => (\n                  <div key={coordLocation.id + coordLocation.section}>\n                    {coordLocation.id} {coordLocation.section}\n                  </div>\n                ))}\n              </div>\n            </Marker>\n          )\n        )}\n        {unknown.length > 0 && (\n          <div className=\"unknown-container\">\n            <b>Undetermined</b>\n            {unknown.map((location, i) => (\n              <div className=\"class\" key={i}>\n                {location.id} {location.section}\n              </div>\n            ))}\n          </div>\n        )}\n        <div className=\"navigation\">\n          <NavigationControl showZoom showCompass />\n        </div>\n      </ReactMapGL>\n    </div>\n  );\n}\n","import React, { useContext } from 'react';\nimport { faAngleDown, faAngleUp } from '@fortawesome/free-solid-svg-icons';\n\nimport { ActionRow } from '..';\nimport { classes, getContentClassName } from '../../utils/misc';\nimport { Period } from '../../types';\nimport { ThemeContext } from '../../contexts';\n\nimport './stylesheet.scss';\n\nexport type Day = 'M' | 'T' | 'W' | 'R' | 'F';\n\nexport function isDay(rawDay: string): rawDay is Day {\n  switch (rawDay) {\n    case 'M':\n    case 'T':\n    case 'W':\n    case 'R':\n    case 'F':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport interface CourseDateItem {\n  id: string;\n  title: string;\n  times: Period | undefined;\n  daysOfWeek: string[];\n}\n\nexport type DaySelectionProps = {\n  courseDateMap: Record<Day, CourseDateItem[]>;\n  activeDay: Day | '';\n  setActiveDay: (next: Day | '') => void;\n};\n\nconst LIGHT_COLOR_PALETTE = [\n  '#FCB9AA',\n  '#FFDBCC',\n  '#ECEAE4',\n  '#A2E1DB',\n  '#55CBCD',\n];\nconst DARK_COLOR_PALETTE = [\n  '#5e3931',\n  '#704737',\n  '#685a30',\n  '#3c6962',\n  '#286061',\n];\n\nexport default function DaySelection({\n  courseDateMap,\n  activeDay,\n  setActiveDay,\n}: DaySelectionProps): React.ReactElement {\n  const daysOfTheWeek = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n  ];\n\n  // Switch the color palette based on the current theme.\n  const [theme] = useContext(ThemeContext);\n  const colorPalette =\n    theme === 'dark' ? DARK_COLOR_PALETTE : LIGHT_COLOR_PALETTE;\n\n  const formatTime = (time: number): string => {\n    if (Math.floor(time / 60) >= 12) {\n      const adjustedHour = Math.floor(time / 60) % 12;\n      const hour = adjustedHour === 0 ? '12' : adjustedHour;\n      const minute = String(time % 60).padStart(2, '0');\n      return `${hour}:${minute}pm`;\n    }\n\n    const hour = Math.floor(time / 60);\n    const minute = String(time % 60).padStart(2, '0');\n    return `${hour}:${minute}am`;\n  };\n\n  return (\n    <div className=\"date-container\">\n      {Object.keys(courseDateMap).map((date, i) => {\n        if (!isDay(date)) return null;\n        const courses = courseDateMap[date];\n        return (\n          <div\n            key={date}\n            className={classes(\n              'date',\n              getContentClassName(colorPalette[i]),\n              'default'\n            )}\n            style={{ backgroundColor: colorPalette[i] }}\n          >\n            <ActionRow\n              label={daysOfTheWeek[i] ?? ''}\n              className=\"day-select\"\n              actions={[\n                {\n                  icon: date === activeDay ? faAngleUp : faAngleDown,\n                  onClick: (): void =>\n                    date !== activeDay ? setActiveDay(date) : setActiveDay(''),\n                },\n              ]}\n            />\n            {activeDay === date && (\n              <div className=\"dropdown-content\">\n                {courses == null || courses.length === 0 ? (\n                  <div className=\"course-content\" style={{ padding: 8 }}>\n                    No classes this day!\n                  </div>\n                ) : (\n                  courses.map((course) => {\n                    let timeLabel = 'TBA';\n                    const { times } = course;\n                    if (times != null) {\n                      const { start, end } = times;\n                      timeLabel = `${formatTime(start)} - ${formatTime(end)}`;\n                    }\n\n                    return (\n                      <div className=\"course-content\" key={course.id}>\n                        <div className=\"course-id\">{course.id}</div>\n                        <span className=\"course-row\">{course.title}</span>\n                        <span className=\"course-row\">\n                          {course.daysOfWeek} {timeLabel}\n                        </span>\n                      </div>\n                    );\n                  })\n                )}\n              </div>\n            )}\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\n\nimport MapView, { MapLocation } from '../MapView';\nimport { ScheduleContext } from '../../contexts';\nimport DaySelection, { CourseDateItem, Day, isDay } from '../DaySelection';\nimport { Meeting } from '../../types';\n\nimport './stylesheet.scss';\n\n// Construct combined course data\n// to pass to `<MapView>` and `<DaySelection>`\ntype CombinedCourseData = CourseDateItem & MapLocation;\n\nexport default function Map(): React.ReactElement {\n  const [{ oscar, pinnedCrns }] = useContext(ScheduleContext);\n  const [activeDay, setActiveDay] = useState<Day | ''>('M');\n  const courseDateMap: Record<Day, CombinedCourseData[]> = {\n    M: [],\n    T: [],\n    W: [],\n    R: [],\n    F: [],\n  };\n\n  // Construct the course data for the first meeting of each class\n  pinnedCrns.forEach((crn) => {\n    const section = oscar.findSection(crn);\n    if (section == null) return;\n    const { meetings } = section;\n    if (meetings.length === 0) return;\n    const firstMeeting = meetings[0] as Meeting;\n\n    firstMeeting.days.forEach((day) => {\n      if (!isDay(day)) return;\n      const courses = courseDateMap[day] ?? [];\n      courses.push({\n        id: section.course.id,\n        title: section.course.title,\n        times: firstMeeting.period,\n        daysOfWeek: firstMeeting.days,\n        section: section.id,\n        coords: firstMeeting.location,\n      });\n      courseDateMap[day] = courses;\n    });\n  });\n\n  // Sort each list of course data by their times\n  const sortedCourseDateMap: Record<Day, CombinedCourseData[]> = {\n    M: [],\n    T: [],\n    W: [],\n    R: [],\n    F: [],\n  };\n  Object.entries(courseDateMap).forEach(([day, courseDataList]) => {\n    if (!isDay(day)) return;\n    sortedCourseDateMap[day] = courseDataList.sort(\n      (a, b) => (a.times?.start ?? 0) - (b.times?.start ?? 0)\n    );\n  });\n\n  let activeLocations: MapLocation[] = [];\n  if (activeDay !== '') {\n    activeLocations = sortedCourseDateMap[activeDay];\n  }\n\n  return (\n    <div className=\"map-content\">\n      <DaySelection\n        courseDateMap={sortedCourseDateMap}\n        activeDay={activeDay}\n        setActiveDay={setActiveDay}\n      />\n      <MapView locations={activeLocations} />\n    </div>\n  );\n}\n","import React from 'react';\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes } from '../../utils/misc';\nimport { Button } from '..';\n\nimport './stylesheet.scss';\n\nexport type NavDrawerProps = {\n  open: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n};\n\n/**\n * Renders a nav drawer and the overlay when it is open\n */\nexport default function NavDrawer({\n  open,\n  onClose,\n  children,\n}: NavDrawerProps): React.ReactElement {\n  return (\n    <>\n      <div\n        className={classes('drawer-overlay', open && 'open')}\n        tabIndex={-1}\n        onClick={onClose}\n        role=\"presentation\"\n      />\n      <div className={classes('drawer-outer', open && 'open')}>\n        <div className=\"drawer-header\">\n          <Button className=\"drawer-close\" onClick={onClose}>\n            <FontAwesomeIcon className=\"icon\" fixedWidth icon={faTimes} />\n          </Button>\n        </div>\n        {children}\n      </div>\n    </>\n  );\n}\n","import React from 'react';\n\nimport { Button } from '..';\nimport { classes } from '../../utils/misc';\n\nimport './stylesheet.scss';\n\nexport type NavMenuProps = {\n  items: string[];\n  currentItem: number;\n  onChangeItem: (next: number) => void;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a vertical nav menu with a single active item\n */\nexport default function NavMenu({\n  items,\n  currentItem,\n  onChangeItem,\n  className,\n  style,\n}: NavMenuProps): React.ReactElement {\n  return (\n    <div className={classes('nav-menu', className)} style={style}>\n      {items.map((item, idx) => (\n        <Button\n          className={classes('nav-button', currentItem === idx && 'active')}\n          onClick={(): void => onChangeItem(idx)}\n          key={idx}\n        >\n          {item}\n        </Button>\n      ))}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils/misc';\nimport { PALETTE } from '../../constants';\n\nimport './stylesheet.scss';\n\nexport type PaletteProps = {\n  className?: string;\n  color: string | null;\n  onSelectColor: (newColor: string) => void;\n  onMouseLeave: () => void;\n};\n\nexport default function Palette({\n  className,\n  color,\n  onSelectColor,\n  onMouseLeave,\n}: PaletteProps): React.ReactElement {\n  return (\n    <div className={classes('Palette', className)} onMouseLeave={onMouseLeave}>\n      {PALETTE.map((colors, i) => (\n        <div className=\"palette-row\" key={i}>\n          {colors.map((paletteColor) => (\n            <div\n              className={classes('color', paletteColor === color && 'frame')}\n              key={paletteColor}\n              style={{ backgroundColor: paletteColor }}\n              onClick={(): void => onSelectColor(paletteColor)}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport {\n  faInfoCircle,\n  faAngleUp,\n  faAngleDown,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { ScheduleContext } from '../../contexts';\nimport { classes, serializePrereqs } from '../../utils/misc';\nimport { ActionRow } from '..';\nimport { Course } from '../../data/beans';\nimport {\n  CrawlerPrerequisites,\n  PrerequisiteClause,\n  PrerequisiteOperator,\n} from '../../types';\nimport { ErrorWithFields, softError } from '../../log';\n\nconst BASE_ITEM_STYLE = { fontSize: '0.9em', padding: '8px' };\n\nexport type PrerequisiteProps = {\n  course: Course;\n  prereqs: CrawlerPrerequisites;\n};\n\n/**\n * Renders the prereqs for a single course, given that the crawler version\n * supports prereqs. (Make sure to check this before). An empty prereq list is\n * an authoritative statement that the course has no prereqs, and as such a\n * message will be displayed telling the user. Otherwise, this component tries\n * to render the prereq tree in a way that is easily consumable without taking\n * up too much screen space, first trying to split the prereqs up into separate\n * \"options\" (sub-clauses of an OR set) if possible before rendering a list of\n * items with operators in between. Finally, in each item, there is the\n * flattened textual representation of the remainder of the subtree, which\n * restores parentheses groupings (much like the original Oscar prereq syntax)\n */\nexport default function Prerequisite({\n  course,\n  prereqs,\n}: PrerequisiteProps): React.ReactElement {\n  let content: React.ReactNode;\n  if (prereqs.length === 0) {\n    content = <PrerequisiteEmpty />;\n  } else {\n    // `prereqs` isn't an empty array, so it must be `PrerequisiteSet`\n    // (here we manually `Exclude` the empty array case)\n    const [op, ...subClauses] = prereqs as Exclude<CrawlerPrerequisites, []>;\n\n    switch (op) {\n      case 'and':\n        // We only consider this a single \"option\",\n        // so just render the content as a direct child\n        content = <PrerequisiteClauseDisplay clause={['and', ...subClauses]} />;\n        break;\n      case 'or':\n        if (subClauses.length === 1) {\n          // There is only 1 option:\n          // just render the content as a direct child\n          content = (\n            <PrerequisiteClauseDisplay\n              clause={subClauses[0] as PrerequisiteClause}\n            />\n          );\n        } else {\n          // Render an option for each sub-clause\n          content = (\n            <>\n              {subClauses.map((subClause, i) => (\n                <PrerequisiteOption key={i} clause={subClause} index={i} />\n              ))}\n            </>\n          );\n        }\n        break;\n      default:\n        softError(\n          new ErrorWithFields({\n            message: 'invalid operator found in top-level prereqs',\n            fields: {\n              courseId: course.id,\n              operator: op,\n              term: course.term,\n            },\n          })\n        );\n        content = null;\n    }\n  }\n\n  return (\n    <div className={classes('hover-container', 'nested')}>\n      <PrerequisiteHeader course={course} />\n      <div className={classes('nested')}>{content}</div>\n    </div>\n  );\n}\n\n// Private sub-components\n\ntype PrerequisiteHeaderProps = {\n  course: Course;\n};\n\n/**\n * Renders the \"header\" at the top of a prereq display,\n * which includes a link to Oscar giving the original prereq source,\n * plus other course information.\n */\nfunction PrerequisiteHeader({\n  course,\n}: PrerequisiteHeaderProps): React.ReactElement {\n  const [{ term }] = useContext(ScheduleContext);\n\n  return (\n    <ActionRow\n      className={classes('hover-container')}\n      label=\"Prerequisites\"\n      actions={[\n        {\n          icon: faInfoCircle,\n          href:\n            `https://oscar.gatech.edu/pls/bprod/bwckctlg.p_disp_` +\n            `course_detail?cat_term_in=${term}&subj_code_in=` +\n            `${course.subject}&crse_numb_in=${course.number}`,\n        },\n      ]}\n    />\n  );\n}\n\ntype PrerequisiteOptionProps = {\n  clause: PrerequisiteClause;\n  index: number;\n};\n\n/**\n * Renders a single prereq option -- a sub-clause of a larger \"OR\" prereq set\n * that is independently collapse-able from the other sibling options.\n * Inside, uses `PrerequisiteClauseDisplay` to render the sub-clause if\n * the option is expanded.\n */\nfunction PrerequisiteOption({\n  clause,\n  index,\n}: PrerequisiteOptionProps): React.ReactElement {\n  const [expanded, setExpanded] = useState(true);\n\n  return (\n    <>\n      <ActionRow\n        className={classes('hover-container')}\n        label={`Option ${index + 1}`}\n        actions={[\n          {\n            icon: expanded ? faAngleUp : faAngleDown,\n            onClick: (): void => setExpanded(!expanded),\n          },\n        ]}\n      />\n      {expanded && (\n        <div className={classes('nested')}>\n          <PrerequisiteClauseDisplay clause={clause} />\n        </div>\n      )}\n    </>\n  );\n}\n\ntype PrerequisiteClauseDisplayProps = {\n  clause: PrerequisiteClause;\n};\n\n/**\n * Renders an arbitrary prereq clause. If the clause is a singular course,\n * then it renders a single Item. Otherwise, if the clause is a set,\n * this component renders an item for each member of the set, and includes\n * an operator at the end of each item's text to indicate that each item\n * is part of a larger prereq set.\n */\nfunction PrerequisiteClauseDisplay({\n  clause,\n}: PrerequisiteClauseDisplayProps): React.ReactElement {\n  if (!Array.isArray(clause)) {\n    // Render the single prereq course\n    return <PrerequisiteItem clause={clause} operator=\"and\" isLast />;\n  }\n\n  // Render a list of prereq items\n  const [operator, ...subClauses] = clause;\n  return (\n    <>\n      {subClauses.map((subClause, i) => (\n        <PrerequisiteItem\n          key={i}\n          clause={subClause}\n          operator={operator}\n          isLast={i === subClauses.length - 1}\n        />\n      ))}\n    </>\n  );\n}\n\ntype PrerequisiteItemProps = {\n  clause: PrerequisiteClause;\n  operator: PrerequisiteOperator;\n  isLast: boolean;\n};\n\n/**\n * Renders a single \"item\" -- a div with the completely flattened text\n * representation of the prereq subtree passed in as `clause` (whether\n * that's a single prereq course or a sprawling sub-tree with many branches).\n * Includes the ability to display a higher-level operator between different\n * `PrerequisiteItem`'s as long as `isLast` is false, which is used by\n * `PrerequisiteClauseDisplay` when it needs to render a prerequisite set.\n */\nfunction PrerequisiteItem({\n  clause,\n  operator,\n  isLast,\n}: PrerequisiteItemProps): React.ReactElement {\n  return (\n    <div className={classes('divider-bottom')} style={BASE_ITEM_STYLE}>\n      {serializePrereqs(clause)} {!isLast && <strong>{operator}</strong>}\n    </div>\n  );\n}\n\n/**\n * Replacement prerequisite \"item\"-like component that simply contains\n * a notification to the user that the course has no prereqs.\n */\nfunction PrerequisiteEmpty(): React.ReactElement {\n  return (\n    <div style={BASE_ITEM_STYLE}>No prerequisites. You&apos;re good to go!</div>\n  );\n}\n","import React, { useMemo, useState } from 'react';\n\nimport { classes } from '../../utils/misc';\nimport { Button, Calendar, CombinationContainer, CourseContainer } from '..';\nimport { OverlayCrnsContext, OverlayCrnsContextValue } from '../../contexts';\nimport { DESKTOP_BREAKPOINT } from '../../constants';\nimport useScreenWidth from '../../hooks/useScreenWidth';\n\n/**\n * Wraps around the root top-level component of the Scheduler tab\n */\nexport default function Scheduler(): React.ReactElement {\n  const mobile = !useScreenWidth(DESKTOP_BREAKPOINT);\n\n  // Store the current set of CRNs that are shown on the Calendar overlay\n  const [overlayCrns, setOverlayCrns] = useState<string[]>([]);\n\n  // Control second-level navigation between panes on mobile\n  const [tabIndex, setTabIndex] = useState<number>(0);\n\n  // Memoize the CRN overlay set's context value so it is stable\n  const overlayContextValue = useMemo<OverlayCrnsContextValue>(\n    () => [overlayCrns, setOverlayCrns],\n    [overlayCrns, setOverlayCrns]\n  );\n\n  return (\n    <>\n      {mobile && (\n        <div className=\"tab-container\">\n          {['Courses', 'Combinations', 'Calendar'].map((tabTitle, i) => (\n            <Button\n              key={tabTitle}\n              className={classes('tab', tabIndex === i && 'active')}\n              onClick={(): void => setTabIndex(i)}\n            >\n              {tabTitle}\n            </Button>\n          ))}\n        </div>\n      )}\n      <OverlayCrnsContext.Provider value={overlayContextValue}>\n        <div className=\"main\">\n          {(!mobile || tabIndex === 0) && <CourseContainer />}\n          {(!mobile || tabIndex === 1) && <CombinationContainer />}\n          {(!mobile || tabIndex === 2) && (\n            <div className=\"calendar-container\">\n              <Calendar className=\"calendar\" overlayCrns={overlayCrns} />\n            </div>\n          )}\n        </div>\n      </OverlayCrnsContext.Provider>\n    </>\n  );\n}\n","import React, { useCallback, useContext, useState } from 'react';\nimport ReactTooltip from 'react-tooltip';\nimport {\n  faBan,\n  faChair,\n  faThumbtack,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { classes, periodToString } from '../../utils/misc';\nimport { ActionRow } from '..';\nimport { OverlayCrnsContext, ScheduleContext } from '../../contexts';\nimport { DELIVERY_MODES } from '../../constants';\nimport { Section as SectionBean } from '../../data/beans';\nimport { Seating } from '../../data/beans/Section';\nimport { ErrorWithFields, softError } from '../../log';\n\nimport './stylesheet.scss';\n\nexport type SectionProps = {\n  className?: string;\n  section: SectionBean;\n  pinned: boolean;\n  color: string | undefined;\n};\n\nexport default function Section({\n  className,\n  section,\n  pinned,\n  color,\n}: SectionProps): React.ReactElement {\n  const [{ term, pinnedCrns, excludedCrns }, { patchSchedule }] =\n    useContext(ScheduleContext);\n  const [, setOverlayCrns] = useContext(OverlayCrnsContext);\n  const [seating, setSeating] = useState<Seating>([[], 0]);\n\n  let hovering = false;\n  const handleHover = (): void => {\n    hovering = true;\n    setTimeout(() => {\n      if (hovering) {\n        section\n          .fetchSeating(term)\n          .then((newSeating) => {\n            setSeating(newSeating);\n          })\n          .catch((err) =>\n            softError(\n              new ErrorWithFields({\n                message: 'error while fetching seating',\n                source: err,\n                fields: { crn: section.crn, term: section.term },\n              })\n            )\n          );\n      }\n    }, 333);\n  };\n\n  const excludeSection = useCallback(\n    (sect: SectionBean) => {\n      patchSchedule({\n        excludedCrns: [...excludedCrns, sect.crn],\n        pinnedCrns: pinnedCrns.filter((crn) => crn !== sect.crn),\n      });\n    },\n    [pinnedCrns, excludedCrns, patchSchedule]\n  );\n\n  const pinSection = useCallback(\n    (sect: SectionBean) => {\n      if (pinnedCrns.includes(sect.crn)) {\n        patchSchedule({\n          pinnedCrns: pinnedCrns.filter((crn) => crn !== sect.crn),\n        });\n      } else {\n        patchSchedule({\n          pinnedCrns: [...pinnedCrns, sect.crn],\n          excludedCrns: excludedCrns.filter((crn) => crn !== sect.crn),\n        });\n      }\n    },\n    [pinnedCrns, excludedCrns, patchSchedule]\n  );\n\n  const excludeTooltipId = `section-exclude-${section.id}`;\n  return (\n    <ActionRow\n      label={section.id}\n      className={classes('Section', className)}\n      onMouseEnter={(): void => setOverlayCrns([section.crn])}\n      onMouseLeave={(): void => setOverlayCrns([])}\n      actions={[\n        {\n          icon: pinned ? faTimes : faThumbtack,\n          onClick: (): void => pinSection(section),\n        },\n        {\n          icon: faChair,\n          dataTip: true,\n          dataFor: section.id,\n          href: `https://oscar.gatech.edu/pls/bprod/bwckschd.p_disp_detail_sched?term_in=${term}&crn_in=${section.crn}`,\n        },\n        {\n          icon: faBan,\n          dataTip: true,\n          dataFor: excludeTooltipId,\n          onClick: (): void => excludeSection(section),\n        },\n      ]}\n      style={pinned ? { backgroundColor: color } : undefined}\n    >\n      <ReactTooltip\n        id={excludeTooltipId}\n        className=\"tooltip\"\n        type=\"dark\"\n        place=\"right\"\n        effect=\"solid\"\n      >\n        Exclude from Combinations\n      </ReactTooltip>\n      <div className=\"section-details\">\n        <div className=\"delivery-mode\">\n          {section.deliveryMode != null\n            ? DELIVERY_MODES[section.deliveryMode]\n            : ''}\n        </div>\n        <div className=\"meeting-container\">\n          {section.meetings.map((meeting, i) => {\n            return (\n              <div className=\"meeting\" key={i}>\n                <span className=\"days\">{meeting.days.join('')}</span>\n                <span className=\"period\">{periodToString(meeting.period)}</span>\n              </div>\n            );\n          })}\n        </div>\n\n        <ReactTooltip\n          id={section.id}\n          className=\"tooltip\"\n          type=\"dark\"\n          place=\"right\"\n          effect=\"solid\"\n          afterShow={(): void => handleHover()}\n          afterHide={(): void => {\n            hovering = false;\n          }}\n        >\n          <table>\n            <tbody>\n              <tr>\n                <td>\n                  <b>Seats Filled</b>\n                </td>\n                <td>\n                  {seating[0].length === 0\n                    ? `Loading...`\n                    : typeof seating[0][1] === 'number'\n                    ? `${seating[0][1] ?? '<unknown>'} of ${\n                        seating[0][0] ?? '<unknown>'\n                      }`\n                    : `N/A`}\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <b>Waitlist Filled</b>\n                </td>\n                <td>\n                  {seating[0].length === 0\n                    ? `Loading...`\n                    : typeof seating[0][1] === 'number'\n                    ? `${seating[0][3] ?? '<unknown>'} of ${\n                        seating[0][2] ?? '<unknown>'\n                      }`\n                    : `N/A`}\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </ReactTooltip>\n      </div>\n    </ActionRow>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils/misc';\n\nimport './stylesheet.scss';\n\nexport type TabProps = {\n  label: string;\n  onClick: () => void;\n  active?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a single top-level tab that is used in a horizontal list\n */\nexport default function Tab({\n  label,\n  active = false,\n  onClick,\n  className,\n  style,\n}: TabProps): React.ReactElement {\n  return (\n    <button\n      className={classes('Tab', active && 'active', className)}\n      style={style}\n      onClick={onClick}\n      type=\"button\"\n    >\n      {label}\n    </button>\n  );\n}\n","import React from 'react';\n\nimport { classes } from '../../utils/misc';\nimport { DESKTOP_BREAKPOINT } from '../../constants';\nimport useScreenWidth from '../../hooks/useScreenWidth';\n\nimport './stylesheet.scss';\n\nexport default function Attribution(): React.ReactElement {\n  const mobile = !useScreenWidth(DESKTOP_BREAKPOINT);\n  return (\n    <div className={classes('Attribution')}>\n      <p>\n        Copyright (c) 2021 with{' '}\n        <span role=\"img\" aria-label=\"love\">\n          ❤️\n        </span>{' '}\n        by <a href=\"https://jasonpark.me\">Jinseo Park</a>,{' '}\n        <a href=\"https://bitsofgood.org\">Bits of Good</a>, and{' '}\n        <a href=\"https://github.com/gt-scheduler/website/graphs/contributors\">\n          {mobile ? 'others' : 'the GT Scheduler contributors'}\n        </a>\n        .\n      </p>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCommentAlt, faTimes } from '@fortawesome/free-solid-svg-icons';\n\nimport { Button } from '..';\nimport { classes } from '../../utils/misc';\nimport { BACKEND_BASE_URL } from '../../constants';\n\nimport './stylesheet.scss';\n\nexport default function Feedback(): React.ReactElement {\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [submit, setSubmit] = useState<boolean>(false);\n  const [rating, setRating] = useState<number | null>(null);\n  const [feedback, setFeedback] = useState<string>('');\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const onSubmit = (): void => {\n    setLoading(true);\n    // Add 1 to the rating to move it from [0,4] to [1,5]\n    submitFeedback({ rating: (rating ?? 0) + 1, feedback })\n      .then(() => {\n        setSubmit(true);\n        setLoading(false);\n      })\n      .catch(() => {\n        setSubmit(true);\n        setLoading(false);\n      });\n  };\n\n  return (\n    <>\n      {!expanded && (\n        <div className=\"FeedbackButtonWrapper\">\n          <Button\n            className=\"FeedbackButton\"\n            onClick={(): void => setExpanded(true)}\n          >\n            <FontAwesomeIcon icon={faCommentAlt} size=\"2x\" />\n          </Button>\n        </div>\n      )}\n      {expanded && (\n        <div>\n          <form className=\"FeedbackForm\">\n            <div className=\"container\">\n              <FontAwesomeIcon\n                icon={faTimes}\n                className=\"CloseIcon\"\n                onClick={(): void => setExpanded(false)}\n              />\n              <h3 className=\"FeedbackTitle\">Feedback</h3>\n              {!submit && (\n                <div>\n                  <p className=\"text\">How would you rate your experience?</p>\n                  <div className=\"FormButtons\">\n                    {[1, 2, 3, 4, 5].map((i) => (\n                      <Button\n                        key={i}\n                        className={classes(\n                          'FormButton',\n                          rating === i - 1 && 'active'\n                        )}\n                        onClick={(): void => setRating(i - 1)}\n                      >\n                        {i}\n                      </Button>\n                    ))}\n                  </div>\n                  <div className=\"ScoreLabels\">\n                    <span className=\"score\" style={{ marginLeft: '4px' }}>\n                      Poor\n                    </span>\n                    <span className=\"score\" style={{ marginRight: '4px' }}>\n                      Great\n                    </span>\n                  </div>\n                  <textarea\n                    className=\"FeedbackTextArea\"\n                    placeholder=\"Please let us know if you have any more feedback!\"\n                    onChange={(event): void => setFeedback(event.target.value)}\n                    value={feedback}\n                  />\n                  <Button\n                    className=\"SubmitButton\"\n                    onClick={onSubmit}\n                    disabled={rating == null || loading}\n                  >\n                    Submit\n                  </Button>\n                </div>\n              )}\n              {submit && (\n                <div className=\"submitted\">\n                  <p className=\"submitted-thanks text\">\n                    <span>Thank you for your feedback!</span>\n                  </p>\n                  <div>\n                    <Button\n                      className=\"SubmitButton\"\n                      onClick={(): void => setExpanded(false)}\n                    >\n                      Close\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </div>\n          </form>\n        </div>\n      )}\n    </>\n  );\n}\n\nasync function submitFeedback({\n  rating,\n  feedback,\n}: {\n  rating: number;\n  feedback: string;\n}): Promise<void> {\n  const url = `${BACKEND_BASE_URL}/feedback`;\n  await axios({\n    method: 'post',\n    url,\n    data: {\n      rating,\n      feedback,\n    },\n    headers: {\n      'Content-Type': 'application/json;charset=UTF-8',\n    },\n  });\n}\n","import React, { useEffect, useState } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\n\nimport Modal from '../Modal';\n\n// Key to mark when a user has already been shown the information modal.\n// Update this when updating the contents of the modal.\nconst MODAL_LOCAL_STORAGE_KEY =\n  '2021-10-27-spr2022-schedule-versions-account-sync';\n\n/**\n * Inner content of the information modal.\n * Change this to update the announcement that is shown when visiting the site.\n * Additionally, make sure to change `MODAL_LOCAL_STORAGE_KEY`\n * with another unique value that has never been used before.\n */\nexport function InformationModalContent(): React.ReactElement {\n  return (\n    <>\n      <img\n        style={{ width: '175px', margin: '0 auto', display: 'block' }}\n        alt=\"GT Scheduler Logo\"\n        src=\"/mascot.png\"\n      />\n      <h1 style={{ lineHeight: 1 }}>\n        Spring 2022 courses, schedule versions, and account sync\n      </h1>\n      <h4 style={{ opacity: 0.7 }}>October 27th, 2021</h4>\n      <p>\n        Hey there, yellow jackets! Today marks the release of the Spring 2022\n        course catalog. You can access it in GT Scheduler by selecting{' '}\n        <strong>&ldquo;Spring 2022&rdquo;</strong> from the term drop-down in\n        the top-left.\n      </p>\n      <p>\n        On behalf of the GT Scheduler contributors, we&apos;re also excited to\n        announce two of the most-requested features:\n      </p>\n      <ul>\n        <li style={{ marginBottom: 8 }}>\n          <strong>Schedule versions</strong> - Now, next to the term drop-down\n          in the top-left, there is also a schedule drop-down. Use it to{' '}\n          <strong>create new schedules</strong> and{' '}\n          <strong>switch between existing ones</strong>.\n          <img\n            style={{\n              width: '100%',\n              height: 'auto',\n              margin: '8px auto',\n              display: 'block',\n            }}\n            alt=\"GT Scheduler Logo\"\n            src=\"/schedule_versions.png\"\n          />\n        </li>\n        <li>\n          <strong>Account sync</strong> - In addition to creating multiple\n          schedules, you can now also{' '}\n          <strong>sync these schedules between devices.</strong> Use the\n          drop-down in the top right to sign in and upload your schedules to the\n          cloud. Currently, the app supports either email/password, Google, or\n          GitHub sign-in options:\n          <img\n            style={{\n              width: '100%',\n              height: 'auto',\n              margin: '16px auto',\n              display: 'block',\n            }}\n            alt=\"GT Scheduler Logo\"\n            src=\"/account_sync.png\"\n          />\n          Note that signing in is completely optional: the app will still work\n          without an account (your schedules will instead be stored locally on\n          your device).\n        </li>\n      </ul>\n      <p>\n        If you find any bugs in these features or in existing ones, feel free to{' '}\n        <a href=\"https://github.com/gt-scheduler/website/issues/new/choose\">\n          open an issue on the GT Scheduler GitHub\n        </a>{' '}\n        and we will try our best to fix them.\n      </p>\n      <p>\n        A big thank you to everyone that{' '}\n        <a href=\"https://github.com/gt-scheduler/website/graphs/contributors\">\n          contributed\n        </a>{' '}\n        to the project in the past year. GT Scheduler is an open source project,\n        and we hope that we&apos;ve been able to make your scheduling experience\n        better. If you enjoy our work and are interested in contributing, feel\n        free to{' '}\n        <a href=\"https://github.com/gt-scheduler/website/pulls\">\n          open a pull request\n        </a>{' '}\n        with your improvements. Thank you and enjoy!\n      </p>\n    </>\n  );\n}\n\n/**\n * Component that shows the information modal\n * upon the user's first visit to the site\n * when they haven't seen this version of the information modal before.\n */\nexport default function InformationModal(): React.ReactElement {\n  const [show, setShow] = useState(false);\n  const [hasSeen, setHasSeen] = useLocalStorageState(\n    MODAL_LOCAL_STORAGE_KEY,\n    false\n  );\n\n  useEffect(() => {\n    if (!hasSeen) {\n      setShow(true);\n      setHasSeen(true);\n    }\n  }, [hasSeen, setHasSeen]);\n\n  return (\n    <Modal\n      show={show}\n      onHide={(): void => setShow(false)}\n      buttons={[{ label: 'Got it!', onClick: (): void => setShow(false) }]}\n      width={800}\n    >\n      <InformationModalContent />\n    </Modal>\n  );\n}\n","import React, { ErrorInfo } from 'react';\n\nimport { ErrorWithFields, softError } from '../../log';\n\ntype ErrorBoundaryProps = {\n  fallback?: (error: Error, errorInfo: ErrorInfo | null) => React.ReactNode;\n  children: React.ReactNode;\n};\n\ntype ErrorBoundaryState = {\n  error: Error | null;\n  info: ErrorInfo | null;\n};\n\n/**\n * Wraps hard errors in the component tree, showing a fallback display\n * so that the error doesn't entirely crash the app.\n * Additionally reports the error to Sentry.\n */\nexport default class ErrorBoundary extends React.Component<\n  ErrorBoundaryProps,\n  ErrorBoundaryState\n> {\n  constructor(props: ErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null, info: null };\n  }\n\n  static getDerivedStateFromError(error: Error): ErrorBoundaryState {\n    return { error, info: null };\n  }\n\n  override componentDidCatch(error: Error, info: React.ErrorInfo): void {\n    // Log & report to Sentry\n    softError(\n      new ErrorWithFields({\n        message: 'ErrorBoundary caught error from further in render tree',\n        source: error,\n        fields: {\n          reactErrorInfo: info,\n        },\n      })\n    );\n\n    this.setState({ info });\n  }\n\n  override render(): React.ReactElement | null {\n    const { children, fallback } = this.props;\n    const { error, info } = this.state;\n\n    if (error !== null) {\n      if (fallback != null) {\n        return <>{fallback(error, info)}</>;\n      }\n\n      return null;\n    }\n\n    return <>{children}</>;\n  }\n}\n","import React from 'react';\nimport safeStringify from 'fast-safe-stringify';\n\nimport { ErrorWithFields } from '../../log';\nimport { classes } from '../../utils/misc';\n\nexport type ErrorDetailsFieldProps = {\n  name: string;\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n  className?: string;\n};\n\n/**\n * A single field in an error details component\n */\nexport function ErrorDetailsField({\n  name,\n  children,\n  style,\n  className,\n}: ErrorDetailsFieldProps): React.ReactElement {\n  return (\n    <div className={classes(className, 'error-details-field')} style={style}>\n      <strong>{name}</strong>: {children}\n    </div>\n  );\n}\n\nexport type ReactErrorDetailsProps = {\n  error: Error;\n  errorInfo: React.ErrorInfo | null;\n};\n\n/**\n * Shows debug information for an error using react error info.\n */\nexport function ReactErrorDetails({\n  error,\n  errorInfo,\n}: ReactErrorDetailsProps): React.ReactElement {\n  return (\n    <>\n      <BaseErrorDetails error={error} />\n      {errorInfo !== null && (\n        <ErrorDetailsField name=\"Component stacktrace\">\n          <pre>\n            <code>{errorInfo.componentStack.replace(/^[\\n\\r]+/, '')}</code>\n          </pre>\n        </ErrorDetailsField>\n      )}\n    </>\n  );\n}\n\nexport type LoadingErrorDetailsProps = {\n  error: Error;\n  overview: React.ReactNode;\n  name: string;\n};\n\n/**\n * Shows debug information for an error that occurred while loading.\n */\nexport function LoadingErrorDetails({\n  error,\n  overview,\n  name,\n}: LoadingErrorDetailsProps): React.ReactElement {\n  return (\n    <>\n      <BaseErrorDetails error={error} />\n      <ErrorDetailsField name=\"Operation name\">\n        (loading) {name}\n      </ErrorDetailsField>\n      <ErrorDetailsField name=\"Overview\">{overview}</ErrorDetailsField>\n    </>\n  );\n}\n\nexport type BaseErrorDetailsProps = {\n  error: Error;\n};\n\n/**\n * Shows debug information for an instance of `Error`.\n */\nexport function BaseErrorDetails({\n  error,\n}: BaseErrorDetailsProps): React.ReactElement {\n  return (\n    <>\n      <ErrorDetailsField name=\"Name\">{error.name}</ErrorDetailsField>\n      <ErrorDetailsField name=\"Message\">{error.message}</ErrorDetailsField>\n      <ErrorDetailsField name=\"Version\">\n        {process.env['REACT_APP_SENTRY_VERSION']}\n      </ErrorDetailsField>\n      {error instanceof ErrorWithFields && (\n        <ErrorDetailsField name=\"Fields\">\n          <pre>\n            <code>\n              {Object.entries(error.getAllFields())\n                .map(([key, value]) => `    ${key}: ${safeStringify(value)}`)\n                .join('\\n')}\n            </code>\n          </pre>\n        </ErrorDetailsField>\n      )}\n      <ErrorDetailsField name=\"Stacktrace\">\n        <pre>\n          <code>{error.stack ?? '~'}</code>\n        </pre>\n      </ErrorDetailsField>\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport { classes } from '../../utils/misc';\n\nimport './stylesheet.scss';\n\nexport type ExpandableCardProps = {\n  label?: string;\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n};\n\n/**\n * Renders a simple expandable card that has a button\n * which can be clicked to render all content.\n */\nexport default function ExpandableCard({\n  children,\n  label = 'Details',\n  className,\n  style,\n}: ExpandableCardProps): React.ReactElement {\n  const [showChildren, setShowChildren] = useState(false);\n\n  return (\n    <div className={classes('expandable-card', className)} style={style}>\n      <button\n        className=\"expandable-card-button\"\n        onClick={(): void => setShowChildren(!showChildren)}\n        type=\"button\"\n      >\n        <FontAwesomeIcon\n          fixedWidth\n          icon={faCaretDown}\n          style={{\n            transform: showChildren ? 'rotate(-90deg)' : 'none',\n            marginRight: 8,\n          }}\n        />\n        {label}\n      </button>\n      {showChildren && children}\n    </div>\n  );\n}\n","import React from 'react';\n\nimport ExpandableCard from '../ExpandableCard';\n\nimport './stylesheet.scss';\n\nexport const GITHUB_ISSUE_URL =\n  'https://github.com/gt-scheduler/website/issues/new?assignees=&labels=bug&template=bug-report----.md&title=';\n\nexport type ErrorDisplayProps = {\n  errorDetails: React.ReactNode;\n  children: React.ReactNode;\n};\n\n/**\n * Renders the content for an error display,\n * directing the user to report the error to GitHub\n * and showing a collapsible section that includes details.\n */\nexport default function ErrorDisplay({\n  errorDetails,\n  children,\n}: ErrorDisplayProps): React.ReactElement {\n  return (\n    <div className=\"error-display-outer\">\n      {children}\n      <div>\n        If the issue keeps happening, please consider filing{' '}\n        <a href={GITHUB_ISSUE_URL} target=\"_blank\" rel=\"noreferrer noopener\">\n          a new issue on the gt-scheduler GitHub\n        </a>\n        , and include the information below under &ldquo;Error Details&rdquo; in\n        addition to what you were doing when the error occurred.\n      </div>\n      <div>\n        The error has already been logged, but filing an issue lets you provide\n        more information about what happened and makes it a lot easier for us to\n        fix the bug. Thanks ❤\n      </div>\n      <ExpandableCard label=\"Error Details\">{errorDetails}</ExpandableCard>\n    </div>\n  );\n}\n","import { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport './stylesheet.scss';\n\n/**\n * Renders the top of an error display,\n * with an icon and a title saying 'An error occurred'\n */\nexport default function ErrorHeader(): React.ReactElement {\n  return (\n    <div className=\"error-header\">\n      <FontAwesomeIcon icon={faExclamationTriangle} />\n      <h4>An error occurred :(</h4>\n    </div>\n  );\n}\n","import React, {\n  useState,\n  useCallback,\n  useEffect,\n  useMemo,\n  useContext,\n} from 'react';\n\nimport { NavDrawer, NavMenu } from '..';\nimport { DESKTOP_BREAKPOINT, LARGE_MOBILE_BREAKPOINT } from '../../constants';\nimport useHeaderActionBarProps from '../../hooks/useHeaderActionBarProps';\nimport { AccountContextValue } from '../../contexts/account';\nimport useScreenWidth from '../../hooks/useScreenWidth';\nimport { ErrorWithFields } from '../../log';\nimport HeaderActionBar from '../HeaderActionBar';\n\nexport const NAV_TABS = ['Scheduler', 'Map'];\n\nexport type AppNavigationContextValue = {\n  currentTabIndex: number;\n  setTabIndex: (next: number) => void;\n  isDrawerOpen: boolean;\n  openDrawer: () => void;\n  closeDrawer: () => void;\n};\n\nexport const AppNavigationContext =\n  React.createContext<AppNavigationContextValue>({\n    currentTabIndex: 0,\n    setTabIndex: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty AppNavigationContext.setTabIndex value being used',\n      });\n    },\n    isDrawerOpen: false,\n    openDrawer: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty AppNavigationContext.openDrawer value being used',\n      });\n    },\n    closeDrawer: (): void => {\n      throw new ErrorWithFields({\n        message: 'empty AppNavigationContext.closeDrawer value being used',\n      });\n    },\n  });\n\nexport type AppNavigationProps = {\n  children: React.ReactNode;\n};\n\n/**\n * Handles controlling the state of app navigation,\n * including the drawer and top-level tabs\n */\nexport function AppNavigation({\n  children,\n}: AppNavigationProps): React.ReactElement {\n  const mobile = !useScreenWidth(DESKTOP_BREAKPOINT);\n\n  // Allow top-level tab-based navigation\n  const [currentTabIndex, setTabIndex] = useState(0);\n\n  // Handle the status of the drawer being open on mobile\n  const [isDrawerOpen, setIsDrawerOpen] = useState(false);\n  const openDrawer = useCallback(() => setIsDrawerOpen(true), []);\n  const closeDrawer = useCallback(() => setIsDrawerOpen(false), []);\n  useEffect(() => {\n    // Close the drawer if switching to desktop\n    if (isDrawerOpen && !mobile) {\n      setIsDrawerOpen(false);\n    }\n  }, [isDrawerOpen, mobile]);\n\n  // Memoize the context value\n  const contextValue = useMemo<AppNavigationContextValue>(\n    () => ({\n      currentTabIndex,\n      setTabIndex,\n      isDrawerOpen,\n      openDrawer,\n      closeDrawer,\n    }),\n    [currentTabIndex, setTabIndex, isDrawerOpen, openDrawer, closeDrawer]\n  );\n\n  return (\n    <AppNavigationContext.Provider value={contextValue}>\n      {children}\n    </AppNavigationContext.Provider>\n  );\n}\n\ntype AppMobileNavProps = {\n  captureRef: React.RefObject<HTMLDivElement>;\n};\n\n/**\n * Adds the nav drawer that is conditionally open depending on navigation state\n * when the app is running on a mobile device.\n * Use over the \"dumb\" display AppMobileNavDisplay component\n * when the app data contexts are available.\n */\nexport function AppMobileNav({\n  captureRef,\n}: AppMobileNavProps): React.ReactElement {\n  const headerActionBarProps = useHeaderActionBarProps(captureRef);\n  return <AppMobileNavDisplay {...headerActionBarProps} />;\n}\n\ntype AppMobileNavDisplayProps = {\n  onCopyCrns?: () => void;\n  enableCopyCrns?: boolean;\n  onExportCalendar?: () => void;\n  enableExportCalendar?: boolean;\n  onDownloadCalendar?: () => void;\n  enableDownloadCalendar?: boolean;\n  accountState?: AccountContextValue | { type: 'loading' };\n};\n\n/**\n * Adds the nav drawer that is conditionally open depending on navigation state\n * when the app is running on a mobile device.\n * Runs as a \"dumb\" display component,\n * not needing valid values for the app data contexts.\n */\nexport function AppMobileNavDisplay({\n  onCopyCrns = (): void => undefined,\n  enableCopyCrns = false,\n  onExportCalendar = (): void => undefined,\n  enableExportCalendar = false,\n  onDownloadCalendar = (): void => undefined,\n  enableDownloadCalendar = false,\n  accountState = { type: 'loading' },\n}: AppMobileNavDisplayProps): React.ReactElement | null {\n  const mobile = !useScreenWidth(DESKTOP_BREAKPOINT);\n  const largeMobile = useScreenWidth(LARGE_MOBILE_BREAKPOINT);\n  const { currentTabIndex, setTabIndex, isDrawerOpen, closeDrawer } =\n    useContext(AppNavigationContext);\n\n  if (!mobile) return null;\n\n  return (\n    <NavDrawer open={isDrawerOpen} onClose={closeDrawer}>\n      {/* On small mobile devices, show the header action row */}\n      {!largeMobile && (\n        <HeaderActionBar\n          accountState={accountState}\n          onCopyCrns={onCopyCrns}\n          enableCopyCrns={enableCopyCrns}\n          onExportCalendar={onExportCalendar}\n          enableExportCalendar={enableExportCalendar}\n          onDownloadCalendar={onDownloadCalendar}\n          enableDownloadCalendar={enableDownloadCalendar}\n        />\n      )}\n\n      <NavMenu\n        items={NAV_TABS}\n        currentItem={currentTabIndex}\n        onChangeItem={setTabIndex}\n      />\n    </NavDrawer>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nimport { softError, ErrorWithFields } from '../../log';\nimport { LoadingState, NonEmptyArray } from '../../types';\nimport { exponentialBackoff, isAxiosNetworkError } from '../../utils/misc';\nimport Cancellable from '../../utils/cancellable';\n\nconst CRAWLER_INDEX_URL = 'https://gt-scheduler.github.io/crawler/index.json';\n\n/**\n * Downloads the list of terms that the crawler has valid data for.\n * Repeatedly attempts to load in the case of errors,\n * and cancels itself once the parent context is unmounted.\n */\nexport default function useDownloadTerms(): LoadingState<\n  NonEmptyArray<string>\n> {\n  const [state, setState] = useState<LoadingState<NonEmptyArray<string>>>({\n    type: 'loading',\n  });\n\n  // Fetch all terms via the crawler's self-hosted index\n  useEffect(() => {\n    const loadOperation = new Cancellable();\n    async function load(): Promise<void> {\n      let attemptNumber = 1;\n      while (!loadOperation.isCancelled) {\n        try {\n          const promise = axios.get<{ terms: string[] }>(CRAWLER_INDEX_URL);\n          const result = await loadOperation.perform(promise);\n          if (result.cancelled) {\n            return;\n          }\n\n          const newTerms = result.value.data.terms.sort().reverse();\n\n          // Ensure that there is at least 1 term before continuing\n          if (newTerms.length === 0) {\n            throw new ErrorWithFields({\n              message: 'fetched list of terms is empty; cannot continue',\n            });\n          }\n\n          setState({\n            type: 'loaded',\n            result: newTerms as NonEmptyArray<string>,\n          });\n\n          return;\n        } catch (err) {\n          // Report the error to Sentry if not a network error\n          if (!isAxiosNetworkError(err)) {\n            softError(\n              new ErrorWithFields({\n                message: 'error fetching list of terms',\n                source: err,\n                fields: {\n                  url: CRAWLER_INDEX_URL,\n                },\n              })\n            );\n          }\n\n          // Flag that an error has occurred\n          setState({\n            type: 'error',\n            error:\n              err instanceof Error\n                ? err\n                : new ErrorWithFields({\n                    message: 'an error occurred while fetching terms',\n                    source: err,\n                  }),\n            stillLoading: true,\n            overview: String(err),\n          });\n        }\n\n        // Sleep for an exponential backoff between each retry\n        await exponentialBackoff(attemptNumber);\n        attemptNumber += 1;\n      }\n    }\n\n    load().catch(() => {\n      // Unreachable\n    });\n\n    // Cancel the background load when this cleans up\n    return (): void => {\n      loadOperation.cancel();\n    };\n  }, [setState]);\n\n  return state;\n}\n","import React from 'react';\n\nimport {\n  LoadingStateLoading,\n  LoadingStateError,\n  LoadingStateCustom,\n} from '../../types';\nimport { LoadingErrorDetails } from '../ErrorDetails';\nimport ErrorDisplay from '../ErrorDisplay';\nimport ErrorHeader from '../ErrorHeader';\nimport Spinner from '../Spinner';\n\nimport './stylesheet.scss';\n\nexport type LoadingDisplayProps = {\n  state: LoadingStateLoading | LoadingStateError | LoadingStateCustom;\n  name: string;\n};\n\n/**\n * Renders a `LoadingState<T>` value,\n * showing a spinner if the state is loading,\n * and an error otherwise if an error ocurred.\n */\nexport default function LoadingDisplay({\n  state,\n  name,\n}: LoadingDisplayProps): React.ReactElement {\n  let contents: React.ReactNode;\n  if (state.type === 'loading') {\n    contents = (\n      <>\n        <Spinner size=\"normal\" style={{ opacity: 0.6 }} />\n        <h4>Loading</h4>\n        <div>{name}</div>\n      </>\n    );\n  } else if (state.type === 'custom') {\n    // Don't wrap custom contents in the outer div\n    return <>{state.contents}</>;\n  } else if (state.stillLoading) {\n    contents = (\n      <>\n        <Spinner size=\"normal\" style={{ opacity: 0.6 }} />\n        <h4>Loading</h4>\n        <ErrorDisplay\n          errorDetails={\n            <LoadingErrorDetails\n              error={state.error}\n              overview={state.overview}\n              name={name}\n            />\n          }\n        >\n          <div>\n            An error ocurred while loading {name}: {state.overview}\n          </div>\n          <div>\n            The application is retrying in the background, so the issue may\n            resolve itself. If it doesn&apos;t, try refreshing the page.\n          </div>\n        </ErrorDisplay>\n      </>\n    );\n  } else {\n    contents = (\n      <>\n        <ErrorHeader />\n        <ErrorDisplay\n          errorDetails={\n            <LoadingErrorDetails\n              error={state.error}\n              overview={state.overview}\n              name={name}\n            />\n          }\n        >\n          <div>\n            An unrecoverable error ocurred while loading {name}:{' '}\n            {state.overview}\n          </div>\n          <div>Try refreshing the page to see if it fixes the issue.</div>\n        </ErrorDisplay>\n      </>\n    );\n  }\n\n  return <div className=\"loading-display\">{contents}</div>;\n}\n","import React, { useContext, useRef } from 'react';\n\nimport { Header, Scheduler, Attribution, Calendar } from '..';\nimport { ReactErrorDetails } from '../ErrorDetails';\nimport ErrorDisplay from '../ErrorDisplay';\nimport ErrorHeader from '../ErrorHeader';\nimport ErrorBoundary from '../ErrorBoundary';\nimport HeaderDisplay from '../HeaderDisplay';\nimport Map from '../Map';\nimport {\n  AppNavigationContext,\n  AppMobileNav,\n  NAV_TABS,\n  AppMobileNavDisplay,\n} from './navigation';\nimport { classes } from '../../utils/misc';\nimport { AccountContextValue } from '../../contexts/account';\n\n/**\n * Renders the actual content at the root of the app\n * once it has completely loaded state,\n * including headers & footers.\n * This component is memoized, so it only re-renders when its context changes.\n */\nfunction AppContentBase(): React.ReactElement {\n  const { currentTabIndex, setTabIndex, openDrawer } =\n    useContext(AppNavigationContext);\n  const captureRef = useRef<HTMLDivElement>(null);\n\n  return (\n    <>\n      <AppMobileNav captureRef={captureRef} />\n      <Header\n        currentTab={currentTabIndex}\n        onChangeTab={setTabIndex}\n        onToggleMenu={openDrawer}\n        tabs={NAV_TABS}\n        captureRef={captureRef}\n      />\n      <ErrorBoundary\n        fallback={(error, errorInfo): React.ReactElement => (\n          <SkeletonContent>\n            <ErrorHeader />\n            <ErrorDisplay\n              errorDetails={\n                <ReactErrorDetails error={error} errorInfo={errorInfo} />\n              }\n            >\n              <div>\n                There was en error somewhere somewhere in the{' '}\n                {NAV_TABS[currentTabIndex] ?? '?'} tab and it can&apos;t\n                continue.\n              </div>\n              <div>Try refreshing the page to see if it fixes the issue.</div>\n            </ErrorDisplay>\n          </SkeletonContent>\n        )}\n      >\n        {currentTabIndex === 0 && <Scheduler />}\n        {currentTabIndex === 1 && <Map />}\n\n        {/* Fake calendar used to capture screenshots */}\n        <div className=\"capture-container\" ref={captureRef}>\n          <Calendar className=\"fake-calendar\" capture overlayCrns={[]} />\n        </div>\n      </ErrorBoundary>\n      <Attribution />\n    </>\n  );\n}\n\n/**\n * Renders the actual content at the root of the app\n * once it has completely loaded state,\n * including headers & footers.\n * This component is memoized, so it only re-renders when its context changes.\n */\nexport const AppContent = React.memo(AppContentBase);\n\nexport type AppSkeletonProps = {\n  children: React.ReactNode;\n  accountState?: AccountContextValue;\n  termsState?: {\n    terms: string[];\n    currentTerm: string;\n    onChangeTerm: (next: string) => void;\n  };\n};\n\n/**\n * Renders a non-functional \"skeleton\" of the app\n * that shows as much content as possible without needing valid context values.\n * The optional props can be used\n * to selectively \"enable\" various parts of the app while it loads.\n */\nexport function AppSkeleton({\n  children,\n  accountState,\n  termsState,\n}: AppSkeletonProps): React.ReactElement {\n  const { currentTabIndex, setTabIndex, openDrawer } =\n    useContext(AppNavigationContext);\n\n  return (\n    <>\n      <AppMobileNavDisplay />\n      <HeaderDisplay\n        currentTab={currentTabIndex}\n        onChangeTab={setTabIndex}\n        onToggleMenu={openDrawer}\n        tabs={NAV_TABS}\n        accountState={accountState ?? { type: 'loading' }}\n        termsState={\n          termsState == null\n            ? { type: 'loading' }\n            : { type: 'loaded', ...termsState }\n        }\n        versionsState={{ type: 'loading' }}\n      />\n      {children}\n      <Attribution />\n    </>\n  );\n}\n\nexport type SkeletonContentProps = {\n  children: React.ReactNode;\n};\n\n/**\n * Parent component for any content rendered inside an app skeleton,\n * centering it horizontally and vertically\n * and allowing vertical overflow to be scrolled.\n */\nexport function SkeletonContent({\n  children,\n}: SkeletonContentProps): React.ReactElement {\n  return (\n    <div className={classes('main', 'skeleton')}>\n      <div className=\"skeleton-content\">\n        <div className=\"skeleton-content-inner\">{children}</div>\n      </div>\n    </div>\n  );\n}\n","import { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n\nimport './stylesheet.scss';\n\n/**\n * Renders the top of a warning,\n * with an icon and a title saying 'Warning'\n */\nexport default function WarningHeader(): React.ReactElement {\n  return (\n    <div className=\"warning-header\">\n      <FontAwesomeIcon icon={faExclamationCircle} />\n      <h4>Warning</h4>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport WarningHeader from '../WarningHeader';\n\nimport './stylesheet.scss';\n\n/**\n * Renders a notification that schedule data is not persistent\n * and that the user can't use the application.\n */\nexport function renderDataNotPersistentNotification(\n  props: DataNotPersistentNotificationProps\n): React.ReactElement {\n  return <DataNotPersistentNotification {...props} />;\n}\n\nexport type DataNotPersistentNotificationProps = {\n  onAccept: () => void;\n};\n\n/**\n * Content that is shown in the modal when `showDataNotPersistentNotification`\n * is called\n */\nexport function DataNotPersistentNotification({\n  onAccept,\n}: DataNotPersistentNotificationProps): React.ReactElement {\n  return (\n    <div className=\"data-not-persistent-notification\">\n      <WarningHeader />\n      <p>\n        Your browser doesn&apos;t support storing data using local storage,\n        which gt-scheduler relies on to persist schedule data between sessions.\n      </p>\n      <p>Reasons this might be the case:</p>\n      <ul>\n        <li>\n          You&apos;re using an outdated browser that doesn&apos;t support local\n          storage\n        </li>\n        <li>You&apos;re using Mobile Safari with private mode enabled</li>\n        <li>You&apos;re using Safari with cookies disabled</li>\n      </ul>\n      <p>\n        <strong>\n          Would you like to continue using gt-scheduler? Your schedules will not\n          be saved once you close this tab.\n        </strong>\n      </p>\n      <button\n        className=\"data-not-persistent-notification--button\"\n        onClick={onAccept}\n        type=\"button\"\n      >\n        Accept\n      </button>\n    </div>\n  );\n}\n","import { Immutable } from 'immer';\nimport { useState } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\n\nimport { renderDataNotPersistentNotification } from '../../components/DataNotPersistentNotification';\nimport { LoadingState } from '../../types';\nimport { AnyScheduleData } from '../types';\n\nexport const SCHEDULE_DATA_LOCAL_STORAGE_KEY = 'schedule-data';\n\ntype HookResult = {\n  rawScheduleData: Immutable<AnyScheduleData> | null;\n  setRawScheduleData: (\n    next:\n      | ((current: AnyScheduleData | null) => AnyScheduleData | null)\n      | AnyScheduleData\n  ) => void;\n};\n\n/**\n * Gets the current schedule data from local storage.\n * Do not call this function in a non-root component;\n * it should only be called once in a root component (i.e. <App>).\n */\n// eslint-disable-next-line max-len\nexport default function useRawScheduleDataFromStorage(): LoadingState<HookResult> {\n  const [rawScheduleData, setRawScheduleData, { isPersistent }] =\n    useLocalStorageState<AnyScheduleData | null>(\n      SCHEDULE_DATA_LOCAL_STORAGE_KEY,\n      null\n    );\n\n  const [userAcceptedNonPersistence, setUserAcceptedNonPersistence] =\n    useState(false);\n\n  // If the state isn't persistent, then return an error to alert the user\n  // requiring them to acknowledge this before continuing\n  if (!isPersistent && !userAcceptedNonPersistence) {\n    return {\n      type: 'custom',\n      contents: renderDataNotPersistentNotification({\n        onAccept: (): void => {\n          setUserAcceptedNonPersistence(true);\n        },\n      }),\n    };\n  }\n\n  return {\n    type: 'loaded',\n    result: {\n      rawScheduleData,\n      setRawScheduleData,\n    },\n  };\n}\n\n/**\n * Imperative version of `useRawScheduleDataFromStorage`;\n * just gets the current value from local storage.\n */\nexport function getCurrentRawScheduleFromStorage(): AnyScheduleData | null {\n  const rawData = window.localStorage.getItem(SCHEDULE_DATA_LOCAL_STORAGE_KEY);\n  if (rawData === null) return null;\n  return JSON.parse(rawData) as AnyScheduleData;\n}\n","import { useEffect } from 'react';\n\nimport { NonEmptyArray, LoadingState } from '../../types';\n\ntype HookResult = {\n  currentTerm: string;\n};\n\n/**\n * Ensures that there is a valid current term selected.\n * If the current term isn't valid (i.e. empty or not in the `terms` array),\n * then it is set to the most recent term (which is the first item in `terms`).\n */\nexport default function useEnsureValidTerm({\n  terms,\n  setTerm,\n  currentTermRaw,\n}: {\n  terms: NonEmptyArray<string>;\n  setTerm: (next: string) => void;\n  currentTermRaw: string;\n}): LoadingState<HookResult> {\n  // Set the term to be the first one if it is unset or no longer valid.\n  useEffect(() => {\n    const mostRecentTerm = terms[0];\n    const correctedTerm = !isValidTerm(currentTermRaw, terms)\n      ? mostRecentTerm\n      : currentTermRaw;\n\n    if (correctedTerm !== currentTermRaw) {\n      setTerm(correctedTerm);\n    }\n  }, [currentTermRaw, terms, setTerm]);\n\n  if (!isValidTerm(currentTermRaw, terms)) {\n    return { type: 'loading' };\n  }\n\n  return {\n    type: 'loaded',\n    result: {\n      currentTerm: currentTermRaw,\n    },\n  };\n}\n\n/**\n * Determines if the given term is considered \"valid\";\n * helps to recover from invalid cookie values if possible.\n */\nexport function isValidTerm(term: string, terms: string[]): boolean {\n  return term !== '' && term !== 'undefined' && terms.includes(term);\n}\n","import {\n  generateScheduleVersionId,\n  Version1ScheduleData,\n  Version2ScheduleData,\n  Version2ScheduleVersion,\n  Version2TermScheduleData,\n} from '../types';\n\n/**\n * Migrates from version 1 to version 2 data,\n * performing the main 3 operations:\n * - generating random IDs for each schedule version\n * - generating 'createdAt' fields for each schedule version\n * - dropping all `currentVersion` and `currentTerm` fields\n */\nexport default function migrate1To2(\n  version1: Version1ScheduleData\n): Version2ScheduleData {\n  // Fix every term data\n  const newData: Version2ScheduleData = {\n    version: 2,\n    terms: {},\n  };\n\n  Object.entries(version1.terms).forEach(([term, version1TermData]) => {\n    // Create values for the 'createdAt' fields on each version\n    // based on the time that versions were migrated,\n    // plus an offset depending on their index in the versions array.\n    // This lets the versions be sorted in the same order as before\n    // when using 'createdAt' as the sort key.\n    const baseCreatedAtTime = new Date();\n    const versionIdxMsOffset = 1_000;\n    const makeCreatedAt = (idx: number): Date =>\n      new Date(baseCreatedAtTime.getTime() + versionIdxMsOffset * idx);\n\n    const version2TermData: Version2TermScheduleData = {\n      versions: {},\n    };\n\n    // Create updated schedule versions\n    const newEntries = version1TermData.versions.map<\n      [string, Version2ScheduleVersion]\n    >((version1ScheduleVersion, idx) => {\n      const id = generateScheduleVersionId();\n      const createdAt = makeCreatedAt(idx);\n      const version2ScheduleVersion: Version2ScheduleVersion = {\n        name: version1ScheduleVersion.name,\n        createdAt: createdAt.toISOString(),\n        schedule: version1ScheduleVersion.schedule,\n      };\n\n      return [id, version2ScheduleVersion];\n    });\n\n    version2TermData.versions = Object.fromEntries(newEntries);\n    newData.terms[term] = version2TermData;\n  });\n\n  return newData;\n}\n","export type TermData = {\n  desiredCourses: string[];\n  pinnedCrns: string[];\n  excludedCrns: string[];\n  colorMap: Record<string, string>;\n  sortingOptionIndex: number;\n};\n\nexport const defaultTermData: TermData = {\n  desiredCourses: [],\n  pinnedCrns: [],\n  excludedCrns: [],\n  colorMap: {},\n  sortingOptionIndex: 0,\n};\n","import { ErrorWithFields } from '../../log';\nimport { NonEmptyArray } from '../../types';\nimport { TermData, defaultTermData } from './types';\n\nexport type TermDataParseResult =\n  | { type: 'error'; error: Error }\n  | { type: 'parsed'; parsed: unknown };\n\n/**\n * Parses raw term data from its string representation to the parsed JSON\n */\nexport function parseTermData(rawTermData: string): TermDataParseResult {\n  if (rawTermData === '' || rawTermData === 'undefined') {\n    return {\n      type: 'error',\n      error: new ErrorWithFields({\n        message: 'raw term data was empty or \"undefined\"',\n        fields: {\n          rawTermData,\n        },\n      }),\n    };\n  }\n\n  try {\n    return { type: 'parsed', parsed: JSON.parse(rawTermData) };\n  } catch (err) {\n    return {\n      type: 'error',\n      error: new ErrorWithFields({\n        message: 'raw term data was not valid JSON data',\n        source: err,\n        fields: {\n          rawTermData,\n        },\n      }),\n    };\n  }\n}\n\nexport type TermDataValidationResult =\n  | { type: 'error'; errors: NonEmptyArray<Error>; fallback: TermData }\n  | { type: 'valid'; termData: TermData };\n\nconst isStringArray = (field: unknown): field is string[] =>\n  field != null &&\n  Array.isArray(field) &&\n  field.every((elem) => typeof elem === 'string');\n\nconst isStringStringMap = (field: unknown): field is Record<string, string> =>\n  typeof field === 'object' &&\n  field != null &&\n  Object.keys(field).every((elem) => typeof elem === 'string') &&\n  Object.values(field).every((elem) => typeof elem === 'string');\n\n/**\n * Validates parsed term data, ensuring that it is of the expected shape\n */\nexport function validateTermData(\n  termData: unknown,\n  rawTermData?: string\n): TermDataValidationResult {\n  try {\n    if (\n      termData == null ||\n      typeof termData !== 'object' ||\n      Array.isArray(termData)\n    ) {\n      return {\n        type: 'error',\n        fallback: defaultTermData,\n        errors: [\n          new ErrorWithFields({\n            message: 'term data is the wrong type',\n            fields: {\n              rawTermData,\n              termDataType: typeof termData,\n              termData,\n            },\n          }),\n        ],\n      };\n    }\n\n    const validTermData = { ...defaultTermData };\n\n    // Ensure each field is valid, copying them as we go\n    const termDataAsRecord = termData as Record<string, unknown>;\n    const fieldValidationErrors: Error[] = [];\n    const {\n      desiredCourses,\n      pinnedCrns,\n      excludedCrns,\n      colorMap,\n      sortingOptionIndex,\n    } = termDataAsRecord;\n\n    if (isStringArray(desiredCourses)) {\n      validTermData.desiredCourses = desiredCourses;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.desiredCourses was not a string array',\n          fields: {\n            rawTermData,\n            termData,\n            desiredCourses,\n            fallback: validTermData.desiredCourses,\n          },\n        })\n      );\n    }\n\n    if (isStringArray(pinnedCrns)) {\n      validTermData.pinnedCrns = pinnedCrns;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.pinnedCrns was not a string array',\n          fields: {\n            rawTermData,\n            termData,\n            pinnedCrns,\n            fallback: validTermData.pinnedCrns,\n          },\n        })\n      );\n    }\n\n    if (isStringArray(excludedCrns)) {\n      validTermData.excludedCrns = excludedCrns;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.excludedCrns was not a string array',\n          fields: {\n            rawTermData,\n            termData,\n            excludedCrns,\n            fallback: validTermData.excludedCrns,\n          },\n        })\n      );\n    }\n\n    if (isStringStringMap(colorMap)) {\n      validTermData.colorMap = colorMap;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.colorMap was not a string/string map',\n          fields: {\n            rawTermData,\n            termData,\n            colorMap,\n            fallback: validTermData.colorMap,\n          },\n        })\n      );\n    }\n\n    if (typeof sortingOptionIndex === 'number') {\n      validTermData.sortingOptionIndex = sortingOptionIndex;\n    } else {\n      fieldValidationErrors.push(\n        new ErrorWithFields({\n          message: 'termData.sortingOptionIndex was not a number',\n          fields: {\n            rawTermData,\n            termData,\n            sortingOptionIndex,\n            fallback: validTermData.sortingOptionIndex,\n          },\n        })\n      );\n    }\n\n    if (fieldValidationErrors.length > 0) {\n      return {\n        type: 'error',\n        fallback: validTermData,\n        errors: fieldValidationErrors as NonEmptyArray<Error>,\n      };\n    }\n\n    return { type: 'valid', termData: validTermData };\n  } catch (err) {\n    if (err instanceof Error) {\n      return {\n        type: 'error',\n        fallback: defaultTermData,\n        errors: [\n          new ErrorWithFields({\n            message: 'an unexpected error occurred when parsing term data',\n            source: err,\n            fields: {\n              rawTermData,\n            },\n          }),\n        ],\n      };\n    }\n\n    return {\n      type: 'error',\n      fallback: defaultTermData,\n      errors: [\n        new ErrorWithFields({\n          message: 'an unexpected error occurred when parsing term data',\n          fields: {\n            rawTermData,\n            originalError: err,\n          },\n        }),\n      ],\n    };\n  }\n}\n","import { parseTermData, validateTermData } from '../legacy/validation';\nimport { softError, ErrorWithFields } from '../../log';\nimport { isTerm } from '../../utils/semesters';\nimport { Version1ScheduleData, Version1TermScheduleData } from '../types';\n\nexport const defaultVersion1ScheduleData: Version1ScheduleData = {\n  terms: {},\n  currentTerm: '',\n  version: 1,\n};\n\n/**\n * Attempts to \"migrate\" the existing data from the legacy cookie format\n * to version 1 of the schedule data. The output of this function should be\n * safe to migrate to further versions, if applicable. If allCookies\n * is an empty record, then this function returns the default v1 schedule data.\n * @param allCookies - the result of `Cookies.get()` with no arguments --\n * a record of all cookie keys -> values\n */\nexport default function migrateCookiesTo1(\n  allCookies: Record<string, string>\n): Version1ScheduleData {\n  const currentTerm = allCookies['term'] ?? '';\n\n  // Create a number to correlate error events\n  const userNumber = Math.floor(Math.random() * 100000);\n\n  // Collect the values of all cookies that look like term schedule data:\n  const terms: Record<string, Version1TermScheduleData> = {};\n  Object.entries(allCookies).forEach(([cookieKey, cookieValue]): void => {\n    if (isTerm(cookieKey)) {\n      // Try to parse and validate the term information\n      const parseResult = parseTermData(cookieValue);\n      if (parseResult.type === 'error') {\n        softError(\n          new ErrorWithFields({\n            message: 'parsing error for guessed term data when migrating',\n            source: parseResult.error,\n            fields: {\n              cookieKey,\n              cookieValue,\n              userNumber,\n            },\n          })\n        );\n        return;\n      }\n\n      const validateResult = validateTermData(parseResult.parsed, cookieValue);\n      if (validateResult.type === 'error') {\n        validateResult.errors.forEach((err) => {\n          softError(\n            new ErrorWithFields({\n              message: 'validation error for guessed term data when migrating',\n              source: err,\n              fields: {\n                cookieKey,\n                cookieValue,\n                userNumber,\n              },\n            })\n          );\n        });\n\n        terms[cookieKey] = {\n          versions: [{ name: 'Primary', schedule: validateResult.fallback }],\n          currentIndex: 0,\n        };\n      } else {\n        terms[cookieKey] = {\n          versions: [{ name: 'Primary', schedule: validateResult.termData }],\n          currentIndex: 0,\n        };\n      }\n    }\n  });\n\n  return {\n    terms,\n    currentTerm,\n    version: 1,\n  };\n}\n","import Cookies from 'js-cookie';\n\nimport { softError, ErrorWithFields } from '../../log';\nimport {\n  AnyScheduleData,\n  ScheduleData,\n  Version1ScheduleDataOrNewer,\n  Version2ScheduleDataOrNewer,\n} from '../types';\nimport migrate1To2 from './1to2';\nimport migrateCookiesTo1, { defaultVersion1ScheduleData } from './cookiesTo1';\n\n/**\n * Attempts to migrate the given \"raw\" schedule data\n * (which can be of any version) to the latest version,\n * automatically applying pre-defined migrations between versions.\n * If this function fails, it will throw an error; otherwise,\n * it returns an instance of the schedule data for the latest version\n */\nexport default function migrateScheduleData(\n  rawScheduleData: AnyScheduleData | null\n): ScheduleData {\n  // Having the `scheduleData` be `null`counts as a \"special\" migration\n  // from the legacy storage method (if it exists).\n  let scheduleDataVersion1OrNewer: Version1ScheduleDataOrNewer;\n  if (rawScheduleData === null) {\n    try {\n      const allCookies = Cookies.get();\n      scheduleDataVersion1OrNewer = migrateCookiesTo1(allCookies);\n    } catch (err) {\n      // An error occurred: fall back to the default data & report it\n      softError(\n        new ErrorWithFields({\n          source: err,\n          message: 'an error occurred when sourcing schedule data from cookies',\n        })\n      );\n      scheduleDataVersion1OrNewer = defaultVersion1ScheduleData;\n    }\n  } else {\n    scheduleDataVersion1OrNewer = rawScheduleData;\n  }\n\n  let scheduleDataVersion2OrNewer: Version2ScheduleDataOrNewer;\n  if (scheduleDataVersion1OrNewer.version === 1) {\n    scheduleDataVersion2OrNewer = migrate1To2(scheduleDataVersion1OrNewer);\n  } else {\n    scheduleDataVersion2OrNewer = scheduleDataVersion1OrNewer;\n  }\n\n  return scheduleDataVersion2OrNewer;\n}\n","import { useCallback } from 'react';\n\nimport useLocalStorageNoSync from '../../hooks/useLocalStorageNoSync';\n\nexport const UI_STATE_LOCAL_STORAGE_KEY = 'ui-state';\n\nexport interface UIState {\n  currentTerm: string;\n  versionStates: Record<string, VersionUIState>;\n}\n\nexport const defaultUIState: UIState = {\n  currentTerm: '',\n  versionStates: {},\n};\n\nexport interface VersionUIState {\n  currentVersion: string;\n}\n\ntype HookResult = {\n  currentTerm: string;\n  setTerm: (next: string) => void;\n  currentVersion: string;\n  setVersion: (next: string) => void;\n};\n\n/**\n * Gets the current UI state from local storage.\n * Do not call this function in a non-root component;\n * it should only be called once in a root component (i.e. <App>).\n * Moreover, unlike the local storage version of the app data,\n * this **does not** sync between tabs.\n * This is deliberate, as it allows opening up multiple tabs\n * with different schedules if desired,\n * but still have the app resume to the last viewed schedule when opened again.\n */\nexport default function useUIStateFromStorage(): HookResult {\n  const [{ currentTerm, versionStates }, setUIState] = useLocalStorageNoSync(\n    UI_STATE_LOCAL_STORAGE_KEY,\n    defaultUIState\n  );\n\n  const setTerm = useCallback(\n    (next: string) => {\n      setUIState((current) => {\n        return {\n          ...current,\n          currentTerm: next,\n        };\n      });\n    },\n    [setUIState]\n  );\n\n  const currentVersion = versionStates[currentTerm]?.currentVersion ?? '';\n  const setVersion = useCallback(\n    (next: string) => {\n      setUIState((current) => {\n        return {\n          ...current,\n          versionStates: {\n            ...current.versionStates,\n            [current.currentTerm]: {\n              currentVersion: next,\n            },\n          },\n        };\n      });\n    },\n    [setUIState]\n  );\n\n  return {\n    currentTerm,\n    setTerm,\n    currentVersion,\n    setVersion,\n  };\n}\n","import { useState } from 'react';\n\nimport { ErrorWithFields, softError } from '../log';\n\nexport type HookResult<T> = [T, (value: T | ((curr: T) => T)) => void];\n\n/**\n * From https://usehooks.com/useLocalStorage/.\n * Similar to `use-local-storage-state` (which should be preferred),\n * except it does not sync the state between browser tabs.\n */\nexport default function useLocalStorageNoSync<T>(\n  key: string,\n  initialValue: T\n): HookResult<T> {\n  const [storedValue, setStoredValue] = useState<T>(() => {\n    let item: string | null = null;\n    try {\n      item = window.localStorage.getItem(key);\n      return item ? (JSON.parse(item) as T) : initialValue;\n    } catch (error) {\n      softError(\n        new ErrorWithFields({\n          message: 'useLocalStorageNoSync load local storage failed',\n          source: error,\n          fields: {\n            key,\n          },\n        })\n      );\n      return initialValue;\n    }\n  });\n\n  const setValue = (value: T | ((val: T) => T)): void => {\n    try {\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      setStoredValue(valueToStore);\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      softError(\n        new ErrorWithFields({\n          message: 'useLocalStorageNoSync setValue call failed',\n          source: error,\n          fields: {\n            key,\n          },\n        })\n      );\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import { Immutable, castImmutable, castDraft } from 'immer';\nimport { useCallback, useEffect, useState } from 'react';\n\nimport { SignedIn } from '../../contexts/account';\nimport { ErrorWithFields, softError } from '../../log';\nimport {\n  LoadingState,\n  LoadingStateCustom,\n  LoadingStateError,\n} from '../../types';\nimport { db, isAuthEnabled, schedulesCollection } from '../firebase';\nimport migrateScheduleData from '../migrations';\nimport { AnyScheduleData, defaultScheduleData, ScheduleData } from '../types';\nimport { getCurrentRawScheduleFromStorage } from './useRawScheduleDataFromStorage';\n\ntype HookResult = {\n  rawScheduleData: Immutable<AnyScheduleData> | null;\n  setRawScheduleData: (\n    next:\n      | ((current: AnyScheduleData | null) => AnyScheduleData | null)\n      | AnyScheduleData\n  ) => void;\n};\n\ntype ScheduleDataState = Loading | NonExistant | Exists;\ntype Loading = {\n  type: 'loading';\n};\ntype NonExistant = {\n  type: 'nonExistant';\n};\ntype Exists = {\n  type: 'exists';\n  data: AnyScheduleData;\n};\n\n/**\n * Gets the current schedule data from Firebase.\n * Do not call this function in a non-root component;\n * it should only be called once in a root component (i.e. <App>).\n */\nexport default function useRawScheduleDataFromFirebase(\n  account: SignedIn\n): LoadingState<HookResult> {\n  const [scheduleData, setScheduleData] = useState<ScheduleDataState>({\n    type: 'loading',\n  });\n  const [permanentError, setPermanentError] = useState<\n    LoadingStateError | LoadingStateCustom | null\n  >(null);\n  useEffect(() => {\n    if (!isAuthEnabled) return undefined;\n\n    const removeSnapshotListener = schedulesCollection\n      .doc(account.id)\n      .onSnapshot(\n        {\n          // Ignore metadata changes\n          includeMetadataChanges: false,\n        },\n        (doc) => {\n          const data = doc.data();\n          if (data == null) {\n            setScheduleData({ type: 'nonExistant' });\n          } else {\n            setScheduleData({\n              type: 'exists',\n              data: doc.data() as AnyScheduleData,\n            });\n          }\n        }\n      );\n    return (): void => removeSnapshotListener();\n  }, [account.id]);\n\n  const setScheduleDataPersistent = useCallback(\n    (\n      next:\n        | ((current: AnyScheduleData | null) => AnyScheduleData | null)\n        | AnyScheduleData\n    ): void => {\n      let nextScheduleData;\n      if (typeof next === 'function') {\n        let currentScheduleData;\n        if (scheduleData.type === 'exists') {\n          currentScheduleData = scheduleData.data;\n        } else {\n          currentScheduleData = null;\n        }\n        nextScheduleData = next(currentScheduleData);\n      } else {\n        nextScheduleData = next;\n      }\n      if (nextScheduleData === null) return;\n\n      // Eagerly set the schedule data here as well.\n      // It would be okay to wait until Firebase updates the state for us,\n      // (which it will do, even before the network calls are made),\n      // but this allows a window where state can react based on stale state.\n      setScheduleData({ type: 'exists', data: nextScheduleData });\n\n      schedulesCollection\n        .doc(account.id)\n        .set(nextScheduleData)\n        .catch((err) => {\n          softError(\n            new ErrorWithFields({\n              message: 'error when updating remote document',\n              source: err,\n              fields: {\n                accountId: account.id,\n              },\n            })\n          );\n        });\n    },\n    [account.id, scheduleData]\n  );\n\n  // Perform a transaction if the type is non-existent,\n  // trying to pull existing data from local storage\n  // (migrating it as needed),\n  // and storing it in Firebase.\n  // This serves to provide the initial account data.\n  useEffect(() => {\n    if (!isAuthEnabled) return;\n\n    if (scheduleData.type === 'nonExistant') {\n      // Imperatively get the latest migrated data\n      let currentScheduleData: Immutable<ScheduleData>;\n      try {\n        currentScheduleData = getCurrentScheduleData() ?? defaultScheduleData;\n      } catch (err) {\n        softError(\n          new ErrorWithFields({\n            message:\n              'failed to imperatively get current schedule data during account seeding',\n            source: err,\n            fields: {\n              accountId: account.id,\n            },\n          })\n        );\n        currentScheduleData = defaultScheduleData;\n      }\n\n      // Start the transaction\n      db.runTransaction(async (transaction) => {\n        const currentDoc = await transaction.get(\n          schedulesCollection.doc(account.id)\n        );\n        if (currentDoc.exists) return;\n        transaction.set(\n          schedulesCollection.doc(account.id),\n          castDraft(currentScheduleData)\n        );\n      }).catch((err) => {\n        // Send the error to Sentry\n        const error = new ErrorWithFields({\n          message: 'an error occurred while initializing account schedule data',\n          source: err,\n          fields: {\n            account: account.id,\n          },\n        });\n        softError(error);\n\n        // Report the error to the user\n        setPermanentError({\n          type: 'error',\n          error,\n          stillLoading: false,\n          overview: String(err),\n        });\n      });\n    }\n  }, [account.id, scheduleData.type]);\n\n  // If this hook is running and auth is not enabled,\n  // then something is wrong with the state.\n  // Show an error.\n  if (!isAuthEnabled) {\n    return {\n      type: 'error',\n      error: new ErrorWithFields({\n        message: 'cannot obtain data from firebase: authentication is disabled',\n      }),\n      stillLoading: false,\n      overview: 'authentication is not enabled',\n    };\n  }\n\n  if (permanentError !== null) {\n    return permanentError;\n  }\n\n  if (scheduleData.type === 'loading' || scheduleData.type === 'nonExistant') {\n    return { type: 'loading' };\n  }\n\n  return {\n    type: 'loaded',\n    result: {\n      rawScheduleData: castImmutable(scheduleData.data),\n      setRawScheduleData: setScheduleDataPersistent,\n    },\n  };\n}\n\nfunction getCurrentScheduleData(): ScheduleData | null {\n  const currentRawSchedule = getCurrentRawScheduleFromStorage();\n  if (currentRawSchedule === null) return null;\n  return migrateScheduleData(currentRawSchedule);\n}\n","import React from 'react';\nimport { Immutable, Draft, castDraft } from 'immer';\n\nimport { Oscar } from '../../data/beans';\nimport useDownloadOscarData from '../../data/hooks/useDownloadOscarData';\nimport useDownloadTerms from '../../data/hooks/useDownloadTerms';\nimport { NonEmptyArray } from '../../types';\nimport LoadingDisplay from '../LoadingDisplay';\nimport { SkeletonContent, AppSkeleton, AppSkeletonProps } from '../App/content';\nimport {\n  AnyScheduleData,\n  ScheduleData,\n  ScheduleVersion,\n  TermScheduleData,\n} from '../../data/types';\nimport useRawScheduleDataFromStorage from '../../data/hooks/useRawScheduleDataFromStorage';\nimport useExtractSchedule from '../../data/hooks/useExtractScheduleVersion';\nimport useExtractTermScheduleData from '../../data/hooks/useExtractTermScheduleData';\nimport useEnsureValidTerm from '../../data/hooks/useEnsureValidTerm';\nimport useScheduleDataProducer from '../../data/hooks/useScheduleDataProducer';\nimport useMigrateScheduleData from '../../data/hooks/useMigrateScheduleData';\nimport useUIStateFromStorage from '../../data/hooks/useUIStateFromStorage';\nimport { AccountContextValue, SignedIn } from '../../contexts/account';\nimport useFirebaseAuth from '../../data/hooks/useFirebaseAuth';\nimport useRawScheduleDataFromFirebase from '../../data/hooks/useRawScheduleDataFromFirebase';\n\n// Each of the components in this file is a \"stage\" --\n// a component that takes in a render function for its `children` prop\n// that it uses to pass in the results of the stage on to the next one.\n// If a stage is loading or has an error,\n// then it renders its own loading/error view\n// and does not call its `children` prop,\n// effectively \"stopping\" the loading chain at that stage.\n//\n// The problem that this design solves is needing to perform\n// a series of operations, whether data fetching or maintaining invariants\n// (like having a valid current term/version),\n// where an operation depends on the results of previous action(s).\n// For example, ensuring that the current term is valid\n// depends on fetching the list of terms from the crawler's index,\n// so having them be two separate stages naturally encodes this dependency.\n// It also lets us stop rendering the app when data is still loading,\n// and instead show a partially interactive \"skeleton\".\n\n// Each Stage includes this prop,\n// which passes through props\n// to the underlying `<AppSkeleton>` component.\n// It can be used to show partial interactivity\n// while the app is loading\n// (See `<AppSkeleton>` for more info on the possible states).\nexport type StageSkeletonProps = Omit<AppSkeletonProps, 'children'>;\n\nexport type StageLoadUIStateProps = {\n  children: (props: {\n    currentTerm: string;\n    setTerm: (next: string) => void;\n    currentVersion: string;\n    setVersion: (next: string) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Loads in the UI State (current term,\n * current schedule version for the current term)\n * from local storage.\n * Unlike the local storage version of the app data,\n * this **does not** sync between tabs.\n * This is deliberate, as it allows opening up multiple tabs\n * with different schedules if desired,\n * but still have the app resume to the last viewed schedule when opened again.\n */\nexport function StageLoadUIState({\n  children,\n}: StageLoadUIStateProps): React.ReactElement {\n  const uiState = useUIStateFromStorage();\n  return <>{children({ ...uiState })}</>;\n}\n\nexport type StageEnsureValidTermProps = {\n  skeletonProps?: StageSkeletonProps;\n  terms: NonEmptyArray<string>;\n  currentTermRaw: string;\n  setTerm: (next: string) => void;\n  children: (props: { currentTerm: string }) => React.ReactNode;\n};\n\n/**\n * Ensures that there is a valid current term selected.\n * If the current term isn't valid (i.e. empty or not in the `terms` array),\n * then it is set to the most recent term (which is the first item in `terms`).\n */\nexport function StageEnsureValidTerm({\n  skeletonProps,\n  terms,\n  currentTermRaw,\n  setTerm,\n  children,\n}: StageEnsureValidTermProps): React.ReactElement {\n  const loadingState = useEnsureValidTerm({ terms, currentTermRaw, setTerm });\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay state={loadingState} name=\"current term\" />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ ...loadingState.result })}</>;\n}\n\nexport type StageLoadRawScheduleDataFromStorageProps = {\n  skeletonProps?: StageSkeletonProps;\n  children: (props: {\n    rawScheduleData: Immutable<AnyScheduleData> | null;\n    setRawScheduleData: (\n      next:\n        | ((current: AnyScheduleData | null) => AnyScheduleData | null)\n        | AnyScheduleData\n    ) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Handles loading the raw local schedule data from local storage.\n * Renders a disabled header & attribution footer even when loading.\n */\nexport function StageLoadRawScheduleDataFromStorage({\n  skeletonProps,\n  children,\n}: StageLoadRawScheduleDataFromStorageProps): React.ReactElement {\n  const loadingState = useRawScheduleDataFromStorage();\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay state={loadingState} name=\"local schedule data\" />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ ...loadingState.result })}</>;\n}\n\nexport type StageMigrateScheduleDataProps = {\n  skeletonProps?: StageSkeletonProps;\n  rawScheduleData: Immutable<AnyScheduleData> | null;\n  setRawScheduleData: (\n    next:\n      | ((current: AnyScheduleData | null) => AnyScheduleData | null)\n      | AnyScheduleData\n  ) => void;\n  children: (props: {\n    scheduleData: Immutable<ScheduleData>;\n    setScheduleData: (\n      next: ((current: ScheduleData) => ScheduleData) | ScheduleData\n    ) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Handles migrating the raw schedule data as needed to the latest version.\n */\nexport function StageMigrateScheduleData({\n  skeletonProps,\n  rawScheduleData,\n  setRawScheduleData,\n  children,\n}: StageMigrateScheduleDataProps): React.ReactElement {\n  const loadingState = useMigrateScheduleData({\n    rawScheduleData: castDraft(rawScheduleData),\n    setRawScheduleData,\n  });\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay\n            state={loadingState}\n            name=\"schema migrations to schedule data\"\n          />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ ...loadingState.result })}</>;\n}\n\nexport type StageLoadRawScheduleDataHybridProps = {\n  skeletonProps?: StageSkeletonProps;\n  accountState: AccountContextValue;\n  children: (props: {\n    rawScheduleData: Immutable<AnyScheduleData> | null;\n    setRawScheduleData: (\n      next:\n        | ((current: AnyScheduleData | null) => AnyScheduleData | null)\n        | AnyScheduleData\n    ) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Handles loading the schedule data from either Firebase or local storage\n * depending on the current account state.\n */\nexport function StageLoadRawScheduleDataHybrid({\n  skeletonProps,\n  accountState,\n  children,\n}: StageLoadRawScheduleDataHybridProps): React.ReactElement {\n  if (accountState.type === 'signedIn') {\n    return (\n      <StageLoadRawScheduleDataFromFirebase\n        skeletonProps={skeletonProps}\n        accountState={accountState}\n      >\n        {children}\n      </StageLoadRawScheduleDataFromFirebase>\n    );\n  }\n\n  return (\n    <StageLoadRawScheduleDataFromStorage skeletonProps={skeletonProps}>\n      {children}\n    </StageLoadRawScheduleDataFromStorage>\n  );\n}\n\nexport type StageLoadRawScheduleDataFromFirebaseProps = {\n  skeletonProps?: StageSkeletonProps;\n  accountState: SignedIn;\n  children: (props: {\n    rawScheduleData: Immutable<AnyScheduleData> | null;\n    setRawScheduleData: (\n      next:\n        | ((current: AnyScheduleData | null) => AnyScheduleData | null)\n        | AnyScheduleData\n    ) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Handles loading the schedule data from Firebase,\n * handling uploading initial data if the user has no document.\n * Renders a disabled header & attribution footer even when loading.\n */\nexport function StageLoadRawScheduleDataFromFirebase({\n  skeletonProps,\n  accountState,\n  children,\n}: StageLoadRawScheduleDataFromFirebaseProps): React.ReactElement {\n  const loadingState = useRawScheduleDataFromFirebase(accountState);\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay\n            state={loadingState}\n            name=\"schedule data from the cloud\"\n          />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ ...loadingState.result })}</>;\n}\n\nexport type StageLoadAccountProps = {\n  skeletonProps?: StageSkeletonProps;\n  children: (props: { accountState: AccountContextValue }) => React.ReactNode;\n};\n\n/**\n * Handles loading the user login state\n * (account state from Firebase Authentication).\n * Renders a disabled header & attribution footer even when loading.\n */\nexport function StageLoadAccount({\n  skeletonProps,\n  children,\n}: StageLoadAccountProps): React.ReactElement {\n  const accountState = useFirebaseAuth();\n\n  if (accountState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay state={accountState} name=\"account\" />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ accountState: accountState.result })}</>;\n}\n\nexport type StageCreateScheduleDataProducerProps = {\n  setScheduleData: (\n    next: ((current: ScheduleData) => ScheduleData) | ScheduleData\n  ) => void;\n  children: (props: {\n    // This is similar to a function like `(next: ScheduleData) => void`\n    // in that it lets callers update the schedule data, but it uses Immer.js\n    // to provide a mutable \"draft\" that allows callers to treat\n    // the parameter given in the callback as if it can be directly mutated.\n    // This saves verbose code that is normally used to deeply clone objects\n    // before changing them whenever immutable state updates are needed\n    // (which is common in React apps).\n    // Read more about it here: https://immerjs.github.io/immer/\n    //\n    // This function allows the schedule data to be edited in 1 of 2 ways:\n    // 1. the draft parameter is mutated, and the function returns nothing/void\n    // 2. the draft parameter is not mutated\n    //    (it can still be used, just not mutated)\n    //    and the function returns the new state to use.\n    //    This is similar to a traditional setState callback\n    updateScheduleData: (\n      applyDraft: (draft: Draft<ScheduleData>) => void | Immutable<ScheduleData>\n    ) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Creates the `updateScheduleData` Immer producer\n * from the `setScheduleData` setter.\n * The producer is used to more easily modify state.\n */\nexport function StageCreateScheduleDataProducer({\n  setScheduleData,\n  children,\n}: StageCreateScheduleDataProducerProps): React.ReactElement {\n  const { updateScheduleData } = useScheduleDataProducer({ setScheduleData });\n  return <>{children({ updateScheduleData })}</>;\n}\n\nexport type StageLoadTermsProps = {\n  skeletonProps?: StageSkeletonProps;\n  children: (props: { terms: NonEmptyArray<string> }) => React.ReactNode;\n};\n\n/**\n * Handles loading the list of terms from the crawler's index upon first mount,\n * showing loading and error states as needed.\n * Renders a disabled header & attribution footer even when loading.\n */\nexport function StageLoadTerms({\n  skeletonProps,\n  children,\n}: StageLoadTermsProps): React.ReactElement {\n  const loadingState = useDownloadTerms();\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay state={loadingState} name=\"list of current terms\" />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ terms: loadingState.result })}</>;\n}\n\nexport type StageExtractTermScheduleDataProps = {\n  skeletonProps?: StageSkeletonProps;\n  currentTerm: string;\n  scheduleData: Immutable<ScheduleData>;\n  updateScheduleData: (\n    applyDraft: (draft: Draft<ScheduleData>) => void | Immutable<ScheduleData>\n  ) => void;\n  children: (props: {\n    termScheduleData: Immutable<TermScheduleData>;\n    // This function allows the term schedule data to be edited in 1 of 2 ways:\n    // 1. the draft parameter is mutated, and the function returns nothing/void\n    // 2. the draft parameter is not mutated\n    //    (it can still be used, just not mutated)\n    //    and the function returns the new state to use.\n    //    This is similar to a traditional setState callback\n    updateTermScheduleData: (\n      applyDraft: (\n        draft: Draft<TermScheduleData>\n      ) => void | Immutable<TermScheduleData>\n    ) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Handles extracting the term schedule data from the parent schedule data,\n * ensuring that the term is valid before rendering its children.\n */\nexport function StageExtractTermScheduleData({\n  skeletonProps,\n  currentTerm,\n  scheduleData,\n  updateScheduleData,\n  children,\n}: StageExtractTermScheduleDataProps): React.ReactElement {\n  const loadingState = useExtractTermScheduleData({\n    currentTerm,\n    scheduleData,\n    updateScheduleData,\n  });\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay\n            state={loadingState}\n            name=\"schedule data for the current term\"\n          />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ ...loadingState.result })}</>;\n}\n\n/**\n * Loads the instance of the `Oscar` bean from the crawled data,\n * showing loading and error states as needed.\n * Renders a disabled header & attribution footer even when loading.\n */\nexport type StageLoadOscarDataProps = {\n  skeletonProps?: StageSkeletonProps;\n  term: string;\n  children: (props: { oscar: Oscar }) => React.ReactNode;\n};\n\nexport function StageLoadOscarData({\n  skeletonProps,\n  term,\n  children,\n}: StageLoadOscarDataProps): React.ReactElement {\n  const loadingState = useDownloadOscarData(term);\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay\n            state={loadingState}\n            name=\"Oscar course data for the current term\"\n          />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ oscar: loadingState.result })}</>;\n}\n\nexport type StageExtractScheduleVersionProps = {\n  skeletonProps?: StageSkeletonProps;\n  currentVersionRaw: string;\n  setVersion: (next: string) => void;\n  termScheduleData: Immutable<TermScheduleData>;\n  updateTermScheduleData: (\n    applyDraft: (\n      draft: Draft<TermScheduleData>\n    ) => void | Immutable<TermScheduleData>\n  ) => void;\n  children: (props: {\n    currentVersion: string;\n    scheduleVersion: Immutable<ScheduleVersion>;\n    // This function allows the schedule version to be edited in 1 of 2 ways:\n    // 1. the draft parameter is mutated, and the function returns nothing/void\n    // 2. the draft parameter is not mutated\n    //    (it can still be used, just not mutated)\n    //    and the function returns the new state to use.\n    //    This is similar to a traditional setState callback\n    updateScheduleVersion: (\n      applyDraft: (\n        draft: Draft<ScheduleVersion>\n      ) => void | Immutable<ScheduleVersion>\n    ) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Handles extracting the schedule version from the parent tern schedule data,\n * ensuring that it is valid before rendering its children.\n */\nexport function StageExtractScheduleVersion({\n  skeletonProps,\n  currentVersionRaw,\n  setVersion,\n  termScheduleData,\n  updateTermScheduleData,\n  children,\n}: StageExtractScheduleVersionProps): React.ReactElement {\n  const loadingState = useExtractSchedule({\n    termScheduleData,\n    updateTermScheduleData,\n    currentVersionRaw,\n    setVersion,\n  });\n\n  if (loadingState.type !== 'loaded') {\n    return (\n      <AppSkeleton {...skeletonProps}>\n        <SkeletonContent>\n          <LoadingDisplay\n            state={loadingState}\n            name=\"current schedule version\"\n          />\n        </SkeletonContent>\n      </AppSkeleton>\n    );\n  }\n\n  return <>{children({ ...loadingState.result })}</>;\n}\n","import { useState, useEffect, useCallback } from 'react';\n\nimport { softError, ErrorWithFields } from '../../log';\nimport {\n  LoadingStateError,\n  LoadingStateCustom,\n  LoadingState,\n} from '../../types';\nimport migrateScheduleData from '../migrations';\nimport {\n  AnyScheduleData,\n  ScheduleData,\n  LATEST_SCHEDULE_DATA_VERSION,\n} from '../types';\n\ntype HookResult = {\n  scheduleData: ScheduleData;\n  setScheduleData: (\n    next: ((current: ScheduleData) => ScheduleData) | ScheduleData\n  ) => void;\n};\n\n/**\n * Performs an asynchronous migration of the schedule data,\n * ensuring that it is of the latest version's shape\n * using the migrations defined in `src/data/migrations.\n */\nexport default function useMigrateScheduleData({\n  rawScheduleData,\n  setRawScheduleData,\n}: {\n  rawScheduleData: AnyScheduleData | null;\n  setRawScheduleData: (\n    next:\n      | ((current: AnyScheduleData | null) => AnyScheduleData | null)\n      | AnyScheduleData\n  ) => void;\n}): LoadingState<HookResult> {\n  const [error, setError] = useState<\n    LoadingStateError | LoadingStateCustom | null\n  >(null);\n\n  useEffect(() => {\n    // Make sure the data needs migrating\n    if (\n      rawScheduleData !== null &&\n      rawScheduleData.version === LATEST_SCHEDULE_DATA_VERSION\n    ) {\n      return;\n    }\n\n    // Check to see if the version is newer than we can handle\n    if (\n      rawScheduleData !== null &&\n      rawScheduleData.version > LATEST_SCHEDULE_DATA_VERSION\n    ) {\n      const err = new ErrorWithFields({\n        message: 'schedule data version is greater than max supported version',\n        fields: {\n          version: rawScheduleData.version,\n          maxSupportedVersion: LATEST_SCHEDULE_DATA_VERSION,\n        },\n      });\n      softError(err);\n      setError({\n        type: 'error',\n        error: err,\n        stillLoading: false,\n        overview: 'could not load stored schedule data: unknown format',\n      });\n      return;\n    }\n\n    try {\n      const updatedScheduleData = migrateScheduleData(rawScheduleData);\n      setRawScheduleData(updatedScheduleData);\n    } catch (err) {\n      // An error occurred: the safe thing to do is report to the user & stop\n      const newError = new ErrorWithFields({\n        source: err,\n        message: 'an error occurred when loading schedule data',\n      });\n\n      softError(newError);\n      setError({\n        type: 'error',\n        error: newError,\n        stillLoading: false,\n        overview: 'could not convert stored schedule data to latest version',\n      });\n    }\n  }, [rawScheduleData, setRawScheduleData]);\n\n  // Create the setScheduleData function as a referentially stable callback.\n  const setScheduleData = useCallback(\n    (next: ((current: ScheduleData) => ScheduleData) | ScheduleData) => {\n      if (typeof next !== 'function') setRawScheduleData(next);\n      else {\n        setRawScheduleData(\n          (currentRaw: AnyScheduleData | null): AnyScheduleData | null => {\n            if (\n              currentRaw === null ||\n              currentRaw.version !== LATEST_SCHEDULE_DATA_VERSION\n            ) {\n              softError(\n                new ErrorWithFields({\n                  message:\n                    \"setScheduleData called when schedule data isn't fully migrated\",\n                  fields: {\n                    versionOrNull: currentRaw?.version ?? null,\n                  },\n                })\n              );\n              return currentRaw;\n            }\n\n            return next(currentRaw);\n          }\n        );\n      }\n    },\n    [setRawScheduleData]\n  );\n\n  if (error !== null) {\n    return error;\n  }\n\n  if (\n    rawScheduleData === null ||\n    rawScheduleData.version !== LATEST_SCHEDULE_DATA_VERSION\n  ) {\n    return { type: 'loading' };\n  }\n\n  return {\n    type: 'loaded',\n    result: {\n      scheduleData: rawScheduleData,\n      setScheduleData,\n    },\n  };\n}\n","import { useEffect, useState } from 'react';\n\nimport { AccountContextValue } from '../../contexts/account';\nimport { ErrorWithFields, softError } from '../../log';\nimport { LoadingState } from '../../types';\nimport { firebase, isAuthEnabled } from '../firebase';\n\nexport default function useFirebaseAuth(): LoadingState<AccountContextValue> {\n  const [accountState, setAccountState] = useState<AccountContextValue | null>(\n    null\n  );\n\n  // Listen to the Firebase Auth state and set the local state.\n  useEffect(() => {\n    if (!isAuthEnabled) return undefined;\n\n    const unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged((user) => {\n        if (user === null) {\n          setAccountState({ type: 'signedOut' });\n        } else {\n          let provider: string | null = null;\n          if (user.providerData != null) {\n            const firstProviderData = user.providerData[0];\n            if (firstProviderData != null) {\n              provider = firstProviderData.providerId;\n            }\n          }\n          setAccountState({\n            type: 'signedIn',\n            name: user.displayName,\n            email: user.email,\n            id: user.uid,\n            provider,\n            signOut: () => {\n              firebase\n                .auth()\n                .signOut()\n                .catch((err) => {\n                  softError(\n                    new ErrorWithFields({\n                      message: 'call to firebase.auth().signOut() failed',\n                      source: err,\n                    })\n                  );\n                });\n            },\n          });\n        }\n      });\n    return (): void => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n\n  if (!isAuthEnabled) {\n    return {\n      type: 'loaded',\n      result: {\n        type: 'signedOut',\n      },\n    };\n  }\n\n  if (accountState === null) {\n    return { type: 'loading' };\n  }\n\n  return { type: 'loaded', result: accountState };\n}\n","import produce, { Draft, Immutable } from 'immer';\nimport { useCallback } from 'react';\n\nimport { ScheduleData } from '../types';\n\ntype HookResult = {\n  updateScheduleData: (\n    applyDraft: (draft: Draft<ScheduleData>) => void | Immutable<ScheduleData>\n  ) => void;\n};\n\n/**\n * Constructs the Immer producer\n * from the raw schedule data state setter.\n * Returns a referentially stable callback function\n * that can be used to update the schedule data using an immer draft:\n * https://immerjs.github.io/immer/produce/\n */\nexport default function useScheduleDataProducer({\n  setScheduleData,\n}: {\n  setScheduleData: (\n    next: ((current: ScheduleData) => ScheduleData) | ScheduleData\n  ) => void;\n}): HookResult {\n  const updateScheduleData = useCallback(\n    (applyDraft: (draft: Draft<ScheduleData>) => void): void =>\n      // Here, we use the callback API for the setter function\n      // returned by `useState` so that we don't have to re-generate\n      // the callback when the state changes\n      setScheduleData((current: ScheduleData) => {\n        // Use `produce` from Immer to combine the current state\n        // & caller-supplied callback that modifies the current state\n        // to produce the next state\n        return produce(current, applyDraft);\n      }),\n    [setScheduleData]\n  );\n\n  return { updateScheduleData };\n}\n","import produce, { Immutable, Draft, castDraft } from 'immer';\nimport { useEffect, useCallback } from 'react';\n\nimport { ErrorWithFields, softError } from '../../log';\nimport { LoadingState } from '../../types';\nimport {\n  ScheduleData,\n  TermScheduleData,\n  defaultTermScheduleData,\n} from '../types';\n\n/**\n * Gets the current term schedule data based on the current term.\n * If the term schedule data for the current term doesn't exist,\n * then this hook also initializes it to an empty value.\n */\nexport default function useExtractTermScheduleData({\n  currentTerm,\n  scheduleData,\n  updateScheduleData,\n}: {\n  currentTerm: string;\n  scheduleData: Immutable<ScheduleData>;\n  updateScheduleData: (\n    applyDraft: (draft: Draft<ScheduleData>) => void | Immutable<ScheduleData>\n  ) => void;\n}): LoadingState<{\n  termScheduleData: Immutable<TermScheduleData>;\n  // This function allows the term schedule data to be edited in 1 of 2 ways:\n  // 1. the draft parameter is mutated, and the function returns nothing/void\n  // 2. the draft parameter is not mutated\n  //    (it can still be used, just not mutated)\n  //    and the function returns the new state to use.\n  //    This is similar to a traditional setState callback\n  updateTermScheduleData: (\n    applyDraft: (\n      draft: Draft<TermScheduleData>\n    ) => void | Immutable<TermScheduleData>\n  ) => void;\n}> {\n  // Ensure that there is a valid term schedule data object for the term\n  useEffect(() => {\n    const currentTermScheduleData = scheduleData.terms[currentTerm];\n    const correctedTermScheduleData =\n      currentTermScheduleData === undefined\n        ? defaultTermScheduleData\n        : currentTermScheduleData;\n\n    if (correctedTermScheduleData !== currentTermScheduleData) {\n      updateScheduleData((draft) => {\n        draft.terms[currentTerm] = castDraft(correctedTermScheduleData);\n      });\n    }\n  }, [currentTerm, scheduleData.terms, updateScheduleData]);\n\n  const currentTermScheduleData = scheduleData.terms[currentTerm];\n\n  // Create a nested update callback for just the term's schedule data.\n  // This should only escape this function\n  // when `currentTermScheduleData` is not undefined\n  const updateTermScheduleData = useCallback(\n    (\n      applyDraft: (\n        draft: Draft<TermScheduleData>\n      ) => void | Immutable<TermScheduleData>\n    ): void => {\n      updateScheduleData((draft) => {\n        const currentTermScheduleDataDraft = draft.terms[currentTerm];\n        if (currentTermScheduleDataDraft === undefined) {\n          softError(\n            new ErrorWithFields({\n              message:\n                'updateTermScheduleData called on term that does not exist',\n              fields: {\n                currentTerm,\n                currentTermScheduleData,\n                allTermsInData: Object.keys(draft.terms),\n              },\n            })\n          );\n          return;\n        }\n\n        draft.terms[currentTerm] = produce(\n          currentTermScheduleDataDraft,\n          (termScheduleData) => castDraft(applyDraft(termScheduleData))\n        );\n      });\n    },\n    [currentTerm, currentTermScheduleData, updateScheduleData]\n  );\n\n  if (currentTermScheduleData === undefined) {\n    return { type: 'loading' };\n  }\n\n  return {\n    type: 'loaded',\n    result: {\n      termScheduleData: currentTermScheduleData,\n      updateTermScheduleData,\n    },\n  };\n}\n","import axios from 'axios';\nimport { useEffect, useState, useRef } from 'react';\n\nimport { Oscar } from '../beans';\nimport { ErrorWithFields, softError } from '../../log';\nimport { CrawlerTermData, LoadingState } from '../../types';\nimport {\n  exponentialBackoff,\n  isAxiosNetworkError,\n  sleep,\n} from '../../utils/misc';\nimport Cancellable from '../../utils/cancellable';\n\nconst constructTermDataUrl = (term: string): string =>\n  `https://gt-scheduler.github.io/crawler/${term}.json`;\n\n// Number of minutes between re-downloads of the oscar data\nconst REFRESH_INTERVAL_MIN = 15;\n\n/**\n * Downloads the crawled data from Oscar that the crawler prepared\n * for the given term.\n * Repeatedly attempts to load in the case of errors,\n * and cancels any in-flight downloads if the parent context is unmounted\n * or the term is changed.\n * Once loaded, this also attempts to update the data every 15 minutes\n * in case the crawler has run again and there is updated data.\n * @param term - The term to fetch crawler data for\n */\nexport default function useDownloadOscarData(\n  term: string\n): LoadingState<Oscar> {\n  const [state, setState] = useState<LoadingState<Oscar>>({\n    type: 'loading',\n  });\n\n  // Keep a ref of the latest loaded Oscar\n  // to check if it is any newer than the current one.\n  const loadedOscarRef = useRef<Oscar | null>(null);\n\n  // Fetch the current term's crawler information\n  useEffect(() => {\n    const loadOperation = new Cancellable();\n    const url = constructTermDataUrl(term);\n\n    async function loadAndRefresh(): Promise<void> {\n      let isFirst = true;\n      while (!loadOperation.isCancelled) {\n        // Load the oscar data, showing errors only if this is the first time\n        // it is being loaded (otherwise, just log errors\n        // but don't disrupt the user). This is to prevent\n        // a background refresh from showing an error screen\n        // in the middle of a session.\n        // `load` will return early if it is cancelled\n        await load({ initialLoad: isFirst });\n        if (loadOperation.isCancelled) return;\n\n        // Sleep for the refresh interval,\n        // exiting early if cancelled\n        const promise = sleep({ amount_ms: REFRESH_INTERVAL_MIN * 60 * 1000 });\n        const result = await loadOperation.perform(promise);\n        if (result.cancelled) {\n          return;\n        }\n\n        isFirst = false;\n      }\n    }\n\n    async function load({\n      initialLoad,\n    }: {\n      initialLoad: boolean;\n    }): Promise<void> {\n      if (initialLoad) {\n        setState({\n          type: 'loading',\n        });\n      }\n\n      let attemptNumber = 1;\n      while (!loadOperation.isCancelled) {\n        try {\n          const promise = axios.get<CrawlerTermData>(url);\n          const result = await loadOperation.perform(promise);\n          if (result.cancelled) {\n            return;\n          }\n\n          const json = result.value.data;\n\n          // If the data is the same as the currently loaded data,\n          // skip loading it\n          if (\n            loadedOscarRef.current !== null &&\n            new Date(json.updatedAt).getTime() ===\n              loadedOscarRef.current?.updatedAt.getTime()\n          ) {\n            // Skip this update\n            return;\n          }\n\n          const oscar = new Oscar(json, term);\n          setState({\n            type: 'loaded',\n            result: oscar,\n          });\n          loadedOscarRef.current = oscar;\n\n          return;\n        } catch (err) {\n          // Report the error to Sentry if not a network error\n          if (!isAxiosNetworkError(err)) {\n            softError(\n              new ErrorWithFields({\n                message: 'error fetching crawler data',\n                source: err,\n                fields: {\n                  term,\n                  url,\n                },\n              })\n            );\n          }\n\n          if (initialLoad) {\n            // Flag that an error has occurred\n            setState({\n              type: 'error',\n              error:\n                err instanceof Error\n                  ? err\n                  : new ErrorWithFields({\n                      message: 'an error occurred while fetching crawler data',\n                      source: err,\n                    }),\n              stillLoading: true,\n              overview: String(err),\n            });\n          }\n        }\n\n        // Sleep for an exponential backoff between each retry\n        await exponentialBackoff(attemptNumber);\n        attemptNumber += 1;\n      }\n    }\n\n    loadAndRefresh().catch((err) => {\n      softError(\n        new ErrorWithFields({\n          message: 'error loading and refreshing oscar data',\n          source: err,\n          fields: {\n            term,\n            url,\n          },\n        })\n      );\n    });\n\n    // Cancel the background load when this cleans up\n    return (): void => {\n      loadOperation.cancel();\n    };\n  }, [term, setState]);\n\n  // If we are about to start a new background load\n  // after the term changed, then don't return a loaded Oscar\n  if (state.type === 'loaded' && state.result.term !== term) {\n    return { type: 'loading' };\n  }\n\n  return state;\n}\n","import produce, { Immutable, Draft, castDraft } from 'immer';\nimport { useEffect, useCallback } from 'react';\n\nimport { ErrorWithFields, softError } from '../../log';\nimport { LoadingState } from '../../types';\nimport { lexicographicCompare } from '../../utils/misc';\nimport {\n  TermScheduleData,\n  defaultSchedule,\n  ScheduleVersion,\n  generateScheduleVersionId,\n} from '../types';\n\n/**\n * Gets the current schedule version from the term schedule data,\n * ensuring that there is a valid current version selected.\n * If the current version isn't valid,\n * then this hook switches to a random existing version.\n * If there are no versions, then this hook automatically creates\n * an empty schedule version called 'Primary' and sets it as the current one.\n */\nexport default function useExtractScheduleVersion({\n  termScheduleData,\n  updateTermScheduleData,\n  currentVersionRaw,\n  setVersion,\n}: {\n  termScheduleData: Immutable<TermScheduleData>;\n  updateTermScheduleData: (\n    applyDraft: (\n      draft: Draft<TermScheduleData>\n    ) => void | Immutable<TermScheduleData>\n  ) => void;\n  currentVersionRaw: string;\n  setVersion: (next: string) => void;\n}): LoadingState<{\n  currentVersion: string;\n  scheduleVersion: Immutable<ScheduleVersion>;\n  // This function allows the schedule version to be edited in 1 of 2 ways:\n  // 1. the draft parameter is mutated, and the function returns nothing/void\n  // 2. the draft parameter is not mutated\n  //    (it can still be used, just not mutated)\n  //    and the function returns the new state to use.\n  //    This is similar to a traditional setState callback\n  updateScheduleVersion: (\n    applyDraft: (\n      draft: Draft<ScheduleVersion>\n    ) => void | Immutable<ScheduleVersion>\n  ) => void;\n}> {\n  // Switch the version to any other version if the current one is invalid.\n  // If there are no versions, then create a new one called 'Primary'\n  const maybeCurrentScheduleVersion =\n    termScheduleData.versions[currentVersionRaw] ?? null;\n  useEffect(() => {\n    if (maybeCurrentScheduleVersion === null) {\n      updateTermScheduleData((draft) => {\n        // Make sure the schedule isn't on the draft either\n        if (draft.versions[currentVersionRaw] == null) {\n          if (Object.keys(draft.versions).length === 0) {\n            // Create a new version called 'Primary'\n            const id = generateScheduleVersionId();\n            draft.versions[id] = {\n              name: 'Primary',\n              createdAt: new Date().toISOString(),\n              schedule: castDraft(defaultSchedule),\n            };\n            setVersion(id);\n          } else {\n            // Set the current version to the first one,\n            // sorted by their createdAt time\n            const allVersions = Object.entries(draft.versions).sort(\n              ([, a], [, b]) => lexicographicCompare(a.createdAt, b.createdAt)\n            );\n            setVersion(allVersions[0]?.[0] as string);\n          }\n        }\n      });\n    }\n  }, [\n    currentVersionRaw,\n    maybeCurrentScheduleVersion,\n    updateTermScheduleData,\n    setVersion,\n  ]);\n\n  // Create a nested update callback for just the schedule version.\n  // This should only escape this function\n  // when `maybeCurrentScheduleVersion` is not null\n  const updateScheduleVersion = useCallback(\n    (\n      applyDraft: (\n        draft: Draft<ScheduleVersion>\n      ) => void | Immutable<ScheduleVersion>\n    ): void => {\n      updateTermScheduleData((draft) => {\n        const currentScheduleVersionDraft =\n          draft.versions[currentVersionRaw] ?? null;\n        if (currentScheduleVersionDraft === null) {\n          softError(\n            new ErrorWithFields({\n              message:\n                'updateScheduleVersion called with invalid current schedule version; ignoring',\n              fields: {\n                currentVersionRaw,\n                currentScheduleVersion: null,\n              },\n            })\n          );\n          return;\n        }\n\n        draft.versions[currentVersionRaw] = produce(\n          currentScheduleVersionDraft,\n          (subDraft) => castDraft(applyDraft(subDraft))\n        );\n      });\n    },\n    [updateTermScheduleData, currentVersionRaw]\n  );\n\n  if (maybeCurrentScheduleVersion === null) {\n    return {\n      type: 'loading',\n    };\n  }\n\n  return {\n    type: 'loaded',\n    result: {\n      currentVersion: currentVersionRaw,\n      scheduleVersion: maybeCurrentScheduleVersion,\n      updateScheduleVersion,\n    },\n  };\n}\n","import produce, { Immutable, Draft, original, castDraft } from 'immer';\nimport React, { useCallback, useMemo } from 'react';\n\nimport {\n  ScheduleContextValue,\n  TermsContext,\n  ScheduleContext,\n} from '../../contexts';\nimport { AccountContext, AccountContextValue } from '../../contexts/account';\nimport { Oscar } from '../../data/beans';\nimport useVersionActions from '../../data/hooks/useVersionActions';\nimport {\n  Schedule,\n  defaultSchedule,\n  TermScheduleData,\n  ScheduleVersion,\n  ScheduleData,\n} from '../../data/types';\nimport { lexicographicCompare } from '../../utils/misc';\nimport {\n  StageLoadUIState,\n  StageLoadTerms,\n  StageEnsureValidTerm,\n  StageLoadAccount,\n  StageLoadRawScheduleDataHybrid,\n  StageMigrateScheduleData,\n  StageCreateScheduleDataProducer,\n  StageExtractTermScheduleData,\n  StageLoadOscarData,\n  StageExtractScheduleVersion,\n  StageSkeletonProps,\n} from './stages';\n\nexport type DataLoaderProps = {\n  children: React.ReactNode;\n};\n\n/**\n * Handles loading all relevant data and provide valid values\n * for the Terms, Term, and Account contexts before rendering its `children`.\n * Works by having a series of \"stages\" implemented as components,\n * where each stage doesn't render its children until its ready.\n * Until then, they won't run the function passed in to their `children` prop\n * and will instead show an intermediate loading state,\n * complete with an app \"skeleton\" that includes the footer/header.\n */\nexport default function DataLoader({\n  children,\n}: DataLoaderProps): React.ReactElement {\n  return (\n    <StageLoadUIState>\n      {({\n        // The values gotten from `StageLoadUIState` are \"raw\"--\n        // they may not point to valid terms/versions.\n        // As such, we use the two `StageExtract...` components\n        // to maintain the invariant that there are valid terms/versions,\n        // and the output of those stages are the \"non-raw\" versions\n        // of `currentTermRaw` and `currentVersionRaw`.\n        currentTerm: currentTermRaw,\n        setTerm,\n        currentVersion: currentVersionRaw,\n        setVersion,\n      }): React.ReactElement => (\n        <StageLoadTerms>\n          {({ terms }): React.ReactElement => (\n            <StageEnsureValidTerm\n              terms={terms}\n              setTerm={setTerm}\n              currentTermRaw={currentTermRaw}\n            >\n              {({ currentTerm }): React.ReactElement => {\n                // From here down, we can pass\n                // the `termsState` value to the `skeletonProps`\n                // prop on each stage to allow the user to switch terms\n                // even as the rest of the app is loading.\n                const termsState = {\n                  terms,\n                  onChangeTerm: setTerm,\n                  currentTerm,\n                };\n                return (\n                  <StageLoadAccount skeletonProps={{ termsState }}>\n                    {({ accountState }): React.ReactElement => (\n                      <GroupLoadScheduleData\n                        accountState={accountState}\n                        skeletonProps={{ termsState, accountState }}\n                      >\n                        {({\n                          scheduleData,\n                          updateScheduleData,\n                        }): React.ReactElement => (\n                          <StageExtractTermScheduleData\n                            skeletonProps={{ termsState, accountState }}\n                            currentTerm={currentTerm}\n                            scheduleData={scheduleData}\n                            updateScheduleData={updateScheduleData}\n                          >\n                            {({\n                              termScheduleData,\n                              updateTermScheduleData,\n                            }): React.ReactElement => (\n                              <StageLoadOscarData\n                                skeletonProps={{ termsState, accountState }}\n                                term={currentTerm}\n                              >\n                                {({ oscar }): React.ReactElement => (\n                                  <StageExtractScheduleVersion\n                                    skeletonProps={{ termsState, accountState }}\n                                    currentVersionRaw={currentVersionRaw}\n                                    setVersion={setVersion}\n                                    termScheduleData={termScheduleData}\n                                    updateTermScheduleData={\n                                      updateTermScheduleData\n                                    }\n                                  >\n                                    {({\n                                      currentVersion,\n                                      scheduleVersion,\n                                      updateScheduleVersion,\n                                    }): React.ReactElement => (\n                                      <ContextProvider\n                                        terms={terms}\n                                        currentTerm={currentTerm}\n                                        setTerm={setTerm}\n                                        currentVersion={currentVersion}\n                                        setVersion={setVersion}\n                                        oscar={oscar}\n                                        scheduleVersion={scheduleVersion}\n                                        updateScheduleVersion={\n                                          updateScheduleVersion\n                                        }\n                                        termScheduleData={termScheduleData}\n                                        updateTermScheduleData={\n                                          updateTermScheduleData\n                                        }\n                                        accountState={accountState}\n                                      >\n                                        {children}\n                                      </ContextProvider>\n                                    )}\n                                  </StageExtractScheduleVersion>\n                                )}\n                              </StageLoadOscarData>\n                            )}\n                          </StageExtractTermScheduleData>\n                        )}\n                      </GroupLoadScheduleData>\n                    )}\n                  </StageLoadAccount>\n                );\n              }}\n            </StageEnsureValidTerm>\n          )}\n        </StageLoadTerms>\n      )}\n    </StageLoadUIState>\n  );\n}\n\n// Private sub-components\n\ntype GroupLoadScheduleDataProps = {\n  skeletonProps?: StageSkeletonProps;\n  accountState: AccountContextValue;\n  children: (props: {\n    scheduleData: Immutable<ScheduleData>;\n    updateScheduleData: (\n      applyDraft: (draft: Draft<ScheduleData>) => void | Immutable<ScheduleData>\n    ) => void;\n  }) => React.ReactNode;\n};\n\n/**\n * Groups together stages related to loading schedule data\n * and migrating it as needed.\n */\nfunction GroupLoadScheduleData({\n  skeletonProps,\n  accountState,\n  children,\n}: GroupLoadScheduleDataProps): React.ReactElement {\n  return (\n    <StageLoadRawScheduleDataHybrid\n      skeletonProps={skeletonProps}\n      accountState={accountState}\n    >\n      {({ rawScheduleData, setRawScheduleData }): React.ReactElement => (\n        <StageMigrateScheduleData\n          skeletonProps={skeletonProps}\n          rawScheduleData={rawScheduleData}\n          setRawScheduleData={setRawScheduleData}\n        >\n          {({ scheduleData, setScheduleData }): React.ReactElement => (\n            <StageCreateScheduleDataProducer setScheduleData={setScheduleData}>\n              {({ updateScheduleData }): React.ReactElement => (\n                <>{children({ scheduleData, updateScheduleData })}</>\n              )}\n            </StageCreateScheduleDataProducer>\n          )}\n        </StageMigrateScheduleData>\n      )}\n    </StageLoadRawScheduleDataHybrid>\n  );\n}\n\ntype ContextProviderProps = {\n  terms: string[];\n  currentTerm: string;\n  setTerm: (next: string) => void;\n  currentVersion: string;\n  setVersion: (next: string) => void;\n  oscar: Oscar;\n  scheduleVersion: Immutable<ScheduleVersion>;\n  updateScheduleVersion: (\n    applyDraft: (\n      draft: Draft<ScheduleVersion>\n    ) => void | Immutable<ScheduleVersion>\n  ) => void;\n  termScheduleData: Immutable<TermScheduleData>;\n  updateTermScheduleData: (\n    applyDraft: (\n      draft: Draft<TermScheduleData>\n    ) => void | Immutable<TermScheduleData>\n  ) => void;\n  accountState: AccountContextValue;\n  children: React.ReactNode;\n};\n\n/**\n * Handles making all loaded data available to the rest of the app\n * via the contexts `TermsContext`, `ScheduleContext`, and `AccountContext`.\n * Additionally, this function memoizes the context values\n * as well as any derived values that go into them.\n */\nfunction ContextProvider({\n  terms,\n  currentTerm,\n  setTerm,\n  currentVersion,\n  setVersion,\n  oscar,\n  scheduleVersion,\n  updateScheduleVersion,\n  termScheduleData,\n  updateTermScheduleData,\n  accountState,\n  children,\n}: ContextProviderProps): React.ReactElement {\n  // Create a `updateSchedule` function\n  const updateSchedule = useCallback(\n    (\n      applyDraft: (draft: Draft<Schedule>) => void | Immutable<Schedule>\n    ): void => {\n      updateScheduleVersion((draft) => {\n        draft.schedule = produce(draft.schedule, (subDraft) =>\n          castDraft(applyDraft(subDraft))\n        );\n      });\n    },\n    [updateScheduleVersion]\n  );\n\n  // Create a `patchSchedule` function\n  const patchSchedule = useCallback(\n    (patch: Partial<Schedule>): void => {\n      updateSchedule((draft) => ({\n        ...(original(draft) ?? defaultSchedule),\n        ...patch,\n      }));\n    },\n    [updateSchedule]\n  );\n\n  // Derive the list of all version names (and IDs)\n  // in the order of their `createdAt` field.\n  const allVersionNames = useMemo<{ id: string; name: string }[]>(() => {\n    const versions = Object.entries(termScheduleData.versions).map(\n      ([versionId, { name }]) => ({ id: versionId, name })\n    );\n    versions.sort((a, b) => {\n      const createdAtA = termScheduleData.versions[a.id]?.createdAt ?? '';\n      const createdAtB = termScheduleData.versions[b.id]?.createdAt ?? '';\n      return lexicographicCompare(createdAtA, createdAtB);\n    });\n    return versions;\n  }, [termScheduleData.versions]);\n\n  // Get all version-related actions\n  const { addNewVersion, deleteVersion, renameVersion } = useVersionActions({\n    updateTermScheduleData,\n    setVersion,\n    currentVersion,\n  });\n\n  // Memoize the context values so that they are stable\n  const scheduleContextValue = useMemo<ScheduleContextValue>(\n    () => [\n      {\n        term: currentTerm,\n        oscar,\n        currentVersion,\n        allVersionNames,\n        ...castDraft(scheduleVersion.schedule),\n      },\n      {\n        setTerm,\n        patchSchedule,\n        updateSchedule,\n        setCurrentVersion: setVersion,\n        addNewVersion,\n        deleteVersion,\n        renameVersion,\n      },\n    ],\n    [\n      currentTerm,\n      oscar,\n      currentVersion,\n      allVersionNames,\n      scheduleVersion.schedule,\n      setTerm,\n      patchSchedule,\n      updateSchedule,\n      setVersion,\n      addNewVersion,\n      deleteVersion,\n      renameVersion,\n    ]\n  );\n\n  return (\n    <TermsContext.Provider value={terms}>\n      <ScheduleContext.Provider value={scheduleContextValue}>\n        <AccountContext.Provider value={accountState}>\n          {children}\n        </AccountContext.Provider>\n      </ScheduleContext.Provider>\n    </TermsContext.Provider>\n  );\n}\n","import { castDraft, Draft, Immutable } from 'immer';\nimport { useCallback } from 'react';\n\nimport { softError, ErrorWithFields } from '../../log';\nimport {\n  defaultSchedule,\n  generateScheduleVersionId,\n  TermScheduleData,\n} from '../types';\n\nexport type HookResult = {\n  addNewVersion: (name: string, select?: boolean) => void;\n  deleteVersion: (id: string) => void;\n  renameVersion: (id: string, newName: string) => void;\n};\n\n/**\n * Creates a small handful of semantic actions that update the schedule versions\n * from the base `updateTermScheduleData` callback.\n */\nexport default function useVersionActions({\n  updateTermScheduleData,\n  setVersion,\n  currentVersion,\n}: {\n  updateTermScheduleData: (\n    applyDraft: (\n      draft: Draft<TermScheduleData>\n    ) => void | Immutable<TermScheduleData>\n  ) => void;\n  setVersion: (next: string) => void;\n  currentVersion: string;\n}): HookResult {\n  // Create an `addNewVersion` function\n  const addNewVersion = useCallback(\n    (name: string, select = false): void => {\n      const id = generateScheduleVersionId();\n      updateTermScheduleData((draft) => {\n        draft.versions[id] = {\n          name,\n          schedule: castDraft(defaultSchedule),\n          createdAt: new Date().toISOString(),\n        };\n      });\n      if (select) {\n        setVersion(id);\n      }\n    },\n    [updateTermScheduleData, setVersion]\n  );\n\n  // Create a `deleteVersion` function\n  const deleteVersion = useCallback(\n    (id: string): void => {\n      updateTermScheduleData((draft) => {\n        if (draft.versions[id] == null) {\n          softError(\n            new ErrorWithFields({\n              message:\n                'deleteVersion called with non-existent version id; ignoring',\n              fields: {\n                allVersionNames: Object.entries(draft.versions).map(\n                  ([versionId, { name }]) => ({ id: versionId, name })\n                ),\n                versionCount: Object.keys(draft.versions).length,\n                id,\n              },\n            })\n          );\n          return;\n        }\n\n        // Check to see if we also need to assign a new current version.\n        // This is the case if the current index is the deleted index,\n        // in which case we want to select the previous item\n        // (this is arbitrary; it's just our decided behavior)\n        if (currentVersion === id) {\n          const entries = Object.entries(draft.versions);\n          delete draft.versions[id];\n\n          if (\n            entries.length === 0 ||\n            Object.keys(draft.versions).length === 0\n          ) {\n            // The versions list is empty:\n            // create a new version called 'Primary'\n            const newId = generateScheduleVersionId();\n            draft.versions[newId] = {\n              name: 'Primary',\n              createdAt: new Date().toISOString(),\n              schedule: castDraft(defaultSchedule),\n            };\n            setVersion(newId);\n            return;\n          }\n\n          // Select the previous version if we can\n          // by sorting all versions by their createdAt date.\n          const sorted = entries.sort(([, a], [, b]) =>\n            a.createdAt > b.createdAt ? 0 : 1\n          );\n          const indexOfDeleting = sorted.findIndex(\n            ([versionId]) => versionId === id\n          );\n          if (indexOfDeleting === -1) return;\n\n          const newIndex = Math.max(indexOfDeleting - 1, 0);\n\n          // If the remaining versions isn't empty,\n          // then this index must be valid\n          setVersion(sorted[newIndex]?.[0] ?? '');\n        } else {\n          // Just delete the version\n          delete draft.versions[id];\n        }\n      });\n    },\n    [updateTermScheduleData, setVersion, currentVersion]\n  );\n\n  // Create a `renameVersion` function\n  const renameVersion = useCallback(\n    (id: string, newName: string): void => {\n      updateTermScheduleData((draft) => {\n        const existingDraft = draft.versions[id];\n        if (existingDraft === undefined) {\n          softError(\n            new ErrorWithFields({\n              message:\n                \"renameVersion called with current version name that doesn't exist; ignoring\",\n              fields: {\n                allVersionNames: Object.entries(draft.versions).map(\n                  ([versionId, { name }]) => ({ id: versionId, name })\n                ),\n                id,\n                versionCount: Object.keys(draft.versions).length,\n                newName,\n              },\n            })\n          );\n          return;\n        }\n\n        existingDraft.name = newName;\n      });\n    },\n    [updateTermScheduleData]\n  );\n\n  return { addNewVersion, deleteVersion, renameVersion };\n}\n","import Cookies from 'js-cookie';\nimport { useEffect, useMemo } from 'react';\nimport useLocalStorageState from 'use-local-storage-state';\n\nimport { ThemeContextValue } from '../../contexts';\nimport { isTheme } from '../../types';\n\nconst THEME_LOCAL_STORAGE_KEY = 'theme';\n\n/**\n * Loads the current UI theme (light/dark) from local storage,\n * falling back to the legacy cookies-based storage if necessary.\n * Returns a memoized value of the theme context.\n */\nexport default function useThemeFromStorage(): ThemeContextValue {\n  const [theme, setTheme] = useLocalStorageState(\n    THEME_LOCAL_STORAGE_KEY,\n    () => {\n      const legacyValue = Cookies.get(THEME_LOCAL_STORAGE_KEY);\n      if (legacyValue !== undefined) return legacyValue;\n      return 'dark';\n    }\n  );\n  const correctedTheme = isTheme(theme) ? theme : 'dark';\n\n  // Ensure that the stored theme is valid; otherwise reset it\n  useEffect(() => {\n    if (theme !== correctedTheme) {\n      setTheme(correctedTheme);\n    }\n  }, [theme, correctedTheme, setTheme]);\n\n  const themeContextValue = useMemo<ThemeContextValue>(\n    () => [correctedTheme, setTheme],\n    [correctedTheme, setTheme]\n  );\n\n  return themeContextValue;\n}\n","import React from 'react';\n\nimport { classes } from '../../utils/misc';\nimport Feedback from '../Feedback';\nimport useBodyClass from '../../hooks/useBodyClass';\nimport { ThemeContext } from '../../contexts';\nimport InformationModal from '../InformationModal';\nimport ErrorBoundary from '../ErrorBoundary';\nimport { ReactErrorDetails } from '../ErrorDetails';\nimport ErrorDisplay from '../ErrorDisplay';\nimport ErrorHeader from '../ErrorHeader';\nimport { AppNavigation } from './navigation';\nimport AppDataLoader from '../AppDataLoader';\nimport { AppSkeleton, SkeletonContent, AppContent } from './content';\nimport useThemeFromStorage from '../../data/hooks/useThemeFromStorage';\nimport { DESKTOP_BREAKPOINT } from '../../constants';\nimport useScreenWidth from '../../hooks/useScreenWidth';\n\nimport 'react-virtualized/styles.css';\nimport './stylesheet.scss';\n\nexport default function App(): React.ReactElement {\n  // Grab the current theme (light/dark) from local storage.\n  // This hook returns the memoized context value.\n  const themeContextValue = useThemeFromStorage();\n\n  // Add the current theme as a class on the body element\n  useBodyClass(themeContextValue[0]);\n\n  return (\n    <ThemeContext.Provider value={themeContextValue}>\n      <AppCSSRoot>\n        <ErrorBoundary\n          fallback={(error, errorInfo): React.ReactElement => (\n            <AppSkeleton>\n              <SkeletonContent>\n                <ErrorHeader />\n                <ErrorDisplay\n                  errorDetails={\n                    <ReactErrorDetails error={error} errorInfo={errorInfo} />\n                  }\n                >\n                  <div>\n                    There was en error somewhere in the core application logic\n                    and it can&apos;t continue.\n                  </div>\n                  <div>\n                    Try refreshing the page to see if it fixes the issue.\n                  </div>\n                </ErrorDisplay>\n              </SkeletonContent>\n            </AppSkeleton>\n          )}\n        >\n          <AppNavigation>\n            {/* AppDataLoader is in charge of ensuring that there are valid values\n                for the Terms and Term contexts before rendering its children.\n                If any data is still loading,\n                then it displays an \"app skeleton\" with a spinner.\n                If there was an error while loading\n                then it displays an error screen. */}\n            <AppDataLoader>\n              <AppContent />\n            </AppDataLoader>\n          </AppNavigation>\n          <Feedback />\n\n          {/* Display a popup when first visiting the site */}\n          <InformationModal />\n        </ErrorBoundary>\n      </AppCSSRoot>\n    </ThemeContext.Provider>\n  );\n}\n\n// Private sub-components\n\ntype AppCSSRootProps = {\n  children?: React.ReactNode;\n};\n\n/**\n * Mounts the outer `div.App` that is used to control global CSS selectors\n * such as `.App.mobile`.\n */\nfunction AppCSSRoot({ children }: AppCSSRootProps): React.ReactElement {\n  // Re-render when the page is re-sized to become mobile/desktop\n  // (desktop is >= 1024 px wide)\n  const mobile = !useScreenWidth(DESKTOP_BREAKPOINT);\n\n  return <div className={classes('App', mobile && 'mobile')}>{children}</div>;\n}\n","import { useLayoutEffect } from 'react';\n\n/**\n * Adds the given class(es) to the HTML `body` element\n * when this hook runs.\n */\nexport default function useBodyClass(className: string | string[]): void {\n  useLayoutEffect(() => {\n    if (typeof className === 'string') {\n      document.body.classList.add(className);\n    } else {\n      document.body.classList.add(...className);\n    }\n\n    return (): void => {\n      if (typeof className === 'string') {\n        document.body.classList.remove(className);\n      } else {\n        document.body.classList.remove(...className);\n      }\n    };\n  }, [className]);\n}\n","import React from 'react';\n\nexport type Theme = 'light' | 'dark';\n\nexport function isTheme(theme: string): theme is Theme {\n  switch (theme) {\n    case 'light':\n    case 'dark':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport type LoadingState<T> =\n  | LoadingStateLoaded<T>\n  | LoadingStateLoading\n  | LoadingStateError\n  | LoadingStateCustom;\nexport type LoadingStateLoaded<T> = { type: 'loaded'; result: T };\nexport type LoadingStateLoading = { type: 'loading' };\nexport type LoadingStateError = {\n  type: 'error';\n  overview: React.ReactNode;\n  error: Error;\n  stillLoading: boolean;\n};\nexport type LoadingStateCustom = {\n  type: 'custom';\n  contents: React.ReactNode;\n};\n\nexport type NonEmptyArray<T> = [T, ...T[]];\n\n// Declare (better) types for the ICS library\nexport type ICS = {\n  download(filename: string, ext?: string): string | false;\n  addEvent(\n    subject: string,\n    description: string,\n    location: string,\n    begin: string | Date,\n    stop: string | Date,\n    rrule: unknown\n  ): false | string[];\n};\n\nexport interface Combination {\n  crns: string[];\n  startMap: Record<string, number>;\n  endMap: Record<string, number>;\n}\n\nexport interface Period {\n  start: number;\n  end: number;\n}\n\nexport interface DateRange {\n  from: Date;\n  to: Date;\n}\n\nexport interface Location {\n  lat: number;\n  long: number;\n}\n\nexport interface Meeting {\n  period: Period | undefined;\n  days: string[];\n  where: string;\n  location: Location | null;\n  instructors: string[];\n  dateRange: DateRange;\n}\n\n// Note: if this type ever changes,\n// the course gpa cache needs to be invalidated\n// (by changing the local storage key).\n// See `src/data/beans/Course.ts` for the implementation of the cache.\nexport interface CourseGpa {\n  averageGpa?: number;\n  [instructor: string]: number | undefined;\n}\n\n// Meeting type (imported as `CrawlerMeeting`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\nexport type CrawlerMeeting = [\n  /**\n   * an integer index into `caches.periods`,\n   * specifying the class's start/end times\n   */\n  periodIndex: number,\n  /**\n   * a string specifying what days the class takes place on\n   * (e.g. `\"MW\"` or `\"TR\"`)\n   */\n  days: string,\n  /**\n   * a string giving the room/location where the course will be held\n   * (e.g. `\"College of Business 224\"`)\n   */\n  room: string,\n  /**\n   * an integer index into `caches.locations`,\n   * containing the latitude and longitude for a given course\n   */\n  locationIndex: number,\n  /**\n   * an array of strings listing all the instructors for this section,\n   * along with a 1-character code to mark the principal instructor\n   * (e.g. `[\"Katarzyna Rubar (P)\"]`)\n   */\n  instructors: string[],\n  /**\n   * an integer index into `caches.dateRanges`,\n   * specifying the start/end date of the class this semester\n   */\n  dateRangeIndex: number\n];\n\n// Section type (imported as `CrawlerSection`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains  information about the course's section\n * (**Note** that this is an **array** (tuple), not an object)\n */\nexport type CrawlerSection = [\n  /**\n   * the CRN number of this section of the course\n   */\n  crn: string,\n  /**\n   * array of information about the section's meeting\n   * times/places/professors/etc.; in most cases, this array will only contain\n   * 1 item\n   */\n  meetings: CrawlerMeeting[],\n  /**\n   * integer number of credit hours this course is worth\n   */\n  creditHours: number,\n  /**\n   * integer index into `caches.scheduleTypes`\n   */\n  scheduleTypeIndex: number,\n  /**\n   * integer index into `caches.campuses`,\n   * specifying which campus the class is being taught at\n   */\n  campusIndex: number,\n  /**\n   * array of integer indices into `caches.attributes`,\n   * specifying any additional attributes the course has\n   */\n  attributeIndices: number[],\n  /**\n   * integer index into caches.gradeBases,\n   * specifying the grading scheme of the class\n   */\n  gradeBaseIndex: number\n];\n\n// Prerequisite types:\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\nexport type MinimumGrade = 'A' | 'B' | 'C' | 'D' | 'T';\nexport type PrerequisiteCourse = { id: string; grade?: MinimumGrade };\nexport type PrerequisiteClause = PrerequisiteCourse | PrerequisiteSet;\nexport type PrerequisiteOperator = 'and' | 'or';\nexport type PrerequisiteSet = [\n  operator: PrerequisiteOperator,\n  ...clauses: PrerequisiteClause[]\n];\n\n/**\n * Recursive data structure that is the sequence of all prerequisites in prefix\n * notation, parsed from the information on Oscar\n *\n * @example\n *\n * ```json\n   [\n     \"and\",\n     [\n       \"or\",\n       {\"id\":\"CS 3510\", \"grade\":\"C\"},\n       {\"id\":\"CS 3511\", \"grade\":\"C\"}\n     ]\n   ]\n * ```\n */\nexport type CrawlerPrerequisites = PrerequisiteSet | [];\n\n// Caches type (imported as `CrawlerCaches`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains data shared by multiple class descriptions\n */\nexport interface CrawlerCaches {\n  /**\n   * List of all the different time ranges that classes can be offered at\n   * (e.g. `\"8:00 am - 8:50 am\"`;\n   * there is one `\"TBA\"` string for classes whose time is \"To Be Announced\")\n   */\n  periods: string[];\n  /**\n   * List of all possible start/ending dates that classes can be offered between\n   * (e.g. `\"Aug 17, 2020 - Dec 10, 2020\"`)\n   */\n  dateRanges: string[];\n  /**\n   * List of the different types of classes for each time block\n   * (e.g. `\"Lecture*\"`, `\"Recitation*\"`, or `\"Internship/Practicum*\"`)\n   */\n  scheduleTypes: string[];\n  /**\n   * List of the different GT campus locations that a class could take place at\n   * (e.g. `\"Georgia Tech-Atlanta *\"` or `\"Online\"`)\n   */\n  campuses: string[];\n  /**\n   * List of other miscellaneous attributes that can be associated with a class\n   * (e.g. `\"Hybrid Course\"`, `\"Honors Program\"`, or `\"Capstone\"`)\n   */\n  attributes: string[];\n  /**\n   * List of the different kinds of grading schemes a course can have\n   */\n  gradeBases: string[];\n  /**\n   * List of the different building locations a class can be at\n   */\n  locations: Location[];\n}\n\n// Course type (imported as `CrawlerCourse`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Contains information about a single class\n * (**Note** that this is an **array** (tuple), not an object)\n */\nexport type CrawlerCourse = [\n  /**\n   * the full, human-readable name of the course (e.g. \"Accounting I\")\n   */\n  fullName: string,\n  /**\n   * a JSON object with information about each section of the course;\n   * the section IDs are the keys (`\"A\"`, `\"B\"`, `\"S2\"`, etc.)\n   */\n  sections: Record<string, CrawlerSection>,\n  /**\n     * a tree of prerequisite classes and the necessary grades in them\n     * (using boolean expressions in prefix order)\n     *\n     * @example\n     *\n     * ```json\n       [\n         \"and\",\n         [\n            \"or\",\n            {\"id\":\"CS 3510\", \"grade\":\"C\"},\n            {\"id\":\"CS 3511\", \"grade\":\"C\"}\n         ]\n       ]\n     * ```\n     */\n  // ! Type had `undefined` explicitly added to ensure we check when accessing\n  prerequisites: CrawlerPrerequisites | undefined,\n  /**\n   * Description pulled from Oscar\n   */\n  description: string | null\n];\n\n// TermData type (imported as `CrawlerTermData`):\n// Copied from https://github.com/gt-scheduler/crawler/blob/master/src/types.ts\n\n/**\n * Primary JSON object returned by the API.\n * See https://github.com/GTBitsOfGood/gt-scheduler/issues/1#issuecomment-694326220\n * for more info on the shape\n */\nexport interface CrawlerTermData {\n  /**\n   * Contains information about each class;\n   * this makes up the vast bulk of the resultant JSON.\n   * The course IDs are the keys (`\"ACCT 2101\"`, `\"CS 2340\"`, etc.)\n   */\n  courses: Record<string, CrawlerCourse>;\n  /**\n   * Contains data shared by multiple class descriptions\n   */\n  caches: CrawlerCaches;\n  /**\n   * Contains the time this JSON file was retrieved\n   */\n  // ! Type changed to `string` since this is what the JSON will be\n  updatedAt: string;\n  /**\n   * Version number for the term data\n   */\n  version: number;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Sentry from '@sentry/react';\nimport { Integrations } from '@sentry/tracing';\n\nimport App from './components/App';\n\nimport 'normalize.css';\nimport './stylesheet.scss';\n\n// Only initialize sentry on production\nif (process.env.NODE_ENV === 'production') {\n  // eslint-disable-next-line no-console\n  console.log('Initializing Sentry');\n  Sentry.init({\n    dsn: 'https://8955ef982197469e97c7644a8c090db1@o552970.ingest.sentry.io/5679614',\n    integrations: [new Integrations.BrowserTracing()],\n    tracesSampleRate: 1.0,\n    ignoreErrors: ['ResizeObserver loop limit exceeded'],\n    release: process.env['REACT_APP_SENTRY_VERSION'],\n  });\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}